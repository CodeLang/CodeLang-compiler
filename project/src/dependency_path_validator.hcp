class
❪"systems"❫
❪"utilities"❫
❪"dependency_paths"❫
⚯

⚞⚟
◀public: static▶ Code_Graph ☀Validate_Paths(Dependency_Paths & dependency_paths)❰


    //warn and remove any paths that don't exist
    Warn_And_Remove_Unreachable_Paths(dependency_paths.recursive);
    Warn_And_Remove_Unreachable_Paths(dependency_paths.single);
❱

◀private: static▶ void ☀Warn_And_Remove_Unreachable_Paths(std::vector<std::string> & paths)❰

    //use "erase_if:" when available
    paths.erase( std::remove_if(paths.begin(), paths.end(), [](std::string path){
        return true;
    }), paths.end() );
❱