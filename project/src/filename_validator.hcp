class
❪"systems"❫
❪"utilities"❫
⚯
❪"filename_exception"❫
⚞⚟
◀public: static▶ void ☀Validate_Input_File(std::string const& path_to_file)❰

    Make_Sure_File_Has_The_Proper_File_Extension(path_to_file);
    Make_Sure_File_Exists(path_to_file);
    Make_Sure_File_Contains_Valid_Chars(path_to_file);
❱
◀private: static▶ void ☀Make_Sure_File_Has_The_Proper_File_Extension(std::string const& path_to_file)❰

    if (!File_Has_Extension(path_to_file,FILE_EXTENSION)){
        throw Filename_Exception(path_to_file + " must have a ." + FILE_EXTENSION + " file extension");
    }
❱
◀private: static▶ void ☀Make_Sure_File_Exists(std::string const& path_to_file)❰

    if (!File_Exists(path_to_file)){
        throw Filename_Exception(path_to_file + " not found");
    }
❱
◀private: static▶ void ☀Make_Sure_File_Contains_Valid_Chars(std::string const& path_to_file)❰

    if (!Has_Only_Alpha_Letters_And_Underscores(As_Removed_Suffix(path_to_file))){
        throw Filename_Exception(path_to_file + " can only contain alpha characters and underscores");
    }
❱

◀private: static ▶ const std::string ☀FILE_EXTENSION ◖= "CodeLang"◗;