class
❪"systems"❫
❪"utilities"❫
❪"CodeLang_structure"❫
⚯

//printers
❪"meta_block_printer"❫
❪"header_printer"❫
❪"methods_printer"❫

⚞⚟


◀public: static▶ void ☀Print_Global_Interface_File(CodeLang_Structure const& structure)❰

    std::wofstream out(As_Capital_And_Pushed_Together(structure.name) + ".h");
    Meta_Block_Printer::Print(structure.name,out,"Interface",structure.meta);
    Print_Beginning_Of_Header_Include_Gaurd(structure.name,out);
    Header_Printer::Print_Global_Interface_Headers(structure.name,out,structure.imports.interface_dependencies);
    Methods_Printer::Print_Global_Interface_Methods(out,structure.methods.methods);
    Possibly_Print_Close_Markers(out,structure.name,structure.meta,true);
❱
◀public: static▶ void ☀Print_Global_Implementation_File(CodeLang_Structure const& structure)❰

    std::wofstream out(As_Capital_And_Pushed_Together(structure.name) + ".c");
    Meta_Block_Printer::Print(structure.name,out,"Implementation",structure.meta);
    Header_Printer::Print_Global_Implementation_Headers(structure.name,out,structure.imports.implementation_dependencies);
    Methods_Printer::Print_Global_Implementation_Methods(out,structure.methods.methods);
    Possibly_Print_Close_Markers(out,structure.name,structure.meta,false);
❱

//begin wrapper
◀public: static▶ void ☀Print_Beginning_Of_Header_Include_Gaurd(std::string file_name,std::wofstream & out)❰
        Print_To_Stream_With_Newline(out,"#ifndef " + As_Capital_And_Pushed_Together(file_name) + "H");
        Print_To_Stream_With_Newline(out,"#define " + As_Capital_And_Pushed_Together(file_name) + "H");
        Print_To_Stream_With_Newline(out,"");
❱

//end wrapper
◀private: static▶ void ☀Possibly_Print_Close_Markers(std::wofstream & out, std::string file_name,Meta_Section const& meta, bool is_header)❰

    if (is_header){
        Print_To_Stream_With_Newline(out,"#endif /* " + As_Capital_And_Pushed_Together(file_name) + "H */");
    }
    if (!meta.group_names.empty()){
        Print_To_Stream_With_Newline(out,"///@}");
    }
    Print_To_Stream_With_Newline(out,"");
    
❱