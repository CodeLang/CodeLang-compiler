# Do not edit this file directly.
# It was auto-generated by: code/programs/reflexivity/reflexive_refresh


load("//bazel/deps:third_party_libraries.bzl", "third_party_libraries")
third_party_libraries()
#############################################

load("@aspect_bazel_lib//lib:repositories.bzl", "aspect_bazel_lib_dependencies")

aspect_bazel_lib_dependencies()

# Register the following toolchain to use jq

load("@aspect_bazel_lib//lib:repositories.bzl", "register_jq_toolchains")

register_jq_toolchains()

# Register the following toolchain to use yq

load("@aspect_bazel_lib//lib:repositories.bzl", "register_yq_toolchains")

register_yq_toolchains()


#############################################


#############################################

load("@com_grail_bazel_toolchain//toolchain:deps.bzl", "bazel_toolchain_dependencies")

bazel_toolchain_dependencies()

load("@com_grail_bazel_toolchain//toolchain:rules.bzl", "llvm_toolchain")

llvm_toolchain(
    name = "llvm_toolchain",
    llvm_version = "11.0.0",

    # this sysroot was stolen from the grail_bazel_toolchain discussion.
    # I think its related to the chromium project?  or google somehow?
    # sysroot = {
    #     "linux": "@debian_stretch_amd64_sysroot//:sysroot",
    #     "darwin": "@debian_stretch_amd64_sysroot//:sysroot",
    # },

    # This is a custom built sysroot using a Dockerfile to build
    # needed compiler files
    #sysroot = {
    #    "linux": "@ubuntu_14_04_clang_10_sysroot//:sysroot",
    #    "darwin": "@ubuntu_14_04_clang_10_sysroot//:sysroot",
    #},

    # This is a custom built sysroot using a Dockerfile to build
    # needed compiler files
    sysroot = {
        "linux": "@ubuntu_20_04_clang_11_sysroot//:sysroot",
        "darwin": "@ubuntu_20_04_clang_11_sysroot//:sysroot",
        
        #"linux-x86_64": "@ubuntu_20_04_clang_11_sysroot//:sysroot",
        #"linux-aarch64": "@ubuntu_20_04_clang_11_sysroot//:sysroot",
        #"darwin-x86_64": "@ubuntu_20_04_clang_11_sysroot//:sysroot",
    },
)

load("@llvm_toolchain//:toolchains.bzl", "llvm_register_toolchains")

llvm_register_toolchains()


#############################################

load("@io_bazel_rules_go//go:deps.bzl", "go_register_toolchains", "go_rules_dependencies")
go_rules_dependencies()
go_register_toolchains()


#############################################

load("@bazel_toolchains//repositories:repositories.bzl", bazel_toolchains_repositories = "repositories")
bazel_toolchains_repositories()


#############################################

load("@bazel_gazelle//:deps.bzl", "gazelle_dependencies")
gazelle_dependencies()


#############################################

load("@build_bazel_rules_swift//swift:repositories.bzl","swift_rules_dependencies")
swift_rules_dependencies()


#############################################

load("@rules_java//java:repositories.bzl", "rules_java_dependencies", "rules_java_toolchains")
rules_java_dependencies()
rules_java_toolchains()


#############################################

load("@io_bazel_rules_d//d:d.bzl", "d_repositories")
d_repositories()


#############################################


#############################################

load("@build_stack_rules_proto//cpp:deps.bzl", "cpp_proto_compile")
cpp_proto_compile()


#############################################

load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()


#############################################

load("@com_github_grpc_grpc//bazel:grpc_deps.bzl", "grpc_deps")
grpc_deps()

#load("@com_github_grpc_grpc//bazel:grpc_extra_deps.bzl", "grpc_extra_deps")
#grpc_extra_deps()


#############################################


#############################################


#############################################


#############################################




#############################################


load("@com_github_storypku_bazel_iwyu//bazel:dependencies.bzl", "bazel_iwyu_dependencies")
bazel_iwyu_dependencies()

# You may need to add the following lines.
load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")
bazel_skylib_workspace()



#############################################


load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps()

load("@emsdk//:toolchains.bzl", "register_emscripten_toolchains")
register_emscripten_toolchains()



#############################################

load("@googleapis//:repository_rules.bzl", "switched_rules_by_language")
switched_rules_by_language(
    name = "com_google_googleapis_imports",
    cc = True,
    csharp = False,
    gapic = False,
    go = False,
    grpc = False,
    java = False,
    nodejs = False,
    php = False,
    python = False,
    ruby = False,
)


#############################################

load("@remote_apis//:repository_rules.bzl", remote_apis_switched_rules_by_language = "switched_rules_by_language")
remote_apis_switched_rules_by_language(
    name = "bazel_remote_apis_imports",
    cc = True,
    go = False,
    java = True,
)


#############################################

load("@com_github_nelhage_rules_boost//:boost/boost.bzl", "boost_deps")
boost_deps()


#############################################

load("@bazel_diff//:repositories.bzl", "bazel_diff_dependencies")

bazel_diff_dependencies()

load("@rules_jvm_external//:defs.bzl", "maven_install")
load("@bazel_diff//:artifacts.bzl", "BAZEL_DIFF_MAVEN_ARTIFACTS")

maven_install(
    name = "bazel_diff_maven",
    artifacts = BAZEL_DIFF_MAVEN_ARTIFACTS,
    repositories = [
        "http://uk.maven.org/maven2",
        "https://jcenter.bintray.com/",
    ],
)


#############################################


