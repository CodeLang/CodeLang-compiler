# Do not edit this file directly.
# It was auto-generated by: code/programs/reflexivity/reflexive_refresh


load("//bazel/deps:third_party_libraries.bzl", "third_party_libraries")
third_party_libraries()
#############################################

load("@rules_fuzzing//fuzzing:repositories.bzl", "rules_fuzzing_dependencies")

# Pass jazzer = True to rules_fuzzing_dependencies for Java fuzzing support.
rules_fuzzing_dependencies(jazzer = True)

load("@rules_fuzzing//fuzzing:init.bzl", "rules_fuzzing_init")

rules_fuzzing_init()

#For Java fuzzing support, uncomment the following lines.
load("@jazzer//:repositories.bzl", "jazzer_dependencies")
jazzer_dependencies()
load("@jazzer//:init.bzl", "jazzer_init")
jazzer_init()


#############################################

load("@com_grail_bazel_toolchain//toolchain:deps.bzl", "bazel_toolchain_dependencies")

bazel_toolchain_dependencies()

load("@com_grail_bazel_toolchain//toolchain:rules.bzl", "llvm_toolchain")

llvm_toolchain(
    name = "llvm_toolchain",
    llvm_version = "11.0.0",

    # this sysroot was stolen from the grail_bazel_toolchain discussion.
    # I think its related to the chromium project?  or google somehow?
    # sysroot = {
    #     "linux": "@debian_stretch_amd64_sysroot//:sysroot",
    #     "darwin": "@debian_stretch_amd64_sysroot//:sysroot",
    # },

    # This is a custom built sysroot using a Dockerfile to build
    # needed compiler files
    #sysroot = {
    #    "linux": "@ubuntu_14_04_clang_10_sysroot//:sysroot",
    #    "darwin": "@ubuntu_14_04_clang_10_sysroot//:sysroot",
    #},

    # This is a custom built sysroot using a Dockerfile to build
    # needed compiler files
    sysroot = {
        "linux": "@ubuntu_20_04_clang_11_sysroot//:sysroot",
        "darwin": "@ubuntu_20_04_clang_11_sysroot//:sysroot",
    },
)

load("@llvm_toolchain//:toolchains.bzl", "llvm_register_toolchains")

llvm_register_toolchains()


#############################################

load("@io_bazel_rules_go//go:deps.bzl", "go_register_toolchains", "go_rules_dependencies")
go_rules_dependencies()
go_register_toolchains()


#############################################

load("@bazel_toolchains//repositories:repositories.bzl", bazel_toolchains_repositories = "repositories")
bazel_toolchains_repositories()


#############################################

load("@bazel_gazelle//:deps.bzl", "gazelle_dependencies")
gazelle_dependencies()


#############################################

load("@build_bazel_rules_swift//swift:repositories.bzl","swift_rules_dependencies")
swift_rules_dependencies()


#############################################

load("@io_bazel_rules_rust//rust:repositories.bzl", "rust_repositories")
rust_repositories()


#############################################

load("@build_stack_rules_proto//cpp:deps.bzl", "cpp_proto_compile")
cpp_proto_compile()


#############################################

load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

git_repository(
    name = "com_justbuchanan_rules_qt",
    remote = "https://github.com/justbuchanan/bazel_rules_qt.git",
    branch = "master",
)

load("@com_justbuchanan_rules_qt//:qt_configure.bzl", "qt_configure")

qt_configure()

load("@local_config_qt//:local_qt.bzl", "local_qt_path")

new_local_repository(
    name = "qt",
    build_file = "@com_justbuchanan_rules_qt//:qt.BUILD",
    path = local_qt_path(),
)

load("@com_justbuchanan_rules_qt//tools:qt_toolchain.bzl", "register_qt_toolchains")
register_qt_toolchains()


#############################################

load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()


#############################################

load("@com_github_grpc_grpc//bazel:grpc_deps.bzl", "grpc_deps")
grpc_deps()


#############################################

load("@io_bazel_rules_k8s//k8s:k8s.bzl", "k8s_repositories")

k8s_repositories()

load("@io_bazel_rules_k8s//k8s:k8s_go_deps.bzl", k8s_go_deps = "deps")

k8s_go_deps()


#############################################



load("@rules_appimage//:deps.bzl", "rules_appimage_deps")

rules_appimage_deps()

load("@rules_appimage//:setup.bzl", "rules_appimage_setup")

rules_appimage_setup()


#############################################

load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps()


#############################################

load(
    "@build_bazel_rules_apple//apple:repositories.bzl",
    "apple_rules_dependencies",
)

apple_rules_dependencies()

load(
    "@build_bazel_rules_swift//swift:repositories.bzl",
    "swift_rules_dependencies",
)

swift_rules_dependencies()

load(
    "@build_bazel_rules_swift//swift:extras.bzl",
    "swift_rules_extra_dependencies",
)

swift_rules_extra_dependencies()

load(
    "@build_bazel_apple_support//lib:repositories.bzl",
    "apple_support_dependencies",
)

apple_support_dependencies()



#############################################

load("@googleapis//:repository_rules.bzl", "switched_rules_by_language")
switched_rules_by_language(
    name = "com_google_googleapis_imports",
    cc = True,
    csharp = False,
    gapic = False,
    go = False,
    grpc = False,
    java = False,
    nodejs = False,
    php = False,
    python = False,
    ruby = False,
)


#############################################

load("@remote_apis//:repository_rules.bzl", remote_apis_switched_rules_by_language = "switched_rules_by_language")
remote_apis_switched_rules_by_language(
    name = "bazel_remote_apis_imports",
    cc = True,
    go = False,
    java = True,
)


#############################################

load(
    "@io_bazel_rules_docker//repositories:repositories.bzl",
    container_repositories = "repositories",
)

container_repositories()

load("@io_bazel_rules_docker//repositories:deps.bzl", container_deps = "deps")

container_deps()

load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_pull",
)

container_pull(
    name = "java_base",
    digest = "sha256:deadbeef",
    registry = "gcr.io",
    repository = "distroless/java",
)

load(
    "@io_bazel_rules_docker//cc:image.bzl",
    _cc_image_repos = "repositories",
)

_cc_image_repos()


