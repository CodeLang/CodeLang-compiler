diff --git a/src/ibusenumtypes.h b/src/ibusenumtypes.h
new file mode 100644
index 00000000..702ce6c2
--- /dev/null
+++ b/src/ibusenumtypes.h
@@ -0,0 +1,265 @@
+
+/* This file is generated by glib-mkenums, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */
+
+#ifndef __IBUS_ENUM_TYPES_H__
+#define __IBUS_ENUM_TYPES_H__
+
+#include <glib-object.h>
+
+G_BEGIN_DECLS
+
+/* enumerations from "ibusattribute.h" */
+/**
+ * ibus_attr_type_get_type:
+ * @returns: GType of IBUS_ATTR_TYPE
+ *
+ * Returns the type of IBUS_ATTR_TYPE as GType.
+ */
+GType ibus_attr_type_get_type (void) G_GNUC_CONST;
+
+/**
+ * IBUS_TYPE_ATTR_TYPE:
+ * @returns: GType of IBUS_ATTR_TYPE
+ *
+ * Returns the type of IBUS_ATTR_TYPE as GType.
+ */
+#define IBUS_TYPE_ATTR_TYPE (ibus_attr_type_get_type ())
+/**
+ * ibus_attr_underline_get_type:
+ * @returns: GType of IBUS_ATTR_UNDERLINE
+ *
+ * Returns the type of IBUS_ATTR_UNDERLINE as GType.
+ */
+GType ibus_attr_underline_get_type (void) G_GNUC_CONST;
+
+/**
+ * IBUS_TYPE_ATTR_UNDERLINE:
+ * @returns: GType of IBUS_ATTR_UNDERLINE
+ *
+ * Returns the type of IBUS_ATTR_UNDERLINE as GType.
+ */
+#define IBUS_TYPE_ATTR_UNDERLINE (ibus_attr_underline_get_type ())
+
+/* enumerations from "ibusobject.h" */
+/**
+ * ibus_object_flags_get_type:
+ * @returns: GType of IBUS_OBJECT_FLAGS
+ *
+ * Returns the type of IBUS_OBJECT_FLAGS as GType.
+ */
+GType ibus_object_flags_get_type (void) G_GNUC_CONST;
+
+/**
+ * IBUS_TYPE_OBJECT_FLAGS:
+ * @returns: GType of IBUS_OBJECT_FLAGS
+ *
+ * Returns the type of IBUS_OBJECT_FLAGS as GType.
+ */
+#define IBUS_TYPE_OBJECT_FLAGS (ibus_object_flags_get_type ())
+
+/* enumerations from "ibusproperty.h" */
+/**
+ * ibus_prop_type_get_type:
+ * @returns: GType of IBUS_PROP_TYPE
+ *
+ * Returns the type of IBUS_PROP_TYPE as GType.
+ */
+GType ibus_prop_type_get_type (void) G_GNUC_CONST;
+
+/**
+ * IBUS_TYPE_PROP_TYPE:
+ * @returns: GType of IBUS_PROP_TYPE
+ *
+ * Returns the type of IBUS_PROP_TYPE as GType.
+ */
+#define IBUS_TYPE_PROP_TYPE (ibus_prop_type_get_type ())
+/**
+ * ibus_prop_state_get_type:
+ * @returns: GType of IBUS_PROP_STATE
+ *
+ * Returns the type of IBUS_PROP_STATE as GType.
+ */
+GType ibus_prop_state_get_type (void) G_GNUC_CONST;
+
+/**
+ * IBUS_TYPE_PROP_STATE:
+ * @returns: GType of IBUS_PROP_STATE
+ *
+ * Returns the type of IBUS_PROP_STATE as GType.
+ */
+#define IBUS_TYPE_PROP_STATE (ibus_prop_state_get_type ())
+
+/* enumerations from "ibustypes.h" */
+/**
+ * ibus_modifier_type_get_type:
+ * @returns: GType of IBUS_MODIFIER_TYPE
+ *
+ * Returns the type of IBUS_MODIFIER_TYPE as GType.
+ */
+GType ibus_modifier_type_get_type (void) G_GNUC_CONST;
+
+/**
+ * IBUS_TYPE_MODIFIER_TYPE:
+ * @returns: GType of IBUS_MODIFIER_TYPE
+ *
+ * Returns the type of IBUS_MODIFIER_TYPE as GType.
+ */
+#define IBUS_TYPE_MODIFIER_TYPE (ibus_modifier_type_get_type ())
+/**
+ * ibus_capabilite_get_type:
+ * @returns: GType of IBUS_CAPABILITE
+ *
+ * Returns the type of IBUS_CAPABILITE as GType.
+ */
+GType ibus_capabilite_get_type (void) G_GNUC_CONST;
+
+/**
+ * IBUS_TYPE_CAPABILITE:
+ * @returns: GType of IBUS_CAPABILITE
+ *
+ * Returns the type of IBUS_CAPABILITE as GType.
+ */
+#define IBUS_TYPE_CAPABILITE (ibus_capabilite_get_type ())
+/**
+ * ibus_preedit_focus_mode_get_type:
+ * @returns: GType of IBUS_PREEDIT_FOCUS_MODE
+ *
+ * Returns the type of IBUS_PREEDIT_FOCUS_MODE as GType.
+ */
+GType ibus_preedit_focus_mode_get_type (void) G_GNUC_CONST;
+
+/**
+ * IBUS_TYPE_PREEDIT_FOCUS_MODE:
+ * @returns: GType of IBUS_PREEDIT_FOCUS_MODE
+ *
+ * Returns the type of IBUS_PREEDIT_FOCUS_MODE as GType.
+ */
+#define IBUS_TYPE_PREEDIT_FOCUS_MODE (ibus_preedit_focus_mode_get_type ())
+/**
+ * ibus_orientation_get_type:
+ * @returns: GType of IBUS_ORIENTATION
+ *
+ * Returns the type of IBUS_ORIENTATION as GType.
+ */
+GType ibus_orientation_get_type (void) G_GNUC_CONST;
+
+/**
+ * IBUS_TYPE_ORIENTATION:
+ * @returns: GType of IBUS_ORIENTATION
+ *
+ * Returns the type of IBUS_ORIENTATION as GType.
+ */
+#define IBUS_TYPE_ORIENTATION (ibus_orientation_get_type ())
+/**
+ * ibus_bus_name_flag_get_type:
+ * @returns: GType of IBUS_BUS_NAME_FLAG
+ *
+ * Returns the type of IBUS_BUS_NAME_FLAG as GType.
+ */
+GType ibus_bus_name_flag_get_type (void) G_GNUC_CONST;
+
+/**
+ * IBUS_TYPE_BUS_NAME_FLAG:
+ * @returns: GType of IBUS_BUS_NAME_FLAG
+ *
+ * Returns the type of IBUS_BUS_NAME_FLAG as GType.
+ */
+#define IBUS_TYPE_BUS_NAME_FLAG (ibus_bus_name_flag_get_type ())
+/**
+ * ibus_bus_request_name_reply_get_type:
+ * @returns: GType of IBUS_BUS_REQUEST_NAME_REPLY
+ *
+ * Returns the type of IBUS_BUS_REQUEST_NAME_REPLY as GType.
+ */
+GType ibus_bus_request_name_reply_get_type (void) G_GNUC_CONST;
+
+/**
+ * IBUS_TYPE_BUS_REQUEST_NAME_REPLY:
+ * @returns: GType of IBUS_BUS_REQUEST_NAME_REPLY
+ *
+ * Returns the type of IBUS_BUS_REQUEST_NAME_REPLY as GType.
+ */
+#define IBUS_TYPE_BUS_REQUEST_NAME_REPLY (ibus_bus_request_name_reply_get_type ())
+/**
+ * ibus_bus_start_service_by_name_reply_get_type:
+ * @returns: GType of IBUS_BUS_START_SERVICE_BY_NAME_REPLY
+ *
+ * Returns the type of IBUS_BUS_START_SERVICE_BY_NAME_REPLY as GType.
+ */
+GType ibus_bus_start_service_by_name_reply_get_type (void) G_GNUC_CONST;
+
+/**
+ * IBUS_TYPE_BUS_START_SERVICE_BY_NAME_REPLY:
+ * @returns: GType of IBUS_BUS_START_SERVICE_BY_NAME_REPLY
+ *
+ * Returns the type of IBUS_BUS_START_SERVICE_BY_NAME_REPLY as GType.
+ */
+#define IBUS_TYPE_BUS_START_SERVICE_BY_NAME_REPLY (ibus_bus_start_service_by_name_reply_get_type ())
+/**
+ * ibus_error_get_type:
+ * @returns: GType of IBUS_ERROR
+ *
+ * Returns the type of IBUS_ERROR as GType.
+ */
+GType ibus_error_get_type (void) G_GNUC_CONST;
+
+/**
+ * IBUS_TYPE_ERROR:
+ * @returns: GType of IBUS_ERROR
+ *
+ * Returns the type of IBUS_ERROR as GType.
+ */
+#define IBUS_TYPE_ERROR (ibus_error_get_type ())
+/**
+ * ibus_input_purpose_get_type:
+ * @returns: GType of IBUS_INPUT_PURPOSE
+ *
+ * Returns the type of IBUS_INPUT_PURPOSE as GType.
+ */
+GType ibus_input_purpose_get_type (void) G_GNUC_CONST;
+
+/**
+ * IBUS_TYPE_INPUT_PURPOSE:
+ * @returns: GType of IBUS_INPUT_PURPOSE
+ *
+ * Returns the type of IBUS_INPUT_PURPOSE as GType.
+ */
+#define IBUS_TYPE_INPUT_PURPOSE (ibus_input_purpose_get_type ())
+/**
+ * ibus_input_hints_get_type:
+ * @returns: GType of IBUS_INPUT_HINTS
+ *
+ * Returns the type of IBUS_INPUT_HINTS as GType.
+ */
+GType ibus_input_hints_get_type (void) G_GNUC_CONST;
+
+/**
+ * IBUS_TYPE_INPUT_HINTS:
+ * @returns: GType of IBUS_INPUT_HINTS
+ *
+ * Returns the type of IBUS_INPUT_HINTS as GType.
+ */
+#define IBUS_TYPE_INPUT_HINTS (ibus_input_hints_get_type ())
+
+/* enumerations from "ibusxevent.h" */
+/**
+ * ibus_xevent_type_get_type:
+ * @returns: GType of IBUS_XEVENT_TYPE
+ *
+ * Returns the type of IBUS_XEVENT_TYPE as GType.
+ */
+GType ibus_xevent_type_get_type (void) G_GNUC_CONST;
+
+/**
+ * IBUS_TYPE_XEVENT_TYPE:
+ * @returns: GType of IBUS_XEVENT_TYPE
+ *
+ * Returns the type of IBUS_XEVENT_TYPE as GType.
+ */
+#define IBUS_TYPE_XEVENT_TYPE (ibus_xevent_type_get_type ())
+G_END_DECLS
+
+#endif /* __IBUS_ENUM_TYPES_H__ */
+
+/* Generated data ends here */
+
diff --git a/src/ibusmarshalers.h b/src/ibusmarshalers.h
new file mode 100644
index 00000000..342bb6da
--- /dev/null
+++ b/src/ibusmarshalers.h
@@ -0,0 +1,216 @@
+/* This file is generated by glib-genmarshal, do not modify it. This code is licensed under the same license as the containing project. Note that it links to GLib, so must comply with the LGPL linking clauses. */
+#ifndef ___IBUS_MARSHAL_MARSHAL_H__
+#define ___IBUS_MARSHAL_MARSHAL_H__
+
+#include <glib-object.h>
+
+G_BEGIN_DECLS
+
+/* VOID:VOID (./ibusmarshalers.list:1) */
+#define _ibus_marshal_VOID__VOID	g_cclosure_marshal_VOID__VOID
+
+/* VOID:OBJECT (./ibusmarshalers.list:2) */
+#define _ibus_marshal_VOID__OBJECT	g_cclosure_marshal_VOID__OBJECT
+
+/* VOID:POINTER (./ibusmarshalers.list:3) */
+#define _ibus_marshal_VOID__POINTER	g_cclosure_marshal_VOID__POINTER
+
+/* VOID:STRING (./ibusmarshalers.list:4) */
+#define _ibus_marshal_VOID__STRING	g_cclosure_marshal_VOID__STRING
+
+/* VOID:STRING,INT (./ibusmarshalers.list:5) */
+G_GNUC_INTERNAL
+void _ibus_marshal_VOID__STRING_INT (GClosure     *closure,
+                                     GValue       *return_value,
+                                     guint         n_param_values,
+                                     const GValue *param_values,
+                                     gpointer      invocation_hint,
+                                     gpointer      marshal_data);
+
+/* VOID:STRING,UINT (./ibusmarshalers.list:6) */
+G_GNUC_INTERNAL
+void _ibus_marshal_VOID__STRING_UINT (GClosure     *closure,
+                                      GValue       *return_value,
+                                      guint         n_param_values,
+                                      const GValue *param_values,
+                                      gpointer      invocation_hint,
+                                      gpointer      marshal_data);
+
+/* BOOLEAN:POINTER (./ibusmarshalers.list:7) */
+G_GNUC_INTERNAL
+void _ibus_marshal_BOOLEAN__POINTER (GClosure     *closure,
+                                     GValue       *return_value,
+                                     guint         n_param_values,
+                                     const GValue *param_values,
+                                     gpointer      invocation_hint,
+                                     gpointer      marshal_data);
+
+/* BOOLEAN:POINTER,POINTER (./ibusmarshalers.list:8) */
+G_GNUC_INTERNAL
+void _ibus_marshal_BOOLEAN__POINTER_POINTER (GClosure     *closure,
+                                             GValue       *return_value,
+                                             guint         n_param_values,
+                                             const GValue *param_values,
+                                             gpointer      invocation_hint,
+                                             gpointer      marshal_data);
+
+/* BOOLEAN:UINT,UINT (./ibusmarshalers.list:9) */
+G_GNUC_INTERNAL
+void _ibus_marshal_BOOLEAN__UINT_UINT (GClosure     *closure,
+                                       GValue       *return_value,
+                                       guint         n_param_values,
+                                       const GValue *param_values,
+                                       gpointer      invocation_hint,
+                                       gpointer      marshal_data);
+
+/* BOOLEAN:UINT,UINT,UINT (./ibusmarshalers.list:10) */
+G_GNUC_INTERNAL
+void _ibus_marshal_BOOLEAN__UINT_UINT_UINT (GClosure     *closure,
+                                            GValue       *return_value,
+                                            guint         n_param_values,
+                                            const GValue *param_values,
+                                            gpointer      invocation_hint,
+                                            gpointer      marshal_data);
+
+/* BOOLEAN:ULONG (./ibusmarshalers.list:11) */
+G_GNUC_INTERNAL
+void _ibus_marshal_BOOLEAN__ULONG (GClosure     *closure,
+                                   GValue       *return_value,
+                                   guint         n_param_values,
+                                   const GValue *param_values,
+                                   gpointer      invocation_hint,
+                                   gpointer      marshal_data);
+
+/* VOID:INT,INT,INT,INT (./ibusmarshalers.list:12) */
+G_GNUC_INTERNAL
+void _ibus_marshal_VOID__INT_INT_INT_INT (GClosure     *closure,
+                                          GValue       *return_value,
+                                          guint         n_param_values,
+                                          const GValue *param_values,
+                                          gpointer      invocation_hint,
+                                          gpointer      marshal_data);
+
+/* VOID:UINT,UINT (./ibusmarshalers.list:13) */
+G_GNUC_INTERNAL
+void _ibus_marshal_VOID__UINT_UINT (GClosure     *closure,
+                                    GValue       *return_value,
+                                    guint         n_param_values,
+                                    const GValue *param_values,
+                                    gpointer      invocation_hint,
+                                    gpointer      marshal_data);
+
+/* VOID:INT,UINT (./ibusmarshalers.list:14) */
+G_GNUC_INTERNAL
+void _ibus_marshal_VOID__INT_UINT (GClosure     *closure,
+                                   GValue       *return_value,
+                                   guint         n_param_values,
+                                   const GValue *param_values,
+                                   gpointer      invocation_hint,
+                                   gpointer      marshal_data);
+
+/* VOID:UINT,UINT,UINT (./ibusmarshalers.list:15) */
+G_GNUC_INTERNAL
+void _ibus_marshal_VOID__UINT_UINT_UINT (GClosure     *closure,
+                                         GValue       *return_value,
+                                         guint         n_param_values,
+                                         const GValue *param_values,
+                                         gpointer      invocation_hint,
+                                         gpointer      marshal_data);
+
+/* VOID:OBJECT,UINT,BOOLEAN (./ibusmarshalers.list:16) */
+G_GNUC_INTERNAL
+void _ibus_marshal_VOID__OBJECT_UINT_BOOLEAN (GClosure     *closure,
+                                              GValue       *return_value,
+                                              guint         n_param_values,
+                                              const GValue *param_values,
+                                              gpointer      invocation_hint,
+                                              gpointer      marshal_data);
+
+/* VOID:OBJECT,UINT,BOOLEAN,UINT (./ibusmarshalers.list:17) */
+G_GNUC_INTERNAL
+void _ibus_marshal_VOID__OBJECT_UINT_BOOLEAN_UINT (GClosure     *closure,
+                                                   GValue       *return_value,
+                                                   guint         n_param_values,
+                                                   const GValue *param_values,
+                                                   gpointer      invocation_hint,
+                                                   gpointer      marshal_data);
+
+/* VOID:OBJECT,UINT,UINT (./ibusmarshalers.list:18) */
+G_GNUC_INTERNAL
+void _ibus_marshal_VOID__OBJECT_UINT_UINT (GClosure     *closure,
+                                           GValue       *return_value,
+                                           guint         n_param_values,
+                                           const GValue *param_values,
+                                           gpointer      invocation_hint,
+                                           gpointer      marshal_data);
+
+/* VOID:OBJECT,BOOLEAN (./ibusmarshalers.list:19) */
+G_GNUC_INTERNAL
+void _ibus_marshal_VOID__OBJECT_BOOLEAN (GClosure     *closure,
+                                         GValue       *return_value,
+                                         guint         n_param_values,
+                                         const GValue *param_values,
+                                         gpointer      invocation_hint,
+                                         gpointer      marshal_data);
+
+/* VOID:BOXED,BOOLEAN (./ibusmarshalers.list:20) */
+G_GNUC_INTERNAL
+void _ibus_marshal_VOID__BOXED_BOOLEAN (GClosure     *closure,
+                                        GValue       *return_value,
+                                        guint         n_param_values,
+                                        const GValue *param_values,
+                                        gpointer      invocation_hint,
+                                        gpointer      marshal_data);
+
+/* VOID:BOXED (./ibusmarshalers.list:21) */
+#define _ibus_marshal_VOID__BOXED	g_cclosure_marshal_VOID__BOXED
+
+/* VOID:STRING,STRING,VARIANT (./ibusmarshalers.list:22) */
+G_GNUC_INTERNAL
+void _ibus_marshal_VOID__STRING_STRING_VARIANT (GClosure     *closure,
+                                                GValue       *return_value,
+                                                guint         n_param_values,
+                                                const GValue *param_values,
+                                                gpointer      invocation_hint,
+                                                gpointer      marshal_data);
+
+/* VOID:STRING,STRING,STRING (./ibusmarshalers.list:23) */
+G_GNUC_INTERNAL
+void _ibus_marshal_VOID__STRING_STRING_STRING (GClosure     *closure,
+                                               GValue       *return_value,
+                                               guint         n_param_values,
+                                               const GValue *param_values,
+                                               gpointer      invocation_hint,
+                                               gpointer      marshal_data);
+
+/* VOID:UINT (./ibusmarshalers.list:24) */
+#define _ibus_marshal_VOID__UINT	g_cclosure_marshal_VOID__UINT
+
+/* VOID:UINT,POINTER (./ibusmarshalers.list:25) */
+#define _ibus_marshal_VOID__UINT_POINTER	g_cclosure_marshal_VOID__UINT_POINTER
+
+/* VOID:POINTER,UINT (./ibusmarshalers.list:26) */
+G_GNUC_INTERNAL
+void _ibus_marshal_VOID__POINTER_UINT (GClosure     *closure,
+                                       GValue       *return_value,
+                                       guint         n_param_values,
+                                       const GValue *param_values,
+                                       gpointer      invocation_hint,
+                                       gpointer      marshal_data);
+
+/* VOID:VARIANT (./ibusmarshalers.list:27) */
+#define _ibus_marshal_VOID__VARIANT	g_cclosure_marshal_VOID__VARIANT
+
+/* OBJECT:STRING (./ibusmarshalers.list:28) */
+G_GNUC_INTERNAL
+void _ibus_marshal_OBJECT__STRING (GClosure     *closure,
+                                   GValue       *return_value,
+                                   guint         n_param_values,
+                                   const GValue *param_values,
+                                   gpointer      invocation_hint,
+                                   gpointer      marshal_data);
+
+
+G_END_DECLS
+
+#endif /* ___IBUS_MARSHAL_MARSHAL_H__ */
