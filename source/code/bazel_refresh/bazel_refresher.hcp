class
❪string❫
❪vector❫
❪"code/bazel_refresh/conversion_test/bazel_conversion_tests"❫
⚯
❪"code/utilities/filesystem/paths/lib"❫

⚞⚟

◀public: static▶ void ☀Refresh()❰
    
    
    Bazel_Conversion_Tests x;
    x.tests.emplace_back(Empty_Unilang_To_Protobuf());
    x.tests.emplace_back(Empty_Unilang_To_Protobuf_To_Cpp_Object());
    
    
    
    //change the root of the repo
    //Set_Path("/home/thickey/Desktop/everything");
❱

◀private: static▶ Bazel_Conversion_Test ☀Empty_Unilang_To_Protobuf()❰
    Bazel_Conversion_Test test;
    test.transcompilation_chain.emplace_back(Artifact_Type::UNILANG);
    test.transcompilation_chain.emplace_back(Artifact_Type::PROTOBUF);
    test.feature_categorization.emplace_back("empty");
    //test.
    return test;
❱
◀private: static▶ Bazel_Conversion_Test ☀Empty_Unilang_To_Protobuf_To_Cpp_Object()❰
    Bazel_Conversion_Test test;
    test.transcompilation_chain.emplace_back(Artifact_Type::UNILANG);
    test.transcompilation_chain.emplace_back(Artifact_Type::PROTOBUF);
    test.transcompilation_chain.emplace_back(Artifact_Type::CPP);
    test.feature_categorization.emplace_back("empty");
    return test;
❱