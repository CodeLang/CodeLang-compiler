􏶞g􏶟
􏷲Verify host connection the the PLC􏷱
􏷰An interface that holds task execution until we can confirm a connection to the PLC.
When we restart the VME, the PLC is not immediately reachable from the host.  
The manual solution was to wait and ping the PLC until a connection could be made.  
This does the same thing.􏷯
􏷮PLC􏷭
􏷬Trevor Hickey􏷫

􏶔s􏶕􏶒Defs􏶓􏶖USES: BOOL􏶗
􏶔s􏶕􏶒pingLib.h􏶓􏶖USES: ping(), PING_OPT_SILENT􏶗
􏶔􏶕􏶒PlcData􏶓􏶖USES: PLC_IP􏶗
􏶔􏶕􏶒TaskManager􏶓􏶖USES: TaskDelay()􏶗

􏵺The message to show after the PLC has timed out􏵻
􏵸printed to the terminal in between calls to ping()􏵹
􏵐-􏵑􏵾plc timeout message􏵿􏵼"waiting for PLC...\n"􏵽

􏵺The amount of time to wait in between ping calls􏵻
􏵸delays the task for the specified amount of time􏵹
􏵐-􏵑􏵾delay between pings sec􏵿􏵖seconds􏵗􏵼2.0f􏵽


􏷘+􏷗􏷒wait until plc is reachable􏷑
􏷐Stops execution on the current task until we can verify a connection to the PLC􏷏
􏶠Pings the PLC to verify a connection􏶡
􏶴
    􏶲verify a connection to the PLC􏶱
    BOOL bReachable = 􏵲plc responds to ping􏵳);
    
    􏶲continue pinging until we receive a response􏶱
    􏵲continue pinging if plc is unavailable􏵳&bReachable);
􏶳

􏷘-􏷗􏷒plc responds to ping􏷑
􏷐Stops execution on the current task until we can verify a connection to the PLC􏷏
􏶠returns true if the PLC responds to a ping.  False if it does not􏶡
􏶚m􏶛􏶾BOOL􏶽􏶼responds􏶻􏶺The PLC has successfully responded to the ping􏶹
􏶴
    􏶲one packet send.  silents plc output.􏶱
    􏶲we NOT the return because STATUS: OK == 0􏶱
    return !ping(PLC_IP,1,PING_OPT_SILENT);
􏶳

􏷘-􏷗􏷒continue pinging if plc is unavailable􏷑
􏷐continues pinging if the initial ping did not receive a response􏷏
􏶠a timeout message and a delay will take place between pings􏶡
􏶜mr􏶝􏷆BOOL􏷅􏷄reachable􏷃􏷀whether or not the PLC has responded􏶿
􏶴
    􏶲continue pinging until we receive a response􏶱
    while (!*􏵶reachable􏵷){
        􏵲print timeout message and delay􏵳);
        *􏵶reachable􏵷 = 􏵲plc responds to ping􏵳);
    }
􏶳

􏷘-􏷗􏷒print timeout message and delay􏷑
􏷐prints a timeout message and delays the task􏷏
􏶠the timeout message and delay duration are specified elsewhere􏶡
􏶴
    􏶲print delay message and delay a specified amount of seconds􏶱
    printf(PLC_TIMEOUT_MESSAGE);
    TaskDelay(DELAY_BETWEEN_PINGS_SEC * 1000);
􏶳