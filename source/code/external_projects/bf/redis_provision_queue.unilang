􏶞o􏶟
􏷲a redis queue designed to hold particularly provisioned elements􏷱
􏷰a redis queue is an implementation of a queue data structure which internally uses a redis cluster to distribute the data across shards.
Its important to know that the lifetime of the queue persists before and after the queue data structure is created (since it exists in redis)
Therefore, two redis queues with the same name, would in fact be the same underlying redis queue

This redis queue comes with a list of required provisions
if the queue element does not meet the required provisions, it should not be used with the queue

Provision queues are intended to represent particular operations that should only be processed by particular workers.
An example use case for this would be to have two dedicated provision queues for CPU and GPU operations.
CPU/GPU requirements would be determined through the remote api's command platform properties.
We designate provision queues to have a set of "required provisions" (which match the platform properties).
This allows specific workers to be chosen and specific operations to be queued􏷯
􏷞build􏷝􏷞buildfarm􏷝􏷞instance􏷝􏷞shard􏷝􏷞queues􏷝

􏷤􏷣􏷦com.google.common.collect.LinkedHashMultimap􏷥
􏷤􏷣􏷦com.google.common.collect.Lists􏷥
􏷤􏷣􏷦com.google.common.collect.SetMultimap􏷥
􏷤􏷣􏷦java.util.List􏷥
􏷤􏷣􏷦build.buildfarm.instance.shard.queues.RedisQueue􏷥


􏶨the required provisions of the queue􏶧
􏶦The required provisions to allow workers and operations to be added to the queue.  
These often match the remote api's command platform properties􏶥
􏶘+􏶙􏶰􏶯􏶮SetMultimap<String, String>􏶭􏶬required provisions􏶫􏶪􏶩

􏶨the queue itself􏶧
􏶦a redis queue designed to hold particularly provisioned elements􏶥
􏶘+􏶙􏶰􏶯􏶮RedisQueue􏶭􏶬queue􏶫􏶪􏶩