class
❪"code/ide/settings/ide_settings"❫
⚯
❪"code/utilities/graphics/imgui/ui/ui_renders"❫
⚞⚟





◀public: static▶ void ☀Move_As_Needed(Ide_Settings & settings)❰

    int character_jump_forward = 6;
    int character_jump_backward = 6;
    int character_jump_up = 6;
    int character_jump_down = 6;

    if (Right_Key_Pressed()){
        settings.cursor_position.x += character_jump_forward;
    }
    if (Left_Key_Pressed()){
        settings.cursor_position.x -= character_jump_backward;
    }
    if (Up_Key_Pressed()){
        settings.cursor_position.y -= character_jump_up;
    }
    if (Down_Key_Pressed()){
        settings.cursor_position.y += character_jump_down;
    }
❱
◀private: static▶ bool ☀Left_Key_Pressed()❰
    auto key_index = ImGui::GetKeyIndex(ImGuiKey_LeftArrow);
    if (ImGui::IsKeyPressed(key_index,true)){
        return true;
    }
    return false;
❱
◀private: static▶ bool ☀Right_Key_Pressed()❰
    auto key_index = ImGui::GetKeyIndex(ImGuiKey_RightArrow);
    if (ImGui::IsKeyPressed(key_index,true)){
        return true;
    }
    return false;
❱
◀private: static▶ bool ☀Up_Key_Pressed()❰
    auto key_index = ImGui::GetKeyIndex(ImGuiKey_UpArrow);
    if (ImGui::IsKeyPressed(key_index,true)){
        return true;
    }
    return false;
❱
◀private: static▶ bool ☀Down_Key_Pressed()❰
    auto key_index = ImGui::GetKeyIndex(ImGuiKey_DownArrow);
    if (ImGui::IsKeyPressed(key_index,true)){
        return true;
    }
    return false;
❱