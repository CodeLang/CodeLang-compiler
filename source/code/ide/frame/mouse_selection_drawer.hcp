class
❪"code/ide/settings/ide_settings"❫
❪"code/utilities/graphics/imgui/mechanics"❫
❪"code/ide/frame/frame_elements"❫
❪"code/utilities/mouse/state/mouse_state_getter"❫
⚯
⚞⚟


◀public: static▶ void ☀Draw(Frame_Elements & elements, Ide_Settings & settings)❰
    
    auto mouse_state = Mouse_State_Getter::Get();
    
    //drawing box highlights when clicking and dragging the mouse
    Handle_Mouse_Button(elements,mouse_state.pos,mouse_state.left,settings.mouse.left_selection);
    Handle_Mouse_Button(elements,mouse_state.pos,mouse_state.right,settings.mouse.right_selection);
    
    //changing the viewing anchor when clicking and dragging the mouse
    if (mouse_state.right.clicked){
        settings.prev_position = mouse_state.pos;
    }
    if (mouse_state.right.down){
        Adjust_The_View_Anchor(settings,mouse_state.pos);
    }
❱

◀private: static▶ void ☀Handle_Mouse_Button(Frame_Elements & elements, Position const& mouse_pos, Mouse_Button_State const& state, Mouse_Selection & selection)❰

    if (state.clicked){
        selection.shape.pos = mouse_pos;
    }
    
    if (state.down){
        selection.shape.shape.dimensions.width = mouse_pos.x - selection.shape.pos.x;
        selection.shape.shape.dimensions.height = mouse_pos.y - selection.shape.pos.y;
        elements.types.emplace_back(selection.shape);
    }
    
    if (state.released){
        selection.shape.shape.dimensions.width = 0;
        selection.shape.shape.dimensions.height = 0;
    }
❱

◀private: static▶ void ☀Adjust_The_View_Anchor(Ide_Settings & settings, Position const& mouse_pos)❰

        auto x_change = mouse_pos.x - settings.prev_position.x;
        auto y_change = mouse_pos.y - settings.prev_position.y;
        
        settings.view_anchor.x += x_change;
        settings.view_anchor.y += y_change;
        
        
        settings.prev_position.x = mouse_pos.x;
        settings.prev_position.y = mouse_pos.y;
❱