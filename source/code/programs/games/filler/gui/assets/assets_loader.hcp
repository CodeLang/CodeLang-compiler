class
⚯
⚞⚟

◀public: static▶ Assets ☀Load(Game_State const& state) ❰
    Assets x;
    
    
    Font_Loader::Load_Font(x.main_font,Droid_Sans_Mono::Get());
    
    //title sequence
    x.p1.name.setFont(x.main_font);
    x.p1.name.setCharacterSize(50);
    x.p1.name.setFillColor(state.letter_color);
    x.p1.name.setOutlineColor(sf::Color(255,255,255));
    x.p1.name.setOutlineThickness(1);
    x.p1.name.setString("Teresa:");
    x.p1.name.setPosition(100*10,100*2);
    
    x.p1.score.setFont(x.main_font);
    x.p1.score.setCharacterSize(50);
    x.p1.score.setFillColor(state.letter_color);
    x.p1.score.setOutlineColor(sf::Color(255,255,255));
    x.p1.score.setOutlineThickness(1);
    x.p1.score.setString("1");
    x.p1.score.setPosition((100*10)+x.p1.name.getLocalBounds().width+20,100*2);
    
    x.p2.name.setFont(x.main_font);
    x.p2.name.setCharacterSize(50);
    x.p2.name.setFillColor(state.letter_color);
    x.p2.name.setOutlineColor(sf::Color(255,255,255));
    x.p2.name.setOutlineThickness(1);
    x.p2.name.setString("Trevor:");
    x.p2.name.setPosition(100*10,100*3);
    
    x.p2.score.setFont(x.main_font);
    x.p2.score.setCharacterSize(50);
    x.p2.score.setFillColor(state.letter_color);
    x.p2.score.setOutlineColor(sf::Color(255,255,255));
    x.p2.score.setOutlineThickness(1);
    x.p2.score.setString("1");
    x.p2.score.setPosition((100*10)+x.p2.name.getLocalBounds().width+20,100*3);
    
    Adjust_Player_Selection(x,state);
    
    return x;
    
    
❱

◀public: static▶ void ☀Adjust_Player_Selection(Assets & x, Game_State const& state) ❰

    int square_size = 25;
    
    x.p1.pointer = sf::RectangleShape(sf::Vector2f(square_size , square_size ));
    x.p2.pointer = sf::RectangleShape(sf::Vector2f(square_size , square_size ));
    
    x.p1.pointer.setPosition((100*10) + square_size + (square_size*(state.p1.current_selection+1)),(100*2)+square_size+50);
    x.p2.pointer.setPosition((100*10) + square_size + (square_size*(state.p2.current_selection+1)),(100*3)+square_size+50);
    
    x.p1.pointer.setFillColor(sf::Color::Transparent);
    x.p1.pointer.setOutlineThickness(2);
    x.p1.pointer.setOutlineColor(state.letter_color);
    
    x.p2.pointer.setFillColor(sf::Color::Transparent);
    x.p2.pointer.setOutlineThickness(2);
    x.p2.pointer.setOutlineColor(state.letter_color);
❱