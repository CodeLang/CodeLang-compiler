class
⚯
⚞⚟

◀public: static▶ void ☀Export_Emails(std::string const& all_file, std::string const& emails_file) ❰

        //read in data
        Gcal_Rooms pit_rooms;
        std::cout << "loading..." << std::endl;
        Json_File_Io::Read_Json_From_File(pit_rooms,all_file);
        
        
        //filter out anything that doesn't have these attributes
        Json_Attribute_Check_Settings check_settings;
        check_settings.attributes = {
            {"attendees"}
        };
        
        //flatten away the rooms and only keep events that have certain attributes
        std::cout << "gathering..." << std::endl;
        std::set<std::string> emails;
        for (auto const& x: pit_rooms.rooms){
            for (auto const& y: x.events){
                if (Json_Attribute_Checker::Has_Attributes(y,check_settings)){
                    for (auto const& it: y["attendees"]){
                        std::string email = it["email"];
                        emails.insert(email);
                    }
                }
            }
        }
        
        std::cout << "amount: " << emails.size() << std::endl;
        Json_File_Io::Write_Json_To_File(emails,emails_file);
        
❱