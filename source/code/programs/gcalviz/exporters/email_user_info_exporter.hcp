class
⚯
⚞⚟

◀public: static▶ void ☀Export_Info(std::string const& email_file, std::string const& whober_file) ❰

        //read in data
        std::set<std::string> emails;
        std::cout << "loading..." << std::endl;
        Json_File_Io::Read_Json_From_File(emails,email_file);
        
        //make sure we have a python environment going for the duration of the program (RAII)
        //enable signal handle so we can ctrl+C exit
        signal_SIGINT_to_exit();
        pybind11::scoped_interpreter py_guard{};
        
        //create a selenium browser
        Browser_Settings b_settings = Default_Browser_Settings_Getter::Get();
        b_settings.headless = false;
        b_settings.start_maximized = false;
        Browser_Creator::Create(b_settings);
        
        //loop over each email, and try to bind it to user data
        std::map<std::string,nlohmann::json> user_data;
        int count = 1;
        for (auto const& email: emails){
            std::cout << count << " / " << emails.size() << " ";
            ++count;
            
            //add entry if we can find it
            std::string url = "https://whober.uberinternal.com/";
            auto source = Browser_Navigator::Get_React_State_Of_Page(b_settings,url + email);
            if (source){
                source->erase("badges");
                user_data.insert(std::make_pair(email,*source));
                std::cout << "found: " << email << std::endl;
            }
            else{
                std::cout << "not found: " << email << std::endl;
            }
        }
        
        std::cout << "amount: " << user_data.size() << std::endl;
        Json_File_Io::Write_Json_To_File(user_data,whober_file);
        
❱