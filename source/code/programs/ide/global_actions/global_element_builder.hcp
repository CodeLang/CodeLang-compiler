class
❪"code/programs/ide/settings/data/ide_settings"❫
❪"code/programs/ide/global_actions/global_action"❫
❪"code/utilities/data_structures/graphics/objects/frame_elements"❫
❪"SDL.h"❫
⚯
❪"code/utilities/graphics/sdl/sdl_fullscreener"❫
❪"code/programs/ide/global_actions/global_action_decider"❫
❪"code/utilities/program/wrappers/zenity/file_selector/file_selector"❫
❪"code/utilities/formats/json/converters/lib"❫
❪"code/utilities/code/concept_string_tree_parser"❫
❪"code/utilities/formats/json/converters/lib"❫
❪"code/utilities/data_structures/graphics/objects/buildable_schema_faced_tree/buildable_schema_faced_tree_tokenizer"❫
❪"code/utilities/formats/json/converters/json_file_io"❫
❪"code/programs/ide/global_actions/save_state_serializer"❫
❪"code/utilities/code/save/state_to_code_converter"❫
❪"code/programs/ide/global_actions/main_menu_selector"❫
⚞⚟


◀public: static▶ void ☀Handle_Global_Element_Builder_Items(Ide_Settings & settings, SDL_Window* window, Frame_Elements & elements, const std::string & selected_item)❰
    
    if (selected_item == "Add Positioned_Rectangle_Settings"){
        std::cout << "sdfsdfs" << std::endl;
        Ide_Element e;
        Positioned_Rectangle_Settings e2;
        e2.pos.x = 200;
        e2.pos.y = 200;
        e2.shape.dimensions.width = 100;
        e2.shape.dimensions.height = 100;
        e.element = e2;
        settings.elements.types.emplace_back(e);
    }
    else if (selected_item == "Add Positioned_Image_Data"){
        //
    }
    else if (selected_item == "Add Positioned_Buildable_Schema_Faced_Tree"){
        // 
    }
❱