class
⚯
⚞⚟


◀public: static▶ void ☀Handle_Global_Element_Builder_Items(Ide_Settings & settings, SDL_Window* window, Frame_Elements & elements, const std::string & selected_item)❰
    
    if (selected_item == "Add Positioned_Rectangle_Settings"){
        Ide_Element e;
        Positioned_Rectangle_Settings e2;
        e2.pos = Find_Good_Starting_Position(settings,window,elements,selected_item);
        e2.shape.dimensions.width = 100;
        e2.shape.dimensions.height = 100;
        e.element = e2;
        settings.elements.types.emplace_back(e);
    }
    else if (selected_item == "Add Positioned_Label")
    {
        Ide_Element e;
        Positioned_Label e2;
        e2.pos = Find_Good_Starting_Position(settings,window,elements,selected_item);
        e2.state.message = "hello";
        e2.state.styles = Default_Label_Styles::Plain_White_Box();
        e2.state.user_state.is_active = true;
        e.element = e2;
        settings.elements.types.emplace_back(e);
    }
    else if (selected_item == "Add Positioned_Faced_Label"){
        Ide_Element e;
        Positioned_Faced_Label e2;
        e2.pos = Find_Good_Starting_Position(settings,window,elements,selected_item);
        e2.state = Faced_Label_Premades::Single_Gray_Concept_With_Plain_White_Value().state;

        e.element = e2;
        settings.elements.types.emplace_back(e);
    }
    else if (selected_item == "Add Positioned_Image_Data"){
        //
    }
    else if (selected_item == "Add Positioned_Buildable_Schema_Faced_Tree"){
        // 
    }
❱

◀private: static▶ Position ☀Find_Good_Starting_Position(Ide_Settings & settings, SDL_Window* window, Frame_Elements & elements, const std::string & selected_item)❰
    (void)settings;
    (void)window;
    (void)elements;
    (void)selected_item;

    Position pos;
    pos.x = 200;
    pos.y = 200;
    return pos;
❱