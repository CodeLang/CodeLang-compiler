class
⚯
⚞⚟

◀public: static▶ void ☀Part_1(std::vector<std::string> lines) ❰
    int horizontal = 0;
    int depth = 0;
    
    for (auto const& it: lines){
        auto parts = Split_By_Spaces(it);
        if (parts[0] == "forward"){
            horizontal += as_signed(parts[1]);
        }
        else if (parts[0] == "down"){
            depth += as_signed(parts[1]);
        }
        else if (parts[0] == "up"){
            depth -= as_signed(parts[1]);
        }
    }
    
    auto answer = horizontal * depth;
    Exit_If_Not_Equal(answer,2187380);
    

❱
◀public: static▶ void ☀Part_2(std::vector<std::string> const& lines) ❰

    int horizontal = 0;
    int depth = 0;
    int aim = 0;
    
    for (auto const& it: lines){
        auto parts = Split_By_Spaces(it);
        if (parts[0] == "forward"){
            horizontal += as_signed(parts[1]);
            depth += aim * as_signed(parts[1]);
        }
        else if (parts[0] == "down"){
            //depth += as_signed(parts[1]);
            aim += as_signed(parts[1]);
        }
        else if (parts[0] == "up"){
            //depth -= as_signed(parts[1]);
            aim -= as_signed(parts[1]);
        }
    }
    
    auto answer = horizontal * depth;
    Exit_If_Not_Equal(answer,2086357770);

❱