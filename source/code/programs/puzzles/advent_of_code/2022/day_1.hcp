class
⚯
⚞⚟

◀public: static▶ void ☀Part_1(std::vector<std::string> lines) ❰

    auto parts = Split_By_Spaces(lines);
    
    int max = 0;
    for (auto it: parts){
        max = std::max(max,Accumulate(it));
    }
    
    Exit_If_Not_Equal(max,71502);
    

❱
◀public: static▶ void ☀Part_2(std::vector<std::string> const& lines) ❰

    auto parts = Split_By_Spaces(lines);
    
    std::vector<int> counts;
    for (auto it: parts){
        counts.emplace_back(Accumulate(it));
    }
    
    std::sort(counts.begin(),counts.end());
    
    std::vector<int> top_n;
    for (size_t i = 0; i < 3; ++i){
        top_n.emplace_back(counts[counts.size()-1-i]);
    }
    
    auto answer = Accumulate(top_n);
    Exit_If_Not_Equal(answer,208191);
    
❱