class
⚯
⚞⚟

◀public: static▶ void ☀Part_1(std::vector<std::string> lines) ❰

    // get rid of stuff we don't need
    Remove_First_Element(lines);
    Remove_Element(lines,std::string("$ ls"));
    
    for (auto it: lines){
        std::cout << it << std::endl;
    }
    
    auto tree = Create_File_Tree(lines);
❱

◀private: static▶ String_Int_Tree ☀Create_File_Tree(std::vector<std::string> const& lines) ❰

    String_Int_Tree tree;
    
    
    //create root node
    auto iter = tree.nodes.begin();
    iter = tree.nodes.insert(iter, {"/",0});
    
    for (auto it: lines){
        
        if (Begins_With(it,"dir")){
            auto dir_name = Split_By_Spaces(it)[1];
            
        }
    }
    
    return tree;
❱

◀public: static▶ void ☀Part_2(std::vector<std::string> const& lines) ❰

❱