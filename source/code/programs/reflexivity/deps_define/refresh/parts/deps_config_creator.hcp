class
⚯
⚞⚟

//TODO: use git_repository instead

◀public: static▶ void ☀Create(Dependency_Specifications const& all_specs)❰

    //move into the folder where all the deps are
    Temporarily_Move_To_Path_To_Call_Function(Bazel_Deps_Directory(),[&](){
        
        auto source = Get_Source();
        
        
        //write it out to a file
        Write_To_File_With_Auto_Gen_Comment("deps_config.bzl",Source_Language::PYTHON,source_data);
        
    });
❱

◀private: static▶ std::string ☀Get_Source()❰
    std::string str = 
R"RAW_STRING(
    # This represents the typical location where our dependencies are mirrored.
    # If we ever migrate to a different storage system, it should be easy to migrate by changing the host here.
    # The easiest no-money, infinite storage solution for an individual like me is to use a github ORG full of forks.
    # We should not point directly to other people's repos, because they can be deleted, renamed, or have their git history changed.
    def main_mirror_url(package, hash, protocol="https", host="github.com", base_folder="Unilang", format="tar.gz"):
        return "{}://{}/{}/{}/archive/{}.{}".format(protocol,host,base_folder,package,hash,format)
)RAW_STRING";

    return str;
❱