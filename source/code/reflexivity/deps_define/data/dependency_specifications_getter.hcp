class
❪string❫
❪vector❫
❪"code/reflexivity/deps_define/data/dependency_specifications"❫
⚯
⚞⚟


◀public: static▶ Dependency_Specifications ☀Get_All_Bazel_Tests()❰
    Dependency_Specifications x;
    x.specs.emplace_back(Boost());
    x.specs.emplace_back(Abseil());
    x.specs.emplace_back(Gtest());
    x.specs.emplace_back(Lcov());
    x.specs.emplace_back(Google_Benchmark());
    x.specs.emplace_back(Gperf());
    x.specs.emplace_back(Spdlog());
    x.specs.emplace_back(RapidJson());
    x.specs.emplace_back(NlohmannJson());
    x.specs.emplace_back(YamlCpp());
    x.specs.emplace_back(Captnproto());
    x.specs.emplace_back(Protobuf());
    x.specs.emplace_back(Apache_Thrift());
    x.specs.emplace_back(Cereal());
    x.specs.emplace_back(Expat());
    x.specs.emplace_back(Flatbuffers());
    x.specs.emplace_back(Snappy());
    x.specs.emplace_back(Andres_Graph());
    x.specs.emplace_back(Date());
    x.specs.emplace_back(Gmp());
    
    return x;
❱


◀private: static▶ Dependency_Specification ☀Boost()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀Abseil()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀Gtest()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀Lcov()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀Google_Benchmark()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀Gperf()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀Spdlog()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀RapidJson()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀NlohmannJson()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀YamlCpp()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱

◀private: static▶ Dependency_Specification ☀Captnproto()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀Protobuf()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀Apache_Thrift()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀Cereal()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀Expat()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀Flatbuffers()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀Snappy()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀Andres_Graph()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀Date()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
◀private: static▶ Dependency_Specification ☀Gmp()❰
    Dependency_Specification spec;
    spec.lib_name = "";
    spec.repo_name = "";
    spec.sha256 = "";
    spec.at_commit = "";
    
    spec.build_content = "";
    spec.patch_content = "";
    return spec;
❱
