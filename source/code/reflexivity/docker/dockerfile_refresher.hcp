class
❪string❫
❪vector❫
❪"code/reflexivity/docker/data/apt_get_command"❫
❪"code/reflexivity/docker/data/docker_settings"❫
⚯
❪"code/utilities/filesystem/paths/lib"❫
❪"code/utilities/filesystem/files/creating/lib"❫
❪"code/utilities/types/strings/transformers/appending/lib"❫
❪"code/utilities/types/vectors/converters/lib"❫
❪"code/utilities/filesystem/files/deleting/lib"❫
❪"code/utilities/types/strings/transformers/casing/lib"❫
❪"code/transcompilers/unilang/file_extension_getter/file_extension_getter"❫
❪"code/reflexivity/docker/data/docker_settings_getter"❫
⚞⚟

◀public: static▶ void ☀Refresh()❰

    auto settings = Docker_Settings_Getter::Get_Uncached_Dockerfile();
    Write_To_File(Get_DockerFile_Path(),Create_Dockerfile_Contents(settings));

❱

◀private: static▶ std::string ☀Get_DockerFile_Path()❰
    std::string f = Bazel_Derived_Root_Of_Repo();
    f += "Dockerfile";
    return f;
❱
◀private: static▶ std::string ☀Get_Docker_From_Command(Docker_Settings const& settings)❰
    std::string statement;
    statement += "FROM ";
    statement += settings.base_container;
    return statement;
❱





◀private: static▶ std::string ☀Docker_Intro_Comments(Docker_Settings const& settings)❰
std::string str;
str += settings.intro_comment;
str += Get_Docker_From_Command(settings);


std::string other = R"RAW(
# All of the necessary apt-get installs
# Strangely, wget was not working on a different machine??
# Which is confusing because I was building a docker container; why would the host machine matter.
# The fix was to use --fix-missing on the update.
# With the transition from Ubuntu 14.04 to 18.04, installing xorg would pause for user input on country
# This has been mitigated using the "noninteractive".
RUN apt-get update
RUN apt-get install -y software-properties-common
)RAW";
str+= other;
return str;
❱

◀private: static▶ std::string ☀Docker_End_Stuff()❰
std::string str = R"RAW(
# The build runs certain tools that need a particular locale to be available
# I had to do this differently when transitioning from Ubuntu 14.04 to 18.04
# This will ensure the en_US.UTF-8 locale is available.
# Ideally, I'd like to fix the tools so this is not needed in the Dockerfile.
RUN echo "locales locales/default_environment_locale select en_US.UTF-8" | debconf-set-selections
RUN echo "locales locales/locales_to_be_generated multiselect en_US.UTF-8 UTF-8" | debconf-set-selections
RUN rm "/etc/locale.gen"
RUN dpkg-reconfigure --frontend noninteractive locales

# Copy the content of your repository into the image
COPY . ./
)RAW";
return str;
❱



◀private: static▶ std::string ☀Create_Dockerfile_Contents(Docker_Settings const& settings)❰

    auto str = Docker_Intro_Comments(settings);
    
    //create all the ppa commands
    for (auto const& it: settings.ppas){
        str += "RUN add-apt-repository ";
        str += "ppa:";
        str += it.user;
        str += ":";
        str += it.ppa_name;
        str += "\n";
    }
    
    
    //create all the apt get install commands
    for (auto const& it: settings.gets){
        str += "RUN ";
        for (auto const& def: it.defines){
            str += def.first + "=" + def.second + " ";
        }
        str += "apt-get install -y ";
        str += it.name;
        str += "\n";
    }
    str += Docker_End_Stuff();
    return str;
❱