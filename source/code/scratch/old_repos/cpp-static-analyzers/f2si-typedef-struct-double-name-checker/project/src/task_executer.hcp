class
❪"utilities"❫
❪"systems"❫
❪"program_options"❫
⚯
⚞⚟
◀public: static▶ void ☀Execute_Needed_Tasks(Program_Options const& program_options) ❰

for (auto it: program_options.Input_Files()){
    Do_Task(it);
}

❱


◀private: static▶ void ☀Do_Task(std::string path_to_file) ❰
    auto vec = Read_Each_Line_Of_File_Into_Vector(path_to_file);
    
    std::vector<std::string> t_names;
    std::string str;
    //get typedef names
    for (i: vec){
        if (Begins_With(ltrim(i),"typedef struct")){
            
            auto blah = As_First_N_Chars_Removed(ltrim(i),std::string("typedef struct").size());
            str = ltrim( blah );
            t_names.push_back(ltrim( blah ) );
            std::cout << '\n' << str;
        }
        
        auto looking_for = As_Last_N_Chars_Removed(str,2) + "T";
        auto line_test = As_Right_Trimmed(As_Left_Trimmed(As_First_N_Chars_Removed(i,1)));
        
        
        if (looking_for == As_Last_Char_Removed(line_test)){
            std::cout << " yippers";
        }
    }
    
    //std::cout << t_names << std::endl;
    
❱