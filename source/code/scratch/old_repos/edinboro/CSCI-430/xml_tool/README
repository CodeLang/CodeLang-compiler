+--------------------------+
| 1. BUILDING THIS PROJECT |
+--------------------------+
*cslab100 has an older compiler.  Please build this project on another cslab.

You can run make from any part of the project tree.

IMPORTANT COMMANDS:

    make              -Build the targets of the directory you are in
    make tree         -Build the targets of the subtree you are in
    make all          -Build the entire project

    make clean        -Clean the targets of the directory you are in
    make clean_tree   -Clean the targets of the subtree you are in
    make clean_all    -Clean the entire project

Please note that all targets built, will appear in the obj/ directory relative to their source.
So when you build this project, the xml_tool is going to appear in an obj/ folder at the root.

+-----------------------------+
| 2. SOME DIRECTORY/FILE INFO |
+-----------------------------+
Directories:

    classes - All the objects used by the xml_tool (most of which are classes), can be found in here.
              It might also build some executables, but they are most likely drivers.

    img     - XML Parsing Automata (sort of)
              state machine for implementation

    mk      - A bunch of Makefile stuff is in here.  I've been playing with a non-recursive make implementation.
              I've made a few tweaks here and there, but it's only to help build the project.
              If you happen to be interested in the build proccess, the original author's README can be found there.  
              There are are also some variables that can be changed to affect the build process, but for the most part, 
              you don't need to worry about this directory.

    obj     - obj directories will appear in every directory where a target can be built.  
              Built targets such as objects, executables, and libraries will appear there, as well as dependency files.
              Cleaning with make will always wipe content from these directories.

    xml_files - The xml_tool needs xml files to operate.  
                They could be stored anywhere, but for organization, I've put them there.


Files:

    - The only "real" Makefile is in the directory mk
      I tried to make symbolic links to that file for all the other directories, but make complained.
      Now I have a bunch of hard links to that file, and it works great.  You can edit any Makefile, and that change
      will carry through to any other Makefile you click on.

    - All the "rules" files you see, are used by make.  
      They help specifiying how to build a target easier.

+-----------------------+
| 3. USING THE XML TOOL |
+-----------------------+
    Pass in one or more xml files at the command line, and it will run interactively.
    If you want it to proccess data and exit automatically, look at the other flag options.
    type: "./xml_tool --help" to see other flag options.

