class
❪"utilities"❫
❪"systems"❫
❪"program_options"❫
⚯
⚞⚟
◀public: static▶ void ☀Execute_Needed_Tasks(Program_Options const& program_options) ❰    
    
    std::ofstream outfile("semantic_version_number.hcp");
    outfile << R"DELIM(class
ļ❪"systems"ļ❫
ļ❪"utilities"ļ❫
ļ⚯
ļ⚞ļ⚟

ļ◀public:ļ▶

ļ☀ļ◈(unsigned int const& major_inļ◀=0ļ▶, unsigned int const& minor_inļ◀=0ļ▶, unsigned int const& bugfix_inļ◀=0ļ▶)ļ◖
: m_major(major_in)
, m_minor(minor_in)
, m_bugfix(bugfix_in)
ļ◗
ļ❰ļ❱


//observers
unsigned int ļ☀Major()ļ❰ return m_major; ļ❱
unsigned int ļ☀Minor()ļ❰ return m_minor; ļ❱
unsigned int ļ☀Bugfix()ļ❰ return m_bugfix; ļ❱

ļ◀public:ļ▶ std::string ļ☀String_Representation()ļ❰
    return std::to_string(m_major) + "." + std::to_string(m_minor) + "." + std::to_string(m_bugfix);
ļ❱

ļ◀public:ļ▶ void ļ☀Perform_Major_Update()ļ❰
    ++m_major;
    m_minor = 0;
    m_bugfix = 0;
ļ❱
ļ◀public:ļ▶ void ļ☀Perform_Minor_Update()ļ❰
    ++m_minor;
    m_bugfix = 0;
ļ❱
ļ◀public:ļ▶ void ļ☀Perform_m_Bugfix_Update()ļ❰
    ++m_bugfix;
ļ❱

ļ◀
friend std::ostream &operator<<( std::ostream & out, ļ◈ const& self){
    out << self.m_major << "." << self.m_minor << "." << self.m_bugfix;
    return out;
}
ļ▶

ļ◀private:
unsigned int ļ፠m_majorļ፠;
unsigned int ļ፠m_minorļ፠;
unsigned int ļ፠m_bugfixļ፠;
ļ▶
)DELIM";

❱
