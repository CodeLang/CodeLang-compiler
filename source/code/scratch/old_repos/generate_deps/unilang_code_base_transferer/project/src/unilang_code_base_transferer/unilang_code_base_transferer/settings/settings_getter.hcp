class
❪"systems"❫
❪"utilities"❫
❪"settings"❫
⚯

⚞⚟


◀public: static▶ Settings ☀Get() ❰

    //all the after action transcompile settings
    Settings settings;
    
    //unilang transcompiler
    settings.unilang_transcompiler = "unilang-transcompiler";
    
    //clang-formatter
    settings.clang_format_tool="clang-format-3.9";
    
    //The expected file extension of our UniLang code
    settings.unilang_file_extension="UniLang";
    
    //derive the username that I'm running this on different machines
    static const std::string USER_NAME = execute("echo $USER");
    
    //SIMHOST paths
    settings.simhost.full_path_to_root_of_actual_repo="/home/" + USER_NAME + "/Desktop/work-related/fresh";
    settings.simhost.local_source_root="SimHost/UH72A_VME/Src";
    settings.simhost.local_test_root="SimHost/Tests/Unit_Tests";
    settings.simhost.full_path_to_unicode_repo="/home/" + USER_NAME + "/Desktop/UniLang-rewrite/code";
    settings.simhost.unicode_repo_root="SimHost";
    
    //SEP paths
    settings.sep.full_path_to_root_of_actual_repo="/home/" + USER_NAME + "/Desktop/work-related/fresh";
    settings.sep.local_source_root="SEP/src";
    settings.sep.local_test_root="SEP/Unit_Tests";
    settings.sep.full_path_to_unicode_repo="/home/" + USER_NAME + "/Desktop/UniLang-rewrite/code";
    settings.sep.unicode_repo_root="SEP";
    
    //vxworks wrapper related
    //Used for the static analyzers
    settings.full_path_to_vxworks_wrappers="/home/" + USER_NAME + "/Desktop/work-related/external-unit-test-deps/For_Linux/VxWorks_Wrappers";
    
    return settings;
❱
