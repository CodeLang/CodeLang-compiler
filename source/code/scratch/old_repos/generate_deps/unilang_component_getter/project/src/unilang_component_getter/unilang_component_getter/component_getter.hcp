class
❪"systems"❫
❪"utilities"❫
❪"component"❫
❪"settings"❫
⚯

⚞⚟


◀public: static▶ std::vector<Component> ☀Get(Settings settings) ❰
    
    std::vector<Component> components;
    
    //You might think about changing a file name after the file is generated, but not yet transferred to the real repository.
    //I recommend not doing this, because the file name MIGHT be important inside the contents of the file.  
    //the include guard wrapper or random comments might paste in the file name that you intend to change.  
    //Therefore, I believe it to be the responsibility of the transcompiler to derive the filename and it should not be altered
    //during the transfer phase.  If you want the filename to be something specific, you must figure out how to do that in the transcompiler.
    
    //This may or may not work:  you could create an empty file named what you want it to be.  And just inline include the file you want to re-name,
    //and then export that one instead.  For example.  The SendToJ2Messages.UniLang (or something) needs to be turned into J2SendConstraints..
    //if we just create a J2SendConstraints file, that is basically empty but inline includes the J2SendConstraints, it may work as we expect.  
    //Granted, we'll have to make sure that the incline include works recursively.  Actually, just ignore this whole paragraph.  It's too complicated.  
    //It's possible, but too complicated, so it shouldn't be a feature at all.  Don't do it.
    
    
    //NOT USED ANYMORE:
    //Time
    //our mentally handicapped lead engineer broke all of this:
    /* <--------------
    ,SimHost_Component(Export_Style::OBJECT_GOOD,          "Systems/Time",              "date_time",                       "Components/Time",                      "Components/Time",                   "")
    ,SimHost_Component(Export_Style::OBJECT_GOOD,          "Systems/Time/Timers",       "millisecond_timer",               "Components/Time/Timers",               "Components/Time/Timers",            "Generic")
    ,SimHost_Component(Export_Style::OBJECT_GOOD,          "Systems/Time/Timers",       "timer_settings",                  "Components/Time/Timers/Generic",       "Components/Time/Timers",            "Settings")
    ,SimHost_Component(Export_Style::OBJECT_GOOD,          "Systems/Time/Timers",       "vxWorks_millisecond_timer",       "Components/Time/Timers",               "Components/Time/Timers",            "VxWorks")
    ,SimHost_Component(Export_Style::OBJECT_GOOD,          "Systems/Time/Timers",       "flight_model_millisecond_timer",  "Components/Time/Timers",               "Components/Time/Timers",            "FlightModel")
    ,SimHost_Component(Export_Style::GLOBAL,               "Systems/Time/Timers",       "frame_count_utilities",           "Components/Time/Timers/FlightModel",   "Components/Time/Timers",            "FrameCount")
    ,SimHost_Component(Export_Style::GLOBAL,               "Systems/Time",              "month",                           "Components/Time",                      "Components/Time",                   "")
    ,SimHost_Component(Export_Style::OBJECT_GOOD,          "Systems/Time",              "simulation_clock",                "Components/Time",                      "Components/Time",                   "")
    ,SimHost_Component(Export_Style::OBJECT_GOOD,          "Systems/Time",              "aircraft_times",                  "Components/Time",                      "Components/Time",                   "")
    ,SimHost_Component(Export_Style::GLOBAL,"Utilities/Other",               "time_utilities",              "Shared/ffs",                           "",            "Time")
    //*/
    
    //Dynamic Debugger
    //forgotten about
    /* <--------------
    components.emplace_back(SimHost_Component(Export_Style::GLOBAL,false,"Connections/DynamicDebug",       "dynamic_debug",               "Connections/UDP/DynamicDebug",         "",            "Interface"));
    components.emplace_back(SimHost_Component(Export_Style::GLOBAL,false,"Connections/DynamicDebug",       "dynamic_debug_configuration", "Connections/UDP/DynamicDebug",         "",            ""));
    components.emplace_back(SimHost_Component(Export_Style::GLOBAL,false,"Connections/DynamicDebug",       "dynamic_debug_message",       "Connections/UDP/DynamicDebug",         "",            "Message"));
    components.emplace_back(SimHost_Component(Export_Style::GLOBAL,false,"Connections/DynamicDebug",       "dynamic_debug_sender",        "Connections/UDP/DynamicDebug",         "",            "Sender"));
    components.emplace_back(SimHost_Component(Export_Style::GLOBAL,false,"Connections/DynamicDebug",       "dynamic_debug_type",          "Connections/UDP/DynamicDebug",         "",            ""));
    //*/
    
    
    //Serialization
    /* <--------------
        //Endian
        components.emplace_back(SimHost_Component(Export_Style::GLOBAL,true,"Utilities/Other/Serialization/Endian", "endian_detection",             "Shared/ffs/Serialization/Endian", "",    "Detection"));
        components.emplace_back(SimHost_Component(Export_Style::GLOBAL,true,"Utilities/Other/Serialization/Endian", "endian_swapping",              "Shared/ffs/Serialization/Endian", "",    "Swapping"));
        
        //Byte
        components.emplace_back(SimHost_Component(Export_Style::GLOBAL,true,"Utilities/Other/Serialization/Byte",   "byte_unpacking",               "Shared/ffs/Serialization/Byte",   "",    "Unpacking"));
        components.emplace_back(SimHost_Component(Export_Style::GLOBAL,true,"Utilities/Other/Serialization/Byte",   "byte_packing",                 "Shared/ffs/Serialization/Byte",   "",    "Packing"));
        components.emplace_back(SimHost_Component(Export_Style::GLOBAL,true,"Utilities/Other/Serialization/Byte",   "byte_serialization",           "Shared/ffs/Serialization/Byte",   "",    "General"));

        //Bit
        components.emplace_back(SimHost_Component(Export_Style::GLOBAL,true,"Utilities/Other/Serialization/Bit",    "bit_unpacking",                "Shared/ffs/Serialization/Bit",    "",    "Unpacking"));
        components.emplace_back(SimHost_Component(Export_Style::GLOBAL,true,"Utilities/Other/Serialization/Bit",    "bit_packing",                  "Shared/ffs/Serialization/Bit",    "",    "Packing"));
        components.emplace_back(SimHost_Component(Export_Style::GLOBAL,true,"Utilities/Other/Serialization/Bit",    "bit_serialization",            "Shared/ffs/Serialization/Bit",    "",    "General"));
        
        //Interface
        components.emplace_back(SimHost_Component(Export_Style::GLOBAL,false,"Utilities/Other/Serialization",        "serialization_action",         "Shared/ffs/Serialization",      "",    ""));
        components.emplace_back(SimHost_Component(Export_Style::GLOBAL,false,"Utilities/Other/Serialization",        "serialization_macro_wrappers", "Shared/ffs/Serialization",      "",    ""));
    //*/

	//components.emplace_back(SimHost_Component(Export_Style::GLOBAL,true,"Utilities/Other/Serialization/Json", "json_array_helpers",             "Shared/ffs/Serialization/Json", "",    ""));
        
    //J2
    /*  <--------------
        //Serialization
        ,SimHost_Component(Export_Style::GLOBAL,"Connections/J2/Serialization", "j2_packing",                "Connections/UDP/J2/Serialization",    "",            "Packing")
        ,SimHost_Component(Export_Style::GLOBAL,"Connections/J2/Serialization", "j2_unpacking",              "Connections/UDP/J2/Serialization",    "",            "Unpacking")
        ,SimHost_Component(Export_Style::GLOBAL,"Connections/J2/Serialization", "j2_size_checks",            "Connections/UDP/J2/Serialization",    "",            "SizeChecks")
        ,SimHost_Component(Export_Style::GLOBAL,"Connections/J2/Serialization", "j2_general",                "Connections/UDP/J2/Serialization",    "",            "General")
        
        //Messages & Data
        ,SimHost_Component(Export_Style::GLOBAL,"Connections/J2/Messages",      "j2_message_header",         "Connections/UDP/J2/Messages",         "",            "")
        ,SimHost_Component(Export_Style::GLOBAL,"Connections/J2/Messages",      "ground_contact_location",   "Connections/UDP/J2/Messages",         "",            "")
        ,SimHost_Component(Export_Style::GLOBAL,"Connections/J2/Messages",      "j2_const",                  "Connections/UDP/J2/Messages",         "",            "")
        ,SimHost_Component(Export_Style::GLOBAL,"Connections/J2/Messages",      "send_to_j2_messages",       "Connections/UDP/J2/Messages",         "",            "")
        ,SimHost_Component(Export_Style::GLOBAL,"Connections/J2/Messages",      "j2_message_types",          "Connections/UDP/J2/Messages",         "",            "Types")
    //*/
    
    //STILL HAVE CONTROL OVER:
        
    //Algorithms
    //For Graphs:
    //Add_SimHost_Component(components,Export_Style::GLOBAL,false,     "Utilities/Other/Algorithms/Graph",     "dfs_graph_algorithms",            "Shared/ffs/Algorithms/Graph",          "",      "DFS");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,false,     "Utilities/Other/Algorithms/Graph",     "unordered_graph_algorithms",      "Shared/ffs/Algorithms/Graph",          "",      "Unordered");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Utilities/Other/Algorithms/Graph",     "graph_traversal_control",         "Shared/ffs/Algorithms/Graph",          "",      "Control");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Utilities/Other/Algorithms/Graph",     "graph_dfs_actions",               "Shared/ffs/Algorithms/Graph",          "",      "Actions");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,true,      "Utilities/Other/Algorithms/Graph",     "graph_action_types",              "Shared/ffs/Algorithms/Graph/Actions",  "",            "");
    
    //For Electrical
    //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Utilities/Other/Algorithms/Electrical",      "electrical_algorithms",           "Shared/ffs/Algorithms",              "",            "Electrical");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Utilities/Other/Algorithms/Electrical",          "graph_traversal_information",     "Shared/ffs/Algorithms/Electrical",   "",            "Info");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Utilities/Other/Algorithms/Electrical",          "electrical_power_source",         "Shared/ffs/Algorithms/Electrical",   "",            "Source");
    
    //For Iterators
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Utilities/Other/Algorithms/Iterator", "iterator_algorithms",     "Shared/ffs/Algorithms",              "",            "Iterator");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,true,"Utilities/Other/Algorithms/Iterator", "algorithm_delegates",     "Shared/ffs/Algorithms",              "",            "");
        
    //Electrical
    //*  <--------------
        
        //Components
        //components.emplace_back(SimHost_Component(Export_Style::OBJECT_GOOD,false,"Systems/Electrical/components", "circuit_breaker",    "Components/Electrical",            "",            ""));
        
        //node (the vertex)
        //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,true,"Systems/Time",                     "delay",                 "Shared/ffs/Time",         "Components/Time",            "");
        //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/graph/node",    "node",                  "Components/Electrical/Generic",         "",            "");
        //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/graph/node",    "malfunction_state",     "Components/Electrical/Generic/Node",    "",            "");
        //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/graph/node",    "power_delay_settings",  "Components/Electrical/Generic/Node",    "",            "");
        //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/graph/node",    "electrical_properties", "Components/Electrical/Generic/Node",    "",            "");
        //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/graph/node",    "flow_ability",          "Components/Electrical/Generic/Node",    "",            "");
        //Add_SimHost_Component(components,Export_Style::GLOBAL,     true ,"Systems/Electrical/graph/node",    "can_be_powered",        "Components/Electrical/Generic/Node",    "",            "");
        //Add_SimHost_Component(components,Export_Style::GLOBAL,     false,"Systems/Electrical/graph/node",    "node_type",             "Components/Electrical/Generic/Node",    "",            "Type");
        
        //triggers
        //components.emplace_back(SimHost_Component(Export_Style::OBJECT_GOOD,false,"Systems/Electrical/graph/triggers",    "electrical_trigger",   "Components/Electrical/Generic",    "",            "Trigger"));
        //components.emplace_back(SimHost_Component(Export_Style::GLOBAL,     true,"Systems/Electrical/graph/triggers",    "power_state_trigger",  "Components/Electrical/Generic/Trigger",    "",            ""));
        //components.emplace_back(SimHost_Component(Export_Style::GLOBAL,     true,"Systems/Electrical/graph/triggers",    "triggered_flow_result","Components/Electrical/Generic/Trigger",    "",            ""));
        
            
            //Power Flags
            //,SimHost_Component(Export_Style::GLOBAL,"Systems/Electrical/data/flags", "electrical_power_flags",        "SystemManagers/Electrical/Data",    "",            "")
    //*/
        
    //components.emplace_back(SimHost_Component(Export_Style::GLOBAL,true,"Connections/PLC/", "plc_verify",     "Connections/UDP/PLC", "",   ""));
    
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/components/","battery","Components/Electrical","","");
        
    //wire (the edge)
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/graph/wire",    "wire",                  "Components/Electrical/Generic",         "",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/graph",    "electrical_graph",   "Components/Electrical/Generic",    "",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/graph",    "electrical_graph_stats",   "Components/Electrical/Generic",    "",            "Stats");
    
    //specific electrical graph
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific",                   "D_C_power_system",            "Components/Electrical/Specific",    "",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific",                   "electrical_circuit",          "Components/Electrical/Specific",    "",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces",            "D_C_system_side",             "Components/Electrical/Specific",    "",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces",            "after_junction_box",          "Components/Electrical/Specific",    "",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces",            "battery_box",                 "Components/Electrical/Specific",    "",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces",            "diode_box",                   "Components/Electrical/Specific",    "",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces",            "distribution_box",            "Components/Electrical/Specific",    "",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces",            "overhead_panel",              "Components/Electrical/Specific",    "",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces",            "floor_panel",                 "Components/Electrical/Specific",    "",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces",            "power_relay",                 "Components/Electrical/Specific",    "",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces",            "norm_open_relay",             "Components/Electrical/Specific",    "",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces",            "pole",                        "Components/Electrical/Specific",    "",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces",            "system_buses",                "Components/Electrical/Specific",            "",    "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces/devices",    "system_devices",              "Components/Electrical/Specific",            "",    "Devices");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces/devices",    "avionics_devices",            "Components/Electrical/Specific/Devices",    "",    "Avionics");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces/devices",    "engine_devices",              "Components/Electrical/Specific/Devices",    "",    "Engine");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces/devices",    "fire_devices",                "Components/Electrical/Specific/Devices",    "",    "Fire");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces/devices",    "flight_control_devices",      "Components/Electrical/Specific/Devices",    "",    "FlightControl");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces/devices",    "flight_guidance_devices",     "Components/Electrical/Specific/Devices",    "",    "FlightGuidance");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces/devices",    "fuel_devices",                "Components/Electrical/Specific/Devices",    "",    "Fuel");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces/devices",    "hydraulic_devices",           "Components/Electrical/Specific/Devices",    "",    "Hydraulic");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces/devices",    "lighting_devices",            "Components/Electrical/Specific/Devices",    "",    "Lighting");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces/devices",    "mep_devices",                 "Components/Electrical/Specific/Devices",    "",    "MEP");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces/devices",    "radio_devices",               "Components/Electrical/Specific/Devices",    "",    "Radio");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Systems/Electrical/specific/pieces/devices",    "pneumatic_devices",           "Components/Electrical/Specific/Devices",    "",    "Pneumatic");
        
    //Data structures
    //Add_SimHost_Component(components,Export_Style::GLOBAL,     true,"Utilities/Data_Structures/Memory",            "memory_management_types", "Shared/ffs",                             "",                     "");
	//Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,true,"Utilities/Data_Structures/Memory",            "type_information",        "Shared/ffs/DataStructures",              "",                     "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,true,"Utilities/Data_Structures",            "allocator",               "Shared/ffs/DataStructures",              "",                     "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,true,"Utilities/Data_Structures",            "vector",                  "Shared/ffs/DataStructures",              "Utilities",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,true,"Utilities/Data_Structures",            "iterator",                "Shared/ffs/DataStructures",              "Utilities",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,true,"Utilities/Data_Structures",            "ascii_string",            "Shared/ffs/DataStructures",              "Utilities",            "");
	//Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Utilities/Other",            "ansi_colors",            "Shared/ffs",              "Utilities",            "");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Utilities/Other",            "swap",                   "Shared/ffs",              "Utilities",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,true,"Utilities/Data_Structures/Vocabulary", "any",                     "Shared/ffs/DataStructures",              "Utilities",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,true,"Utilities/Data_Structures/Vocabulary", "optional",                "Shared/ffs/DataStructures",              "Utilities",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,true,"Utilities/Data_Structures/Vocabulary", "pair",                    "Shared/ffs/DataStructures",              "Utilities",            "");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Utilities/Data_Structures/Vocabulary", "interval_type",                "Shared/ffs/DataStructures",              "Utilities",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,true,"Utilities/Data_Structures/Vocabulary", "interval",                "Shared/ffs/DataStructures",              "Utilities",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,false,"Utilities/Data_Structures/Graph",      "graph",                   "Shared/ffs/DataStructures",              "Utilities",            "");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,true,"Utilities/Data_Structures/Graph",      "graph_vertex",            "Shared/ffs/DataStructures/Graph",        "Utilities",            "Vertex");
    //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,true,"Utilities/Data_Structures/Graph",      "graph_edge",              "Shared/ffs/DataStructures/Graph",        "Utilities",            "Edge");
    
    //appliers
    Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Systems/Electrical/manager/appliers", "electrical_malfunction_applier", "SystemManagers/Electrical/Appliers",    "",   "Malfunctions");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Systems/Electrical/manager/appliers", "electrical_breaker_applier",     "SystemManagers/Electrical/Appliers",    "",   "Breakers");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Systems/Electrical/manager/appliers", "electrical_switch_applier",     "SystemManagers/Electrical/Appliers",    "",    "Switches");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Systems/Electrical/manager/appliers", "electrical_wattage_applier",     "SystemManagers/Electrical/Appliers",    "",    "Wattage");
    
    //deciders
    //Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Systems/Electrical/manager/deciders", "electrical_power_flag_decider",       "SystemManagers/Electrical/Deciders",     "",   "PowerFlags");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Systems/Electrical/manager/deciders", "electrical_indications_decider",      "SystemManagers/Electrical/Deciders",     "",   "Indications");
    
  //settings
  //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data/settings",     "electrical_settings",                      "SystemManagers/Electrical/Data/Settings",    "",            "");
  //Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Systems/Electrical/data/settings",     "electrical_battery_settings",              "SystemManagers/Electrical/Data/Settings",    "",            "");
  //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,true,"Systems/Electrical/data/settings",     "electrical_battery_percentage_settings",   "SystemManagers/Electrical/Data/Settings",    "Components",            "");
  //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data/settings",     "electrical_generator_settings",            "SystemManagers/Electrical/Data/Settings",    "",            "");
  //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data/settings",     "electrical_epu_settings",                  "SystemManagers/Electrical/Data/Settings",    "",            "");
  //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data/settings",     "electrical_drop_settings",                 "SystemManagers/Electrical/Data/Settings",    "",            "");
  //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data/settings",     "electrical_traversal_settings",            "SystemManagers/Electrical/Data/Settings",    "",            "");
  //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data/settings",     "electrical_effect_priority_settings",      "SystemManagers/Electrical/Data/Settings",    "",            "");
  //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data/settings",     "electrical_power_settings",                "SystemManagers/Electrical/Data/Settings",    "",            "");
  //Add_SimHost_Component(components,Export_Style::OBJECT_GOOD,true,"Systems/Electrical/data/settings",  "electrical_debug_settings",                "SystemManagers/Electrical/Data/Settings",    "",            "");
  //Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Systems/Electrical/data/settings",       "electrical_debug_actions",                 "SystemManagers/Electrical/Data/Settings",    "",            "");
  
    //malfunctions
    //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data/malfunctions", "electrical_malfunctions",              "SystemManagers/Electrical/Data/Malfunctions",    "",            "");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data/malfunctions", "electrical_system_malfunctions",       "SystemManagers/Electrical/Data/Malfunctions",    "",            "");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data/malfunctions", "electrical_generator_malfunctions",    "SystemManagers/Electrical/Data/Malfunctions",    "",            "");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data/malfunctions", "electrical_battery_malfunctions",      "SystemManagers/Electrical/Data/Malfunctions",    "",            "");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data/malfunctions", "electrical_epu_malfunctions",          "SystemManagers/Electrical/Data/Malfunctions",    "",            "");
    
    //data
    ///Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Systems/Electrical/data/bindings", "breaker_binding",        "SystemManagers/Electrical/Data/Bindings",    "",            "Breaker");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Systems/Electrical/data/bindings", "lock_actions",    "SystemManagers/Electrical/Data/Bindings",    "",            "");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Systems/Electrical/data/bindings", "malfunction_binding",    "SystemManagers/Electrical/Data/Bindings",    "",            "Malfunction");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Systems/Electrical/data/bindings", "power_flag_binding",     "SystemManagers/Electrical/Data/Bindings",    "",            "PowerFlags");
    ///Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Systems/Electrical/data/bindings", "wattage_device_binding", "SystemManagers/Electrical/Data/Bindings",    "",            "Wattage");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Systems/Electrical/data/bindings", "malfunction_effect",   "SystemManagers/Electrical/Data/Bindings",    "",            "");
    ///Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data", "electrical_loads",              "SystemManagers/Electrical/Data",    "",            "");
    ///Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data", "electrical_indications",        "SystemManagers/Electrical/Data",    "",            "");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data", "electrical_switch_states",      "SystemManagers/Electrical/Data",    "",            "");
    ///Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data", "electrical_switches",           "SystemManagers/Electrical/Data",    "",            "");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data", "electrical_engine_data",        "SystemManagers/Electrical/Data",    "",            "");
    ///Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data", "electrical_power_triggers",     "SystemManagers/Electrical/Data",    "",            "");
    ///Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/data", "electrical_sound_triggers",     "SystemManagers/Electrical/Data",    "",            "");
  
  //getters
  //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/manager/getters", "electrical_input_getter",        "SystemManagers/Electrical",             "",   "InputGetter");
  //Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Systems/Electrical/manager/getters", "electrical_settings_getter",     "SystemManagers/Electrical/InputGetter", "",   "Settings");

  //update
  //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Systems/Electrical/manager", "electrical_updater",     "SystemManagers/Electrical", "",   "Updater");
  //Add_SimHost_Component(components,Export_Style::GLOBAL,true,"Systems/Electrical/manager", "electrical_voltage_drop",     "SystemManagers/Electrical/Updater", "",   "VoltageDrop");
    
    //Miscellaneous Utilities
    //Add_SimHost_Component(components,Export_Style::GLOBAL,"Utilities/Other",               "date_utilities",              "Shared/ffs",                           "",            "Date");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Utilities/Other",               "constraint_utilities",        "Shared/ffs",                           "",            "Constraint");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,"Utilities/Other",               "bit_utilities",               "Shared/ffs",                           "",            "Bit");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,"Utilities/Other",               "udp_connection_utilities",    "Shared/ffs",                           "",            "UdpConnection");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,"Utilities/Other",               "ffs_const",                   "Shared/ffs",                           "",            "");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,"Utilities/Other",               "measurement_conversion",      "Shared/ffs",                           "",            "");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,false,"Utilities/Other/Math",          "math_utilities",              "Shared/ffs",                           "",            "Math");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,"Utilities/Other/Math",          "float_approximation",         "Shared/ffs/Math",                      "",            "");
    //Add_SimHost_Component(components,Export_Style::GLOBAL,"Utilities/Other/Math",          "electrical_formulas",         "Shared/ffs/Math",                      "",            "");
    
    return components;
❱


◀private: static▶ void ☀Add_SimHost_Component(std::vector<Component> & components, Export_Style style, bool const& flatten, std::string path_to_file, std::string file_name, std::string path_to_export, std::string path_to_export_wrapper, std::string new_folder_name)❰
  components.emplace_back(SimHost_Component(style,flatten,path_to_file,file_name,path_to_export,path_to_export_wrapper,new_folder_name));
❱

◀private: static▶ Component ☀SimHost_Component(Export_Style style, bool const& flatten, std::string path_to_file, std::string file_name, std::string path_to_export, std::string path_to_export_wrapper, std::string new_folder_name) ❰
    return Component(file_name,path_to_file,path_to_export,path_to_export_wrapper,new_folder_name,style,Project::SIMHOST,flatten);
❱
◀private: static▶ Component ☀Sep_Component(Export_Style style, bool const& flatten, std::string file_name, std::string path_to_file, std::string path_to_export, std::string path_to_export_wrapper, std::string new_folder_name) ❰
    return Component(file_name,path_to_file,path_to_export,path_to_export_wrapper,new_folder_name,style,Project::SEP,flatten);
❱
