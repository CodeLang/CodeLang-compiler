class
⚯
❪"code/utilities/types/general/lib"❫
❪"code/utilities/types/vectors/transformers/lib"❫
❪"code/utilities/types/strings/observers/converting/lib"❫
❪"code/utilities/types/strings/transformers/removing/lib"❫
❪"code/utilities/exits/lib"❫
❪"code/utilities/web/lib"❫
❪"code/utilities/printers/prettyprint"❫
❪"code/utilities/web/automate/browser/default_browser_settings_getter"❫
❪"code/utilities/web/automate/browser/browser_creator"❫
❪"code/utilities/web/automate/navigation/browser_navigator"❫
❪pybind11/embed.h❫
⚞⚟

◀public: static▶ void ☀Execute_Needed_Tasks() ❰


    //get the input
    pybind11::scoped_interpreter py_guard{};
    auto settings = Default_Browser_Settings_Getter::Get();
    settings.headless = true;
    Browser_Creator::Create(settings);
    auto lines = Browser_Navigator::Go_To_Url_And_Extract_Lines(settings,"https://adventofcode.com/2019/day/1/input");
    
    std::cout << lines << std::endl;
    Keep_End_Chars_Until_Char_Is_Found(lines[0],'>');
    Remove_Last_Element(lines);
    
    std::cout << "fix" << std::endl;
    std::cout << lines << std::endl;
    

    int total = 0;
    for (auto const& line: lines){
        auto num = as_unsigned(line);
        num /= 3;
        num -= 2;
        total += num;
    }
    std::cout << total << std::endl;
❱