class
❪string❫
❪iostream❫
❪memory❫
❪utility❫
❪memory❫
❪"code/tools/games/ur/assets/assets"❫
❪"code/tools/games/ur/state/game_state"❫
❪SFML/Window.hpp❫
❪SFML/Audio.hpp❫
⚯
❪"code/utilities/peripheral/sound/sfml/sound_loader"❫
❪"code/utilities/fonts/font_files/droid_sans_mono"❫
⚞⚟

◀public: static▶ Assets ☀Load(Game_State const& state) ❰
    Assets x;
    
    auto spot_size = sf::Vector2f(200, 200);
    
    auto fill_color = sf::Color(72, 163, 133);
    auto border_color = sf::Color(255,255,255);
    
    sf::RectangleShape rectangle(spot_size);
    rectangle.setPosition(150,210);
    rectangle.setFillColor(fill_color);
    rectangle.setOutlineColor(border_color);
    rectangle.setOutlineThickness(3);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Down(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Down(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Right(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Right(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Right(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Up(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Up(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Left(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Down(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Left(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Up(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Down(rectangle);
    Full_Move_Right(rectangle);
    Full_Move_Right(rectangle);
    Full_Move_Right(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Right(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Right(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Right(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Up(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Left(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Down(rectangle);
    Full_Move_Down(rectangle);
    x.spots.emplace_back(rectangle);
    
    Full_Move_Right(rectangle);
    x.spots.emplace_back(rectangle);
    
    return x;
❱

◀private: static▶ void ☀Full_Move_Down(sf::RectangleShape & x) ❰
    auto size = x.getSize();
    auto outline_thickness = x.getOutlineThickness();
    x.move(0,size.x + outline_thickness);
❱
◀private: static▶ void ☀Full_Move_Up(sf::RectangleShape & x) ❰
    auto size = x.getSize();
    auto outline_thickness = x.getOutlineThickness();
    x.move(0,(size.x + outline_thickness) * -1);
❱
◀private: static▶ void ☀Full_Move_Right(sf::RectangleShape & x) ❰
    auto size = x.getSize();
    auto outline_thickness = x.getOutlineThickness();
    x.move(size.x + outline_thickness,0);
❱
◀private: static▶ void ☀Full_Move_Left(sf::RectangleShape & x) ❰
    auto size = x.getSize();
    auto outline_thickness = x.getOutlineThickness();
    x.move((size.x + outline_thickness) * -1,0);
❱