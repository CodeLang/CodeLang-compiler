class
❪string❫
❪iostream❫
❪memory❫
❪utility❫
❪memory❫
❪"code/tools/games/ur/assets/assets"❫
❪"code/tools/games/ur/state/game_state"❫
❪SFML/Window.hpp❫
❪SFML/Audio.hpp❫
⚯
❪"code/utilities/peripheral/sound/sfml/sound_loader"❫
❪"code/utilities/fonts/font_files/droid_sans_mono"❫
⚞⚟

◀public: static▶ Assets ☀Load(Game_State const& state) ❰
    Assets x;
    
    x.spots = Build_Board_Spots();
    
    return x;
❱

◀private: static▶ Named_Rectangles ☀Build_Board_Spots() ❰

    auto spot_size = sf::Vector2f(200, 200);
    
    auto fill_color = sf::Color(72, 163, 133);
    auto border_color = sf::Color(255,255,255);
    
    Named_Rectangles x;
    Named_Rectangle rectangle;
    rectangle.shape.setSize(spot_size);
    rectangle.shape.setPosition(150,210);
    rectangle.shape.setFillColor(fill_color);
    rectangle.shape.setOutlineColor(border_color);
    rectangle.shape.setOutlineThickness(3);
    
    rectangle.name = "p2_4";
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "shared_1";
    Full_Move_Down(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "p1_4";
    Full_Move_Down(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "p1_3";
    Full_Move_Right(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "p1_2";
    Full_Move_Right(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "p1_1";
    Full_Move_Right(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "shared_4";
    Full_Move_Up(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "p2_1";
    Full_Move_Up(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "p2_2";
    Full_Move_Left(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "shared_3";
    Full_Move_Down(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "shared_2";
    Full_Move_Left(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "p2_3";
    Full_Move_Up(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "shared_5";
    Full_Move_Down(rectangle.shape);
    Full_Move_Right(rectangle.shape);
    Full_Move_Right(rectangle.shape);
    Full_Move_Right(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "shared_6";
    Full_Move_Right(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "shared_7";
    Full_Move_Right(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "shared_8";
    Full_Move_Right(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "p2_end_1";
    Full_Move_Up(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "p2_end_2";
    Full_Move_Left(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "p1_end_2";
    Full_Move_Down(rectangle.shape);
    Full_Move_Down(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    rectangle.name = "p1_end_1";
    Full_Move_Right(rectangle.shape);
    x.shapes.emplace_back(rectangle);
    
    return x;
❱

◀private: static▶ void ☀Full_Move_Down(sf::RectangleShape & x) ❰
    auto size = x.getSize();
    auto outline_thickness = x.getOutlineThickness();
    x.move(0,size.x + outline_thickness);
❱
◀private: static▶ void ☀Full_Move_Up(sf::RectangleShape & x) ❰
    auto size = x.getSize();
    auto outline_thickness = x.getOutlineThickness();
    x.move(0,(size.x + outline_thickness) * -1);
❱
◀private: static▶ void ☀Full_Move_Right(sf::RectangleShape & x) ❰
    auto size = x.getSize();
    auto outline_thickness = x.getOutlineThickness();
    x.move(size.x + outline_thickness,0);
❱
◀private: static▶ void ☀Full_Move_Left(sf::RectangleShape & x) ❰
    auto size = x.getSize();
    auto outline_thickness = x.getOutlineThickness();
    x.move((size.x + outline_thickness) * -1,0);
❱