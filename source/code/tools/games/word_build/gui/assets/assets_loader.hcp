class
❪string❫
❪iostream❫
❪memory❫
❪utility❫
❪"code/tools/games/word_build/gui/assets/assets"❫
❪SFML/Window.hpp❫
❪SFML/Audio.hpp❫
⚯
❪"code/utilities/peripheral/sound/sfml/sound_loader"❫
⚞⚟

◀public: static▶ Assets ☀Load() ❰
    Assets x;
    //Load_Font(x.main_font,"/home/laptop/Desktop/math_game/fonts/Neat_Chalk.ttf");
    //Load_Font(x.main_font,"/usr/share/fonts/truetype/tlwg/Loma.ttf");
    // Load_Font(x.main_font,"/home/laptop/Desktop/math_game/fonts/chinese.ttf");
    
    // x.title_text.setString(L"我爱你");
    // x.title_text.setFont(x.main_font);
    // x.title_text.setCharacterSize(1);
    // Center_Text(x.title_text);
    // x.title_text.move(-200,-300);
    
    Load_Font(x.main_font,"/home/laptop/Desktop/DroidSansMono.ttf");
    
    // x.score.setString("0");
    // x.score.setFont(x.main_font);
    // x.score.setCharacterSize(150);
    // //Center_Text(x.score);
    // x.score.move(0,200);
    
    //x.letters.emplace_back(std::move(x.score));
    
    
    //sf::Text temp;
    //temp.setColor(sf::Color(255, 255, 255));
    
    
    auto base_color = sf::Color(133, 133, 133);
    
    
    //player 1 cursor
    x.p1.pointer = sf::CircleShape(20, 3);
    x.p1.pointer.setFillColor(sf::Color(22, 181, 43));
    x.p1.pointer_x_offset = 225;
    x.p1.pointer_y_offset = 480;
    x.p1.selection_y_offset = 455;
    
    
    //player 2 cursor
    x.p2.pointer = sf::CircleShape(20, 3);
    x.p2.pointer.setFillColor(sf::Color(184, 26, 163));
    
    x.p2.pointer.rotate(180);
    x.p2.pointer_x_offset = 270;
    x.p2.pointer_y_offset = 315;
    x.p2.selection_y_offset = 333;
    
    
    //set player scores
    x.p1.score.setFont(x.main_font);
    x.p1.score.setCharacterSize(90);
    x.p2.score.setFont(x.main_font);
    x.p2.score.setCharacterSize(90);
    x.p2.score.setPosition(220,150);
    x.p1.score.setPosition(220,530);
    x.p1.score.setString("0");
    x.p2.score.setString("0");
    x.p1.score.setFillColor(base_color);
    x.p2.score.setFillColor(base_color);
    
    //countdown timer
    x.countdown.setFont(x.main_font);
    x.countdown.setCharacterSize(90);
    x.countdown.setFillColor(base_color);
    Top_Right_Text(x.countdown);
    
    //player score
    x.score.setFont(x.main_font);
    x.score.setCharacterSize(90);
    x.score.setFillColor(base_color);
    
    
    Sound_Loader::Load_Sound(x.p1.combo1,"/home/laptop/Desktop/PuyoPuyo/Feli/Standard Voice/voice20_bank_e [1].wav");
    Sound_Loader::Load_Sound(x.p1.combo2,"/home/laptop/Desktop/PuyoPuyo/Feli/Standard Voice/voice20_bank_e [2].wav");
    Sound_Loader::Load_Sound(x.p1.combo3,"/home/laptop/Desktop/PuyoPuyo/Feli/Standard Voice/voice20_bank_e [3].wav");
    Sound_Loader::Load_Sound(x.p1.combo4,"/home/laptop/Desktop/PuyoPuyo/Feli/Standard Voice/voice20_bank_e [4].wav");
    Sound_Loader::Load_Sound(x.p1.combo5,"/home/laptop/Desktop/PuyoPuyo/Feli/Standard Voice/voice20_bank_e [5].wav");
    Sound_Loader::Load_Sound(x.p1.combo6,"/home/laptop/Desktop/PuyoPuyo/Feli/Standard Voice/voice20_bank_e [6].wav");
    Sound_Loader::Load_Sound(x.p1.combo7,"/home/laptop/Desktop/PuyoPuyo/Feli/Standard Voice/voice20_bank_e [7].wav");
    Sound_Loader::Load_Sound(x.p1.combo8,"/home/laptop/Desktop/PuyoPuyo/Feli/Standard Voice/voice20_bank_e [8].wav");
    Sound_Loader::Load_Sound(x.p1.combo9,"/home/laptop/Desktop/PuyoPuyo/Feli/Standard Voice/voice20_bank_e [9].wav");
    Sound_Loader::Load_Sound(x.p1.combo10,"/home/laptop/Desktop/PuyoPuyo/Feli/Standard Voice/voice20_bank_e [10].wav");
    Sound_Loader::Load_Sound(x.p1.combo11,"/home/laptop/Desktop/PuyoPuyo/Feli/Standard Voice/voice20_bank_e [11].wav");
    
    Sound_Loader::Load_Sound(x.p2.combo1,"/home/laptop/Desktop/PuyoPuyo/Ringo/Standard Voice/voice00_bank_e [1].wav");
    Sound_Loader::Load_Sound(x.p2.combo2,"/home/laptop/Desktop/PuyoPuyo/Ringo/Standard Voice/voice00_bank_e [2].wav");
    Sound_Loader::Load_Sound(x.p2.combo3,"/home/laptop/Desktop/PuyoPuyo/Ringo/Standard Voice/voice00_bank_e [3].wav");
    Sound_Loader::Load_Sound(x.p2.combo4,"/home/laptop/Desktop/PuyoPuyo/Ringo/Standard Voice/voice00_bank_e [4].wav");
    Sound_Loader::Load_Sound(x.p2.combo5,"/home/laptop/Desktop/PuyoPuyo/Ringo/Standard Voice/voice00_bank_e [5].wav");
    Sound_Loader::Load_Sound(x.p2.combo6,"/home/laptop/Desktop/PuyoPuyo/Ringo/Standard Voice/voice00_bank_e [6].wav");
    Sound_Loader::Load_Sound(x.p2.combo7,"/home/laptop/Desktop/PuyoPuyo/Ringo/Standard Voice/voice00_bank_e [7].wav");
    Sound_Loader::Load_Sound(x.p2.combo8,"/home/laptop/Desktop/PuyoPuyo/Ringo/Standard Voice/voice00_bank_e [8].wav");
    Sound_Loader::Load_Sound(x.p2.combo9,"/home/laptop/Desktop/PuyoPuyo/Ringo/Standard Voice/voice00_bank_e [9].wav");
    Sound_Loader::Load_Sound(x.p2.combo10,"/home/laptop/Desktop/PuyoPuyo/Ringo/Standard Voice/voice00_bank_e [10].wav");
    Sound_Loader::Load_Sound(x.p2.combo11,"/home/laptop/Desktop/PuyoPuyo/Ringo/Standard Voice/voice00_bank_e [11].wav");
    
    Sound_Loader::Load_Sound(x.p1.success1,"/home/laptop/Desktop/PuyoPuyo/Other Sound Effects/se_bank [40].wav");
    Sound_Loader::Load_Sound(x.p1.success2,"/home/laptop/Desktop/PuyoPuyo/Other Sound Effects/se_bank [41].wav");
    Sound_Loader::Load_Sound(x.p1.success3,"/home/laptop/Desktop/PuyoPuyo/Other Sound Effects/se_bank [42].wav");
    
    Sound_Loader::Load_Sound(x.p2.success1,"/home/laptop/Desktop/PuyoPuyo/Other Sound Effects/se_bank [40].wav");
    Sound_Loader::Load_Sound(x.p2.success2,"/home/laptop/Desktop/PuyoPuyo/Other Sound Effects/se_bank [41].wav");
    Sound_Loader::Load_Sound(x.p2.success3,"/home/laptop/Desktop/PuyoPuyo/Other Sound Effects/se_bank [42].wav");
    
    
    return x;
    
    
❱

◀private: static▶ void ☀Center_Text(sf::Text & text)❰
    text.setPosition(sf::VideoMode::getDesktopMode().width/2.0f,sf::VideoMode::getDesktopMode().height/2.0f);
    text.setOrigin(text.getLocalBounds().left + text.getLocalBounds().width / 2.0f,
                           text.getLocalBounds().top + text.getLocalBounds().height / 2.0f);
❱

◀private: static▶ void ☀Top_Right_Text(sf::Text & text)❰
    text.setPosition(sf::VideoMode::getDesktopMode().width - 200,0);
❱

◀private: static▶ void ☀Load_Font(sf::Font & font, std::string const& file_name)❰

    if (!font.loadFromFile(file_name)){
        std::cerr << "failed to load " << file_name << std::endl;
        exit(0);
    }
❱