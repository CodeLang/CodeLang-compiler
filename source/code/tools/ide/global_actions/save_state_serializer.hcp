class
❪"code/tools/ide/settings/ide_settings"❫
❪"code/tools/ide/global_actions/global_action"❫
❪"SDL.h"❫
⚯
❪"code/utilities/graphics/sdl/sdl_fullscreener"❫
❪"code/tools/ide/global_actions/global_action_decider"❫
❪"code/utilities/program/wrappers/zenity/file_selector/file_selector"❫
❪"code/utilities/formats/json/converters/lib"❫
❪"code/utilities/code/concept_string_tree_parser"❫
❪"code/utilities/formats/json/converters/lib"❫
❪"code/utilities/data_structures/graphics/objects/buildable_schema_faced_tree/buildable_schema_faced_tree_tokenizer"❫
❪"code/utilities/formats/json/converters/json_file_io"❫
❪"code/tools/ide/global_actions/save_state"❫
⚞⚟


◀public: static▶ void ☀Save(Ide_Settings & settings)❰

    //build save state
    Save_State x;
    x.version = 1; //what version we are on
    x.elements = settings.elements;
    
    //save it
    Json_File_Io::Read_Compressed_Json_File(x,settings.desktop.save.file_name,Json_Compression_Format::BSON);
    
❱
◀public: static▶ void ☀Load(Ide_Settings & settings)❰
    
    //load raw json first
    auto json = Json_File_Io::Read_Compressed_Json_From_File(settings.desktop.save.file_name,Json_Compression_Format::BSON);
    int version = json["version"];
    std::cout << version << std::endl;
❱