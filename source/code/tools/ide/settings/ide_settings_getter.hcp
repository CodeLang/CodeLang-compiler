class
❪string❫
❪unordered_map❫
❪"code/utilities/data_structures/graphics/bitmap/full_color_bitmap/full_color_bitmap"❫
❪"code/utilities/fonts/bdf/settings/character_segment"❫
❪"code/tools/ide/settings/ide_settings"❫
❪"code/utilities/data_structures/graphics/objects/label/label_settings"❫
❪"code/utilities/data_structures/graphics/objects/mouse/events/mouse_events_checker"❫
❪"code/utilities/graphics/imgui/render/elements/rectangle_drawer"❫
❪"code/utilities/graphics/imgui/render/elements/full_color_bitmap_drawer"❫
❪"code/utilities/data_structures/graphics/text/text_to_bitmap"❫
❪"code/utilities/graphics/imgui/ui_renders"❫
❪"code/tools/transcompilers/unilang/tokens/get_tokens"❫
❪"code/utilities/data_structures/graphics/bitmap/pixel/pixel_slider"❫
❪"code/utilities/colors/rectangle_shades"❫
⚯
❪"code/utilities/data_structures/graphics/objects/label/style/default_label_styles"❫
❪"code/utilities/data_structures/graphics/objects/faced_label/faced_label_converter"❫
❪"code/utilities/data_structures/graphics/objects/mouse/premade/standard_mouse"❫
❪"code/utilities/fonts/bdf/complete/unilang/unilang_segments"❫
❪"code/utilities/fonts/bdf/character_maps/character_maps"❫
❪"code/utilities/fonts/bdf/character_maps/character_maps_getter"❫
❪"code/utilities/graphics/imgui/background/background_settings_getter"❫
❪"code/utilities/execution/thread_pool_getter"❫
❪"code/utilities/data_structures/graphics/objects/slider/default_sliders"❫
❪"code/utilities/data_structures/graphics/bitmap/premade/tree_expand_symbol"❫
❪"code/utilities/data_structures/graphics/bitmap/premade/tree_button"❫
❪"code/utilities/fonts/bdf/complete/unilang/unilang_character_maps"❫
❪"code/utilities/data_structures/graphics/objects/cursor/premade/blue_cursor"❫
❪"code/utilities/graphics/sdl/standard_sdl_init_settings"❫
❪"code/utilities/data_structures/graphics/objects/faced_label/premade/faced_label_premades"❫
❪"code/utilities/data_structures/graphics/objects/buttoned_faced_label/premade/buttoned_faced_label_premades"❫
⚞⚟

◀public: static▶ Ide_Settings ☀Get()❰

    //SDL and Imgui related init settings
    Ide_Settings settings;
    settings.init = Standard_Sdl_Init_Settings::Get("Unilang IDE");
    
    settings.thread_pool = Thread_Pool_Getter::Get_Max();
    
    
    settings.background = Background_Settings_Getter::Get();
    
    //font related settings
    settings.unilang_font_lookup = Unilang_Character_Maps::Get();
    
    //mouse
    settings.mouse.mouse = Standard_Mouse::Get();
    
    
    settings.btree.tree.state.structure = Faced_Tree_Example();
    //settings.btree.schema = 
    
    
    return settings;
❱

// ◀private: static▶ Positioned_Face_Grid ☀Faced_Grid_Example()❰
//     Positioned_Face_Grid x;
    
//     auto face_label = Faced_Label_Example();
    
    
//     for (size_t i = 0; i < 5; ++i){
//         x.cell.emplace_back(Faced_Label_Converter::Remove_Pos(face_label));
//         x.breaks.emplace_back(Should_Line_Break::NO);
        
//         x.cell.emplace_back(Faced_Label_Converter::Remove_Pos(face_label));
//         x.breaks.emplace_back(Should_Line_Break::NO);
        
//         x.cell.emplace_back(Faced_Label_Converter::Remove_Pos(face_label));
//         x.breaks.emplace_back(Should_Line_Break::NO);
        
//         x.cell.emplace_back(Faced_Label_Converter::Remove_Pos(face_label));
//         x.breaks.emplace_back(Should_Line_Break::NO);
        
//         x.cell.emplace_back(Faced_Label_Converter::Remove_Pos(face_label));
//         x.breaks.emplace_back(Should_Line_Break::YES);
//     }
    
//     return x;
// ❱

// ◀private: static▶ Positioned_Button_Face_Tree ☀Pos_Faced_Tree_Example()❰
//     Positioned_Button_Face_Tree tr;
    
//     auto face_label = Faced_Label_Example();
    
//     Buttoned_Faced_Label x;
//     x.button = Tree_Button::Create();
//     x.label = Faced_Label_Converter::Remove_Pos(face_label);
    
//    auto top = tr.nodes.begin();
//    auto root=tr.nodes.insert(top,x);
//    auto n1=tr.nodes.append_child(root,x);
//    auto n2=tr.nodes.append_child(root,x);
//    auto n3=tr.nodes.append_child(root,x);
//    auto n4=tr.nodes.append_child(root,x);
//    auto n5=tr.nodes.append_child(root,x);
//    auto n6=tr.nodes.append_child(n3,x);
//    auto n7=tr.nodes.append_child(n3,x);
//    auto n8=tr.nodes.append_child(n3,x);
//    auto n9=tr.nodes.append_child(n7,x);
//    auto n10=tr.nodes.append_child(n9,x);
//    auto n11=tr.nodes.append_child(n10,x);
    
//     return tr;
// ❱

◀private: static▶ Button_Face_Tree ☀Faced_Tree_Example()❰
    Button_Face_Tree tr;
    
    auto x = Buttoned_Faced_Label_Premades::Single_Plain_White_Box_For_Tree();
    
   auto top = tr.nodes.begin();
   auto root=tr.nodes.insert(top,x);
   auto n1=tr.nodes.append_child(root,x);
   auto n2=tr.nodes.append_child(root,x);
   auto n3=tr.nodes.append_child(root,x);
   auto n4=tr.nodes.append_child(root,x);
   auto n5=tr.nodes.append_child(root,x);
   auto n6=tr.nodes.append_child(n3,x);
   auto n7=tr.nodes.append_child(n3,x);
   auto n8=tr.nodes.append_child(n3,x);
   auto n9=tr.nodes.append_child(n7,x);
   auto n10=tr.nodes.append_child(n9,x);
   auto n11=tr.nodes.append_child(n10,x);
    
    return tr;
❱

◀private: static▶ Positioned_Select_Menu ☀Global_Select_Menu()❰
    Positioned_Select_Menu x;
    
    auto face_label = Faced_Label_Converter::Remove_Pos(Single_Menu_Face());
    face_label.faces[0].label.message = "Fullscreen";
    
    auto top = x.menu.nodes.begin();
    x.menu.nodes.insert(top,face_label);
    
    face_label.faces[0].label.message = "Submit Issue";
    x.menu.nodes.insert(top,face_label);
    
    face_label.faces[0].label.message = "Exit";
    x.menu.nodes.insert(top,face_label);
    
    return x;
❱

◀private: static▶ Positioned_Faced_Label ☀Single_Menu_Face()❰
    Positioned_Faced_Label x;
    Label_Face face;
    
    //single face
    face.name = "fill this in";
    face.label.message = "fill this in";
    face.label.styles = Default_Label_Styles::Label_Style_Menu();
    x.faces.emplace_back(face);
    
    return x;
❱


