class
❪"code/tools/noogle/settings/noogle_settings"❫
⚯
❪iostream❫
❪"code/utilities/web/chrome/driver/chrome_driver_selector"❫
❪"code/utilities/filesystem/paths/lib"❫
❪"code/utilities/secret/secret_getter"❫
⚞⚟


◀public: static▶ Noogle_Settings ☀Get() ❰
    Noogle_Settings settings;
    settings.browser = Default_Browser_Settings();
    
    settings.devise_google_search_urls = Google_Search_Settings();
    settings.devise_google_query_urls = Google_Query_Settings();
    
    return settings;
❱

◀private: static▶ Browser_Settings ☀Default_Browser_Settings() ❰

    Browser_Settings settings;
    settings.headless = false;
    settings.ignore_certificate_errors = true;
    settings.disable_notifications = true;
    settings.disable_extensions = true;
    settings.start_maximized = true;
    settings.use_user_agent = true;
    settings.user_agent = My_User_Agent();
    
    settings.use_browser_profile = true;
    settings.browser_profile = Full_Path_To_Home() + "/.config/google-chrome/Default";
    
    //waiting
    settings.set_implicit_wait = true;
    settings.implicit_wait_s = 10;
    
    //names
    settings.browser_name = "browser";
    
    // other settings
    settings.use_direct_driver_path = false;
    settings.direct_driver_path = "";
    settings.chrome_driver_derive = Chrome_Driver_Selector::Default_Settings();
    
    return settings;
❱

◀private: static▶ Google_Search_Url_Devise_Settings ☀Google_Search_Settings()❰

    Google_Search_Url_Devise_Settings settings;
    settings.base_url = "https://www.google.com/search?q=";
    settings.page_count = 3;
    settings.results_per_page = 100; //max 100
    return settings;
❱
◀private: static▶ Google_Json_Url_Devise_Settings ☀Google_Query_Settings()❰

    Google_Json_Url_Devise_Settings settings;
    settings.base_url = "https://www.googleapis.com/customsearch/v1?q=";
    settings.page_count = 10; //if the total results go over 100 no more results
    settings.results_per_page = 10; //max 10
    
    settings.lr = "lang_en";
    //settings.api_key = Secret_Getter::Google_Search_Api_Key();
    //settings.api_key = "AIzaSyB1n0TXJdPuLnzq5FSPPy3rLXsgQ3oeWl0";
    settings.api_key = "AIzaSyCTLQa10iaQUCXA8JR0em8becvOxc_rsrU";
    //settings.api_key = "AIzaSyBpqi_cAkBv4M2PDRk_9OY0d5L7Jamrrcs";
    //settings.api_key = "AIzaSyBhrthz5VLdgobwvygfK_N_ZX894PR6O2g";
    //settings.api_key = "AIzaSyBQTWvlJQAaenqSpsHJrtpJKtE22SSym8o";
    //settings.api_key = "AIzaSyD_Llog80YUj8N6RhupWdv9rfCH026lA20";
    //settings.api_key = "AIzaSyAhVYEGA75ZPyFvhsIIXf05mqCF8jYZ3ic";
    settings.cx = Secret_Getter::Google_Search_Cx();
    return settings;
❱

◀private: static▶ std::string ☀Noogle_Public_Api_Key()❰
    return "AIzaSyBXZHWfqI3G2_ingGwSpPc4hPNoEN_FwOM";
❱

◀private: static▶ std::string ☀My_User_Agent()❰
    return "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36";
❱
◀private: static▶ std::string ☀Spoofed_User_Agent()❰
    return "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/601.7.7 (KHTML, like Gecko) Version/9.1.2 Safari/601.7.7";
❱

