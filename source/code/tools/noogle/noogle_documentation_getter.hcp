class
❪iostream❫
❪fstream❫
❪string❫
❪"code/transcompilers/unilang/structure/model/inlined_structures"❫
❪"code/transcompilers/unilang/structure/model/structure"❫
⚯
❪"code/utilities/converters/lib"❫
❪"code/utilities/json/functions/lib"❫
⚞⚟

◀public: static▶ Structure ☀Get() ❰
    Structure s;
    s.literature.paragraphs.emplace_back(Title());
    s.literature.paragraphs.emplace_back(Introduction());
    s.literature.paragraphs.emplace_back(Installation());
    return s;
❱


◀private: static▶ Paragraph ☀Title() ❰
    Paragraph p;
    p.depth.value = as_wstring("0");
    p.title.value = as_wstring("Like google but you get back numbers");
    
    Sentence s;
    Sentence_Image img;
    img.alternative_text.value = as_wstring("noogle");
    s.images.emplace_back(img);
    p.sentences.emplace_back(s);
    return p;
❱

◀private: static▶ Paragraph ☀Introduction() ❰
    Paragraph p;
    p.depth.value = as_wstring("0");
    p.title.value = as_wstring("Introduction");
    
    Add_Sentence(p,"noogle is like google but you get back numbers");
    Add_Sentence(p,"it runs various search engines, culminates the data, and provides you the most common numerical results shared across various websites");
    Add_Sentence(p,"for example, if you noogled 'us flag' you'd expect to get back 50 states");
    Add_Sentence(p,"if you noogled 'snow white' you'd expect to get back 7 dwarfs");
    return p;
❱

◀private: static▶ Paragraph ☀Installation() ❰
    Paragraph p;
    p.depth.value = as_wstring("0");
    p.title.value = as_wstring("Installation");
    
    Add_Sentence(p,"software can be installed through apt-get");
    
    std::string example;
    example += "sudo curl -s --compressed -o /etc/apt/sources.list.d/noogle.list 'https://raw.githubusercontent.com/luxe/luxe.github.com/master/releases/noogle/noogle.list'\n";
    example += "sudo apt update\n";
    example += "sudo apt install noogle\n";
    Add_Sentence_With_Code(p,"the following commands will add the ppa and install the software",example);
    
    example = "sudo apt remove noogle";
    Add_Sentence_With_Code(p,"to uninstall you can use:",example);
    return p;
❱

◀private: static▶ void ☀Add_Sentence(Paragraph & p, std::string const& str) ❰
    Sentence s;
    s.text.value = as_wstring(str);
    p.sentences.emplace_back(s);
❱
◀private: static▶ void ☀Add_Sentence_With_Code(Paragraph & p, std::string const& str, std::string const& code) ❰
    Sentence s;
    s.text.value = as_wstring(str);
    
    Code_Line line;
    line.line.value = as_wstring(code);
    s.codes.emplace_back(line);
    p.sentences.emplace_back(s);
❱

◀private: static▶ void ☀Add_Sentence_With_Image(Paragraph & p, std::string const& str, std::string const& image_path) ❰
    Sentence s;
    s.text.value = as_wstring(str);
    
    Sentence_Image img;
    img.image_path.value = as_wstring(image_path);
    s.images.emplace_back(img);
    p.sentences.emplace_back(s);
❱