class
❪"code/tools/noogle/meta_settings"❫
❪"code/utilities/web/automate/browser/browser_settings"❫
⚯
❪iostream❫
❪"code/utilities/web/chrome/driver/chrome_driver_selector"❫
❪pybind11/embed.h❫
❪"code/utilities/web/automate/browser/browser_creator"❫
⚞⚟

◀public: static▶ void ☀Run(Meta_Settings const& meta) ❰
    
    //RAII stuff.  make sure we have a python environment going for the duration of the program
    pybind11::scoped_interpreter guard{};
    
    //create a browser to automate queries on
    auto settings = Default_Browser_Settings();
    Browser_Creator::Create(settings);
    Go_To_Google(settings);
❱


◀private: static▶ Browser_Settings ☀Default_Browser_Settings() ❰

    Browser_Settings settings;
    settings.headless = false;
    settings.ignore_certificate_errors = true;
    settings.disable_notifications = true;
    settings.disable_extensions = true;
    settings.start_maximized = true;
    settings.use_user_agent = true;
    settings.user_agent = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/601.7.7 (KHTML, like Gecko) Version/9.1.2 Safari/601.7.7";
    
    //waiting
    settings.set_implicit_wait = true;
    settings.implicit_wait_s = 10;
    
    //names
    settings.browser_name = "browser";
    
    // other settings
    settings.driver_path = Chrome_Driver_Selector::Get_Driver_Path();
    return settings;
❱

◀private: static▶ void ☀Go_To_Google(Browser_Settings const& settings)❰
    Go_To_Url(settings,"http://google.com");
❱

◀private: static▶ void ☀Go_To_Url(Browser_Settings const& browser, std::string const& url)❰
    
    pybind11::exec(browser.browser_name + ".get('" + url + "')");
❱