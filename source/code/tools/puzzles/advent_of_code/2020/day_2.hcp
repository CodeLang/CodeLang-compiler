class
❪vector❫
❪string❫
❪"code/utilities/types/vectors/converters/lib"❫
❪"code/utilities/types/vectors/observers/lib"❫
❪"code/utilities/types/vectors/transformers/lib"❫
❪"code/utilities/types/strings/observers/splitting/lib"❫
❪"code/utilities/types/strings/observers/counters/lib"❫
⚯
⚞⚟

◀public: static▶ void ☀Part_1(std::vector<std::string> lines) ❰

    int total = 0;

    for (auto const& line: lines) {
        auto parts = Split_By_Spaces(line);
        
        //parse
        int low_range = as_signed(Split_Into_Parts_From_Dash(parts[0])[0]);
        int high_range = as_signed(Split_Into_Parts_From_Dash(parts[0])[1]);
        char letter = parts[1][0];
        std::string password = parts[2];
        
        //validate
        auto count = Count_Instances_Of_Character(password,letter);
        if (count >= low_range && count <= high_range){
            ++total;
        }
    }
    std::cout << total << std::endl;
❱
◀public: static▶ void ☀Part_2(std::vector<std::string> const& lines) ❰
❱