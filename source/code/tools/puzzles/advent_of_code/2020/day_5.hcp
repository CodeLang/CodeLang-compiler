class
❪vector❫
❪string❫
❪"code/utilities/types/vectors/converters/lib"❫
❪"code/utilities/types/vectors/observers/lib"❫
❪"code/utilities/types/vectors/transformers/lib"❫
❪"code/utilities/types/strings/observers/splitting/lib"❫
❪"code/utilities/types/strings/observers/other/lib"❫
❪"code/utilities/types/strings/observers/counters/lib"❫
❪"code/utilities/types/strings/transformers/removing/lib"❫
❪"code/utilities/types/strings/observers/char/lib"❫
❪"code/utilities/types/char/lib"❫
❪"code/utilities/output/printers/lib"❫
❪"code/utilities/types/string_grid/string_grid_builder"❫
❪"code/utilities/data_structures/compass_directions/compass_direction_diagnonal_movement"❫
❪"code/utilities/data_structures/compass_directions/compass_direction_diagnonal_movements"❫
⚯
❪"code/utilities/data_structures/point/point"❫
❪"code/utilities/data_structures/point/point_mover"❫
❪"code/utilities/types/strings/transformers/trimming/lib"❫
⚞⚟

◀public: static▶ void ☀Part_1(std::vector<std::string> lines) ❰

    std::vector<int> unique_ids
    for (auto const& it: lines){
        uniq_ids.emplace_back(Get_Unique_Id(it));
    }
❱
◀public: static▶ void ☀Part_2(std::vector<std::string> lines) ❰
❱

◀public: static▶ int ☀Get_Unique_Id(std::string const& line) ❰

    int row = 0;
    for (size_t i = 0; i < 7; ++i){
    }
    
    for (size_t i = 7; i < 11; ++i){
    }
❱