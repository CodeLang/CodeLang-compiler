class
❪iostream❫
❪string❫
❪utility❫
❪thread❫
❪"code/tools/repo_tools/network_used/program_options/program_options"❫
❪"code/tools/repo_tools/network_used/settings/settings_getter"❫
❪"code/utilities/tshark/tshark_spawner"❫
❪"code/utilities/processes/lib"❫
⚯
⚞⚟


◀public: static▶ void ☀Execute_Needed_Tasks(Program_Options const& options) ❰
    
    //get the default settings modified by user's program options.
    auto settings = Settings_Getter::Get(options);
    
    Maybe_Output_And_Flush_With_Newline(settings.verbose,"setting up repo...");
    settings.a_path = Repo_Establisher::Establish_And_Get_Path(settings.repo);
    
    
    std::string results;
    std::thread t([&](){ results = Tshark_Spawner::Spawn_And_Get_Results_When_Killed(); });
    
    auto pid = Wait_Until_We_Have_A_Pid_Of("tshark");
    
    std::cout << pid << std::endl;
    
    //Send_Ctrl_C_To_Pid(pid);
    
    //wait until tshark is killed
    t.join();
    
    std::cout << results << std::endl;
❱