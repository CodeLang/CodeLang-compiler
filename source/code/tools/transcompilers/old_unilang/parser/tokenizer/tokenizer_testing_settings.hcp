class
❪functional❫
❪"code/tools/transcompilers/old_unilang/tokens/all_language_tokens"❫
⚯

⚞⚟

//the tokenizer can be re-used for different levels of the file being parsed
//We feed the tokenizer the context in which it should be parsing based on these test functions
//At a higher level, we will skip over lower level token groups, and store them in a single token
//we call more and more specific tokenizers each time we parse a token in a more specific context.
◀public:

	//tests whether a character represents a relevant starter token
	std::function<bool(All_Language_Tokens,wchar_t)> starter_test;

	//tests whether the starter token pairs with the other character (in which case , it would be an ender token)
	std::function<bool(All_Language_Tokens,wchar_t,wchar_t)> matching_set_test;
▶ 