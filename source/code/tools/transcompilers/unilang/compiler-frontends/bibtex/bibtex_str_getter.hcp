class

❪fstream❫
❪iostream❫
❪"code/tools/transcompilers/unilang/structure/model/structure"❫
❪"code/tools/transcompilers/unilang/contributor/contributor"❫
❪"code/tools/transcompilers/unilang/structure/model/inlined_structures"❫
❪"code/tools/transcompilers/unilang/options/language-specific/markdown/markdown_settings"❫
❪"code/tools/transcompilers/unilang/options/language-specific/bibtex/bibtex_settings"❫
⚯
❪"code/utilities/types/strings/transformers/appending/lib"❫
❪"code/utilities/types/converters/lib"❫
❪"code/utilities/types/strings/observers/other/lib"❫
❪"code/tools/transcompilers/unilang/structure/print/struct_derivers"❫
❪"code/utilities/types/strings/transformers/casing/case_modifier"❫
❪"code/utilities/program/call/lib"❫
❪"code/utilities/filesystem/paths/lib"❫
❪"code/tools/transcompilers/unilang/options/manipulation/case_adjustment_settings"❫
❪"code/tools/transcompilers/unilang/structure/adjust/casing_adjuster"❫
❪"code/utilities/types/vectors/observers/lib"❫
❪"code/tools/transcompilers/unilang/structure/adjust/structure_adjuster"❫
❪"code/utilities/types/vectors/operators/lib"❫
❪"code/utilities/types/char/lib"❫
❪"code/tools/transcompilers/unilang/doxygen_block_printer/grammar_adjuster"❫
❪"code/utilities/time/date/lib"❫
❪"code/utilities/types/strings/observers/converting/lib"❫
⚞⚟

◀public: static▶ std::string ☀Get(Structure const& structure, std::vector<Contributor> const& contributors, Bibtex_Settings const& settings)❰
    std::string text;
    
    for (auto const& citation: structure.literature.citations){
        Append_With_Newline(text,Make_BibTex_Citation_Entry(citation));
    }
    
    return text;
❱

◀public: static▶ std::string ☀Make_BibTex_Citation_Entry(Citation const& citation)❰
    std::string str;
    
    Append(str,"@");
    Append(str,as_string(citation.type.value));
    Append(str,"{");
    Append(str,as_string(citation.id.value));
    
    for (auto const& kv: citation.attributes){
        Append_With_Newline(str,",");
        Append(str,"\t");
        Append(str,as_string(kv.key.value));
        Append(str," = ");
        Append_In_DQuotes(str,as_string(kv.value.value));
    }
    
    
    
    Append_With_Newline(str,"}");
    
    return str;
❱
