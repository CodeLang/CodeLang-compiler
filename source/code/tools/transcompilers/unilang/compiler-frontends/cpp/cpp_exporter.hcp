class

❪vector❫
❪string❫
❪iostream❫
❪"code/tools/transcompilers/unilang/structure/model/structure"❫
❪"code/tools/transcompilers/unilang/contributor/contributor"❫
❪"code/tools/transcompilers/unilang/options/language-specific/cpp/cpp_export_settings"❫
❪"code/tools/transcompilers/unilang/structure/model/inlined_structures"❫
❪"code/tools/transcompilers/unilang/structure/adjust/structure_adjuster"❫
❪"code/tools/transcompilers/unilang/structure/print/file_printer"❫
❪"code/utilities/types/vectors/operators/lib"❫
❪"code/utilities/linguistics/computer/source_language"❫

⚯

⚞⚟

◀public: static▶ std::vector<std::string> ☀Export(Structure structure, std::vector<Contributor> const& contributors, Cpp_Export_Settings const& settings)❰


    std::vector<std::string> files_created;
    
    //force structure changes
    //TODO: we need to store adjustment phases.  Different tools might want the structure
    //at different phases in its transition.  For now, and this is a hack, I'll make a copy
    //for the test wrapper
    Structure copy = structure;
    Structure_Adjuster::Adjust(copy,settings.manipulations,Source_Language::CPP);
    
    files_created += File_Printer::Create(copy,settings);
    
    return files_created;
❱