class

❪fstream❫
❪iostream❫
❪"code/tools/transcompilers/unilang/structure/model/structure"❫
❪"code/utilities/contributor/contributor"❫
❪"code/tools/transcompilers/unilang/structure/model/inlined_structures"❫
❪"code/tools/transcompilers/unilang/options/language-specific/markdown/markdown_settings"❫
⚯
❪"code/utilities/types/strings/transformers/appending/lib"❫
⚞⚟

◀public: static▶ std::string ☀Get(Sentence const& s, std::vector<Contributor> const& contributors, Markdown_Settings const& settings)❰
    std::string text;
    
    //stop early if we don't want to print the code block
    if (!settings.code.print){
        return text;
    }
    
    //stop early if we don't have any code lines
    if (s.codes.empty()){
        return text;
    }
    
    //print code block
    Append_With_Newline(text,settings.code.start_code_block);
    for (auto const& it: s.codes){
        Append_With_Newline(text,as_string(it.line.value));
    }
    Append_With_Newline(text,settings.code.end_code_block);
    
    return text;
❱