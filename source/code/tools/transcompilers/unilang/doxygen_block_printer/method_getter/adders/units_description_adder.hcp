class


❪"code/tools/transcompilers/unilang/structure/model/sections/method/method_item"❫
❪"code/tools/transcompilers/unilang/structure/model/sections/data_member/data_member_item"❫
❪"code/tools/transcompilers/unilang/options/language-specific/c/c_export_settings"❫
❪"code/tools/transcompilers/unilang/doxygen_block_printer/doxygen_block_maker"❫
❪"code/tools/transcompilers/unilang/doxygen_block_printer/doxygen_data"❫
⚯
❪"code/utilities/linguistics/computer/literals/adjuster/literal_adjuster"❫
❪"code/tools/transcompilers/unilang/doxygen_block_printer/value_constraint_comment_deriver"❫
❪"code/tools/transcompilers/unilang/structure/print/derivers/identifier_name_deriver"❫
❪"code/tools/transcompilers/unilang/doxygen_block_printer/doxygen_data_shared"❫
❪"code/utilities/units/unit_suffix_lookuper"❫
❪"code/tools/transcompilers/unilang/doxygen_block_printer/grammar_adjuster"❫
❪"code/utilities/types/converters/lib"❫
⚞⚟

◀public: template <typename T>
static auto Add(T const& t, std::string & description, Method_Parameter_Unit_Settings const& settings) -> void{
    
    
    //decide whether we want to add the units top the description
    if (settings.put_units_in_the_description_comment){
        if (!t.units.value.empty()){
            Append_Units_To_Description(description,t.units);
        }
    }
    
    return;
}▶


◀private: static▶ void ☀Append_Units_To_Description(std::string & description, Token_Value const& units)❰
    description += " (units: ";
    
    //get the units.  we expect this to be right, or else we error out
    auto suffix = Unit_Suffix_Lookuper::Get_Unit_Suffix_From_Data_Unit(as_string(units.value));
    
    // description units: unit (abbrev)
    description += as_string(units.value) + " (" + suffix + "))";
    
❱
