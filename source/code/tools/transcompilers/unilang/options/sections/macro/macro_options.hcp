class
❪"code/utilities/types/strings/transformers/casing/case_format_style"❫
❪"code/tools/transcompilers/unilang/options/comment/comment_settings"❫
❪"code/tools/transcompilers/unilang/options/sections/extern_c/define_check/define_check_end_comment_settings"❫
❪"code/tools/transcompilers/unilang/options/sections/extern_c/define_check/define_check_settings"❫
❪"code/tools/transcompilers/unilang/options/sections/macro/if_else_style"❫
❪"code/tools/transcompilers/unilang/options/sections/macro/redefinition_report_strategy"❫
❪"code/tools/transcompilers/unilang/options/sections/macro/macro_redefinition_message_settings"❫
❪"code/tools/transcompilers/unilang/options/sections/macro/preprocessor_directives"❫
⚯

⚞⚟

◀
public:
    
    
    //whether or not to add redefinition guards
    bool redefinition_guards = true;
    Define_Check_Settings check;
    Define_Check_End_Comment_Settings end_comment;
    
    //printing a redefinition related settings
    Macro_Redefinition_Message_Settings redefinition;
    
    //general structure
    //*relies on redefinition_guards
    bool only_show_else_portion_when_there_is_content_there = true;
    If_Else_Style if_else_style = If_Else_Style::IF_TRUE_ELSE;
    
    //casing of identifier
    Case_Format_Style casing = Case_Format_Style::UPPER_CASE_WITH_UNDERSCORES;
    
    //how comments will look
    Comment_Settings comment;
    
    //settings that shouldn't need changed
    //the actual C preprocessor directives expected by the C/C++ compiler
    Preprocessor_Directives directives;
▶
