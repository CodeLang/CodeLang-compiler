class

❪"code/transcompilers/unilang/structure/model/inlined_structures"❫
❪"code/transcompilers/unilang/tokens/generic_token"❫
❪"code/transcompilers/unilang/tokens/get_tokens"❫
❪"code/utilities/pdf/pdf_settings"❫
⚯
❪"code/utilities/types/general/lib"❫
❪"code/utilities/exits/lib"❫
❪"code/utilities/filesystem/files/creating/lib"❫
❪"code/utilities/locale/lib"❫
❪"code/utilities/types/vectors/observers/lib"❫
❪"code/utilities/types/vectors/operators/lib"❫
❪"code/utilities/filesystem/files/getting/lib"❫
❪"code/utilities/filesystem/paths/lib"❫
❪"code/transcompilers/unilang/user-frontend/code_graphs_creator"❫
❪"code/transcompilers/unilang/dependency_graph_creator/code_graph"❫
❪"code/transcompilers/unilang/main/root_settings/root_settings_getter"❫
❪"code/transcompilers/unilang/compiler-frontends/markdown/markdown_str_getter"❫
❪"code/transcompilers/unilang/compiler-frontends/dzslides/dzslides_exporter"❫
❪"code/utilities/pdf/latex_template_getter"❫
❪"code/utilities/web/dropbox/dropbox_uploader"❫
❪"code/utilities/secret/secret_getter"❫
❪"code/utilities/filesystem/files/temp_file"❫
❪"code/utilities/pdf/pdf_creator"❫
⚞⚟

//garbage deps (needs fixed)
//sudo apt install texlive-latex-base
//sudo apt-get install pandoc
//sudo apt-get install texlive-fonts-recommended
//sudo tlmgr option repository ftp://tug.org/historic/systems/texlive/2017/tlnet-final
//tlmgr install xcolor
◀public: static▶ void ☀Execute_Needed_Tasks() ❰

    //Unicode please
    Set_English_UTF8_Locale();

    //move somewhere
    Move_To_Unilang_Docs_Place_In_Repo();
    
    //the files we are reading/building
    auto from = "unilang_docs.unilang";
    auto to_readme = Bazel_Derived_Root_Of_Repo() + "README.md";
    auto to_raw_pdf = Bazel_Derived_Root_Of_Repo() + "README-pdf.md";
    auto to_manual_pdf = Bazel_Derived_Root_Of_Repo() + "README.pdf";
    auto to_latex_template = Bazel_Derived_Root_Of_Repo() + "README.tx";
    auto slides_base_name = Bazel_Derived_Root_Of_Repo() + "README-slides";
    bool upload_to_dropbox = true;
    
    
    Program_Input input;
    input.settings = Root_Settings_Getter::Get();
    
    //build markdown documentation
    auto structure = Get_Unilang_Structure_From_File(from);
    auto contributors = input.settings.compiler_settings.trevor.contributors;
    auto md_settings = input.settings.compiler_settings.trevor.settings.foreign_language.markdown;
    auto result = Markdown_Str_Getter::Get(structure,contributors,md_settings);
    Write_To_File(to_readme,result);
    
    //build pdf documentation
    
    
    Pdf_Settings pdf_settings;
    pdf_settings.latex_template = to_latex_template;
    pdf_settings.md_format = to_raw_pdf;
    pdf_settings.resulting_pdf = to_manual_pdf;
    Pdf_Creator::Create_Pdf(structure,pdf_settings);
    
    //build html slides documentation
    auto dz_settings = input.settings.compiler_settings.trevor.settings.foreign_language.dzslides;
    Dzslides_Exporter::Create_Markdown_And_Slides(structure,contributors,dz_settings,slides_base_name);
    
    
    Upload(upload_to_dropbox,to_manual_pdf);
❱

◀private: static▶ Structure ☀Get_Unilang_Structure_From_File(std::string const& file)❰

    //parse it
    Program_Input input;
    input.settings = Root_Settings_Getter::Get();
    input.options.input_files.emplace_back(file);
    auto graphs = Code_Graphs_Creator::Turn_Files_Into_Code_Graphs(input);
    
    //ensure the parse was good
    if (graphs.size() != 1){
        Exit_With_Error("we should have parsed out a single code graph");
    }
    
    //build markdown documentation
    auto structure = graphs[0].structure;
    return structure;
❱

◀private: static▶ void ☀Upload(bool const& upload_to_dropbox, std::string const& to_manual_pdf)❰

    //upload pdf to dropbox
    if (upload_to_dropbox){
        
        Dropbox_Upload_Settings d_settings;
        d_settings.access_token = Secret_Getter::Unilang_Dropbox_Access_Key();
        d_settings.local_file_path = to_manual_pdf;
        d_settings.docker_file_path = "unilang/unilang.pdf";
        d_settings.strategy = Upload_To_Dropbox_Strategy::CURL_LIB;
        Dropbox_Uploader::Upload(d_settings);
    }
❱


◀private: static▶ void ☀Move_To_Unilang_Docs_Place_In_Repo() ❰
    auto build_from = Bazel_Derived_Path_To_Self_Unilang();
    Set_Path(build_from);
❱