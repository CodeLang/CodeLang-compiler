class


❪"code/tools/transcompilers/unilang/structure/model/sections/data_member/data_member_item"❫
❪"code/tools/transcompilers/unilang/options/sections/data_member/data_member_options"❫
❪"code/tools/transcompilers/unilang/structure/model/sections/method/method_item"❫
❪"code/tools/transcompilers/unilang/options/manipulation/methods/via_data_member/data_member_utility_function_options"❫
❪"code/tools/transcompilers/unilang/type_converters/special-type-to-printf/settings/special_printf_type"❫
❪"code/tools/transcompilers/unilang/options/language-specific/c_language_version"❫
❪"code/tools/transcompilers/unilang/structure/adjust/methods/creating_methods/via_data_members/individual_getters/printf/printf_statement_kind"❫
⚯
❪"code/tools/transcompilers/unilang/structure/model/structure"❫
❪"code/tools/transcompilers/unilang/type_converters/type-to-printf-specifier/printf_specifier_getter"❫
❪"code/tools/transcompilers/unilang/type_converters/special-type-to-printf/special_type_printf_specifier_getter"❫
❪"code/utilities/converters/lib"❫
⚞⚟

◀public: static▶ std::vector<Body_Token_Value> ☀Create(Special_Printf_Type type, Data_Member_Item const& item, C_Language_Version const& version)❰
    
    //create special printf
    std::vector<Body_Token_Value> body;
    Body_Token_Value t;
    
    t.name = Body_Token_Name::REGULAR;
    t.value =  L"printf(\"%s%s: %";
    body.push_back(t);


	 //get the specifier
     Printf_Specifier_Settings settings;
     auto specifier = Printf_Specifier_Getter::Get(version,settings,type.unilang_type_name);
    
    t.name = Body_Token_Name::REGULAR;
    t.value =  as_wstring(specifier);
    body.push_back(t);
    
    t.name = Body_Token_Name::REGULAR;
    t.value =  L"\\n\",AsciiStringCStr(&tIndent),\"" + item.name.value + L"\",";
    body.push_back(t);
    
    body+=type.body;
    
    t.name = Body_Token_Name::REGULAR;
    t.value =  L");";
    body.push_back(t);
    
    return body;
❱
