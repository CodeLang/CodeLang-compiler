class
❪string❫
❪"code/transcompilers/unilang/tokens/all_language_tokens"❫
❪"code/transcompilers/unilang/tokens/token_name"❫
❪"code/utilities/converters/lib"❫
⚯
⚞⚟

◀public: static▶ std::wstring ☀Create_User_Typed_Token(All_Language_Tokens const& tokens, Token_Name const& name, std::string const& content) ❰
    
    std::wstring result;
    Token t;
    for (auto const& it: tokens.tokens){
        if (it.name == name){
            t = it;
            break;
        }
    }
    
    result += t.start;
    result += as_wstring(content);
    result += t.end;
    
    return result;
❱