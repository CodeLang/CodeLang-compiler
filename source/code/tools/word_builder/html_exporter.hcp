class
❪string❫
❪"code/utilities/colors/color_palettes"❫
❪"code/utilities/std_hackery/std_aliases"❫
❪"code/tools/word_builder/settings/settings"❫
❪"code/tools/word_builder/data/puzzle"❫
⚯
❪iostream❫
❪"code/utilities/types/vectors/creators/lib"❫
❪"code/utilities/types/vectors/observers/lib"❫
❪"code/utilities/filesystem/files/creating/lib"❫
❪"code/utilities/types/strings/transformers/appending/lib"❫
❪"code/utilities/random/lib"❫
❪"code/utilities/html/basic_html_template_getter"❫
⚞⚟

◀public: static▶ void ☀Export(std::vector<Puzzle> const& puzzles, Settings const& settings, std::string const& file_name)❰

    //create artifact
    auto str = As_Html_Format(puzzles,settings);
    Write_To_File(file_name,str);
❱

◀private: static▶ std::string ☀As_Html_Format(std::vector<Puzzle> const& puzzles, Settings const& settings)❰
    
    //build css
    std::string css;
    Append_With_Newline(css,"table { ");
    Append_With_Newline(css,"border: 0px solid black; ");
    Append_With_Newline(css,"font-size: 40px; ");
    Append_With_Newline(css,"}");
    
    Append_With_Newline(css,"th, td { ");
    Append_With_Newline(css,"border: 1px solid black; ");
    Append_With_Newline(css,"font-size: 40px; ");
    Append_With_Newline(css,"}");
    
    Append_With_Newline(css,"table { ");
    Append_With_Newline(css,"width: 25%; ");
    Append_With_Newline(css,"}");
    
    Append_With_Newline(css,"table { padding-bottom: 60px; }");
    Append_With_Newline(css,"tr { text-align: center; }");
    
    //build body
    std::string body;
    
    //build html
    std::string html = Basic_Html_Template_Getter::Get(css,body);
    return html;
❱