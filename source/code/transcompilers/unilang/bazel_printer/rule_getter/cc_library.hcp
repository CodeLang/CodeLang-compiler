class


❪"code/transcompilers/unilang/structure/structure"❫
❪"code/transcompilers/unilang/options/bazel/build_rule_settings"❫
❪"code/utilities/types/strings/transformers/appending/lib"❫
⚯
❪"code/utilities/types/general/lib"❫
❪"code/utilities/types/strings/transformers/other/lib"❫
❪"code/utilities/types/char/lib"❫
❪"code/utilities/types/vectors/transformers/lib"❫
❪"code/utilities/filesystem/paths/lib"❫
❪"code/transcompilers/unilang/bazel_printer/path_to_bazel_path"❫
❪"code/transcompilers/unilang/bazel_printer/target_name_deriver"❫
❪"code/transcompilers/unilang/bazel_printer/deps_printer"❫
⚞⚟

◀public: static▶ std::string ☀Create(Structure const& structure, Build_Rule_Settings const& settings)❰
    
    std::string result;
    Append_With_Newline(result,"av_cc_library(");
    Append(result,"    name = ");
    Append(result,Get_Double_Quote());
    Append(result,Target_Name_Deriver::Derive(structure));
    Append(result,Get_Double_Quote());
    Append_With_Newline(result,",");
    Append_With_Newline(result,Source_And_Headers(structure,settings));
    Append_With_Newline(result,",");
    result += Deps_Printer::Get(structure,settings);
    Append_With_Newline(result,")");
    return result;
❱

◀private: static▶ std::string ☀Source_And_Headers(Structure const& structure, Build_Rule_Settings const& settings)❰
    std::string result;
    
    std::string src_name = structure.name + ".cc";
    std::string hdr_name = structure.name + ".hh";
    
    Append_With_Newline(result,"    srcs = [");
    Append(result,"        ");
    Append(result,Get_Double_Quote());
    Append_With_Newline(result,src_name);
    Append(result,Get_Double_Quote());
    Append_With_Newline(result,    "],");
    Append_With_Newline(result,    "hdrs = [");
    Append(result,"        ");
    Append(result,Get_Double_Quote());
    Append_With_Newline(result,hdr_name);
    Append(result,Get_Double_Quote());
    Append_With_Newline(result,    "],");
    return result;
❱