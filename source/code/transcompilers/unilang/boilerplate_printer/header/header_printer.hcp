class


❪"code/transcompilers/unilang/structure/sections/import/import_section"❫
❪"code/transcompilers/unilang/options/language-specific/c_export_settings"❫
❪"code/transcompilers/unilang/options/language-specific/hidl_export_settings"❫
❪"code/transcompilers/unilang/structure/inlined_structures"❫
❪"code/transcompilers/unilang/boilerplate_printer/header/unilang-convert/header_adjuster"❫
❪"code/utilities/streams/filestreams/lib"❫
⚯
❪"code/utilities/types/strings/transformers/casing/case_modifier"❫
❪"code/transcompilers/unilang/structure-printer/filename/file_name_getter"❫
❪"code/transcompilers/unilang/boilerplate_printer/header/header_collector"❫
❪"code/transcompilers/unilang/boilerplate_printer/header/block/header_block_comment_getter"❫
❪"code/transcompilers/unilang/comment_creator/comment_creator"❫
⚞⚟



//HIDL HEADERS
◀public: static▶ void ☀Print_Object_Data_Headers(std::string file_name,std::wofstream & out, std::vector<Import_Item> imports, Hidl_Export_Settings const& options, Inlined_Structures const& inlines)❰
    
    //print chunk of header includes
    Adjust_Headers_Collect_Format_And_Print_For_Hidl(file_name,out,imports,options,inlines,Header_Collector::Get_Object_Data_Headers);
❱

//C HEADERS
◀public: static▶ void ☀Print_Object_Interface_Headers(std::string file_name,std::wofstream & out, std::vector<Import_Item> imports, C_Export_Settings const& options, Inlined_Structures const& inlines)❰
    
    //print obnoxious comment above include chunk
    Possibly_Print_Obnoxious_Comment_Block(out,options);
    
    //print chunk of header includes
    Adjust_Headers_Collect_Format_And_Print(file_name,out,imports,options,inlines,Header_Collector::Get_Object_Interface_Headers);
❱
◀public: static▶ void ☀Print_Object_Implementation_Headers(std::string file_name,std::wofstream & out, std::vector<Import_Item> imports, C_Export_Settings const& options, Inlined_Structures const& inlines)❰
    
    //print obnoxious comment above include chunk
    Possibly_Print_Obnoxious_Comment_Block(out,options);
    
    //print chunk of header includes
    Adjust_Headers_Collect_Format_And_Print(file_name,out,imports,options,inlines,Header_Collector::Get_Object_Implementation_Headers);
❱
◀public: static▶ void ☀Print_Object_Data_Headers(std::string file_name,std::wofstream & out, std::vector<Import_Item> imports, C_Export_Settings const& options, Inlined_Structures const& inlines)❰
    
    //print obnoxious comment above include chunk
    Possibly_Print_Obnoxious_Comment_Block(out,options);
    
    //print chunk of header includes
    Adjust_Headers_Collect_Format_And_Print(file_name,out,imports,options,inlines,Header_Collector::Get_Object_Data_Headers_For_C);
❱
◀public: static▶ void ☀Print_Global_Interface_Headers(std::string file_name,std::wofstream & out, std::vector<Import_Item> imports, C_Export_Settings const& options, Inlined_Structures const& inlines)❰
    
    //print obnoxious comment above include chunk
    Possibly_Print_Obnoxious_Comment_Block(out,options);
    
    //print chunk of header includes
    Adjust_Headers_Collect_Format_And_Print(file_name,out,imports,options,inlines,Header_Collector::Get_Global_Interface_Headers);
❱
◀public: static▶ void ☀Print_Global_Implementation_Headers(std::string file_name,std::wofstream & out, std::vector<Import_Item> imports, C_Export_Settings const& options, Inlined_Structures const& inlines, std::vector<Method_Item> const& methods)❰
    //print obnoxious comment above include chunk
    Possibly_Print_Obnoxious_Comment_Block(out,options);
    
    //print chunk of header includes
    Header_Adjuster::Adjust_UniLang_Header_Names_To_Match_Actual_Exported_File_Casing(imports,options.general.filesystem_naming);
    auto str = Header_Collector::Get_Global_Implementation_Headers(file_name,imports,inlines,options.portion.import_options,methods);
    Print_To_Stream(out,str);
❱
◀public: static▶ void ☀Print_Object_Data_And_Interface(std::string file_name,std::wofstream & out, std::vector<Import_Item> imports, C_Export_Settings const& options, Inlined_Structures const& inlines)❰
    //print obnoxious comment above include chunk
    Possibly_Print_Obnoxious_Comment_Block(out,options);
    
    //print chunk of header includes
    Adjust_Headers_Collect_Format_And_Print(file_name,out,imports,options,inlines,Header_Collector::Get_Object_Data_And_Interface);
❱
◀public: static▶ void ☀Print_Object_Data_Interface_And_Implementation(std::string file_name,std::wofstream & out, Import_Section imports, C_Export_Settings const& options, Inlined_Structures const& inlines)❰
    //print obnoxious comment above include chunk
    Possibly_Print_Obnoxious_Comment_Block(out,options);
    
    //print chunk of header includes
    Header_Adjuster::Adjust_UniLang_Header_Names_To_Match_Actual_Exported_File_Casing(imports.interface_dependencies,options.general.filesystem_naming);
    Header_Adjuster::Adjust_UniLang_Header_Names_To_Match_Actual_Exported_File_Casing(imports.implementation_dependencies,options.general.filesystem_naming);
    auto str = Header_Collector::Get_Object_Data_Interface_And_Implementation(file_name,imports,inlines,options);
    Print_To_Stream(out,str);
    Print_To_Stream_With_Newline(out,"");
❱

◀private: static▶ void ☀Possibly_Print_Obnoxious_Comment_Block(std::wofstream & out, C_Export_Settings const& options)❰
    auto block_comment = Header_Block_Comment_Getter::Get(options.portion.import_options.block_comment);
    if (!block_comment.empty()){
      Print_To_Stream(out,block_comment);
      Print_To_Stream_With_Newline(out,"");
    }
❱

◀private: template <typename Fun>
static void Adjust_Headers_Collect_Format_And_Print(std::string file_name,std::wofstream & out, std::vector<Import_Item> imports, C_Export_Settings const& options, Inlined_Structures const& inlines, Fun const& fun){
    Header_Adjuster::Adjust_UniLang_Header_Names_To_Match_Actual_Exported_File_Casing(imports,options.general.filesystem_naming);
    auto str = fun(file_name,imports,inlines,options);
    Print_To_Stream(out,str);
    Print_To_Stream_With_Newline(out,"");
}
▶
◀private: template <typename Fun>
static void Adjust_Headers_Collect_Format_And_Print_For_Hidl(std::string file_name,std::wofstream & out, std::vector<Import_Item> imports, Hidl_Export_Settings const& options, Inlined_Structures const& inlines, Fun const& fun){
    Header_Adjuster::Adjust_UniLang_Header_Names_To_Match_Actual_Exported_File_Casing(imports,options.general.filesystem_naming);
    auto str = fun(file_name,imports,inlines,options.portion.import_options);
    Print_To_Stream(out,str);
    Print_To_Stream_With_Newline(out,"");
}
▶
