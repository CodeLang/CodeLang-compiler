class

❪fstream❫
❪iostream❫
❪"code/transcompilers/unilang/structure/structure"❫
❪"code/transcompilers/unilang/contributor/contributor"❫
❪"code/transcompilers/unilang/structure/inlined_structures"❫
❪"code/transcompilers/unilang/options/language-specific/mermaid_settings"❫
⚯
❪"code/utilities/types/strings/transformers/appending/lib"❫
❪"code/utilities/converters/lib"❫
❪"code/utilities/types/strings/observers/other/lib"❫
❪"code/transcompilers/unilang/structure-printer/struct_derivers"❫
❪"code/utilities/types/strings/transformers/casing/case_modifier"❫
❪"code/utilities/shell/lib"❫
❪"code/utilities/filesystem/paths/lib"❫
❪"code/transcompilers/unilang/options/manipulation/case_adjustment_settings"❫
❪"code/transcompilers/unilang/structure-adjuster/casing_adjuster"❫
❪"code/utilities/types/vectors/observers/lib"❫
❪"code/transcompilers/unilang/structure-adjuster/structure_adjuster"❫
❪"code/utilities/types/vectors/operators/lib"❫
⚞⚟

◀public: static▶ std::vector<std::string> ☀Export(Structure structure, std::vector<Contributor> const& contributors, Mermaid_Settings const& settings)❰
   
   Structure_Adjuster::Adjust(structure,settings.manipulations,Source_Language::Mermaid);
   
  //created files
  std::vector<std::string> created;
  
  auto code = Build_Mermaid_Graph_Description(structure, settings);
  
  return created;
❱

◀private: static▶ std::string ☀Build_Mermaid_Graph_Description(Structure const& structure, Mermaid_Settings const& settings)❰
    std::string text;
    return text;
❱