class
❪vector❫
❪string❫
❪"code/transcompilers/unilang/tokens/generic_token"❫
❪"code/transcompilers/unilang/tokens/get_tokens"❫
❪"code/utilities/bdf/settings/bdf_settings"❫
❪"code/utilities/bdf/glyph/glyphs"❫
⚯
❪"code/transcompilers/unilang/tokens/unique_tokens_checker"❫
❪"code/utilities/bdf/exporter/bdf_settings_to_format"❫
❪"code/transcompilers/unilang/tokens/get_tokens"❫
⚞⚟


◀public: static▶ std::vector<Character_Segment> ☀Get()❰
    std::vector<Character_Segment> x;
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(0));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(1));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(2));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(3));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(4));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(5));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(6));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(7));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(8));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(9));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(10));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(11));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(12));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(13));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(14));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(15));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(16));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(17));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(18));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(19));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(20));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(21));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(22));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(23));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(24));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(25));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(26));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(27));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(28));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(29));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(30));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(31));
    x.emplace_back(Predefined_Characters::Space());
    //symbols
    x.emplace_back(Predefined_Characters::Exclam());
    x.emplace_back(Predefined_Characters::Double_Quotation());
    x.emplace_back(Predefined_Characters::Number_Sign());
    x.emplace_back(Predefined_Characters::Dollar_Sign());
    x.emplace_back(Predefined_Characters::Percent_Sign());
    x.emplace_back(Predefined_Characters::Ampersand());
    x.emplace_back(Predefined_Characters::Single_Quotation_Mark());
    x.emplace_back(Predefined_Characters::Paren_Left());
    x.emplace_back(Predefined_Characters::Paren_Right());
    x.emplace_back(Predefined_Characters::Asterisk());
    x.emplace_back(Predefined_Characters::Plus());
    x.emplace_back(Predefined_Characters::Comma());
    x.emplace_back(Predefined_Characters::Hyphen());
    x.emplace_back(Predefined_Characters::Period());
    x.emplace_back(Predefined_Characters::Slash());
    x.emplace_back(Predefined_Characters::Zero());
    x.emplace_back(Predefined_Characters::One());
    x.emplace_back(Predefined_Characters::Two());
    x.emplace_back(Predefined_Characters::Three());
    x.emplace_back(Predefined_Characters::Four());
    x.emplace_back(Predefined_Characters::Five());
    x.emplace_back(Predefined_Characters::Six());
    x.emplace_back(Predefined_Characters::Seven());
    x.emplace_back(Predefined_Characters::Eight());
    x.emplace_back(Predefined_Characters::Nine());
    x.emplace_back(Predefined_Characters::Colon());
    x.emplace_back(Predefined_Characters::Semicolon());
    x.emplace_back(Predefined_Characters::LessThan());
    x.emplace_back(Predefined_Characters::Equal());
    x.emplace_back(Predefined_Characters::Greater());
    x.emplace_back(Predefined_Characters::Question_Mark());
    x.emplace_back(Predefined_Characters::At());
    x.emplace_back(Predefined_Characters::CapitalA());
    x.emplace_back(Predefined_Characters::CapitalB());
    x.emplace_back(Predefined_Characters::CapitalC());
    x.emplace_back(Predefined_Characters::CapitalD());
    x.emplace_back(Predefined_Characters::CapitalE());
    x.emplace_back(Predefined_Characters::CapitalF());
    x.emplace_back(Predefined_Characters::CapitalG());
    x.emplace_back(Predefined_Characters::CapitalH());
    x.emplace_back(Predefined_Characters::CapitalI());
    x.emplace_back(Predefined_Characters::CapitalJ());
    x.emplace_back(Predefined_Characters::CapitalK());
    x.emplace_back(Predefined_Characters::CapitalL());
    x.emplace_back(Predefined_Characters::CapitalM());
    x.emplace_back(Predefined_Characters::CapitalN());
    x.emplace_back(Predefined_Characters::CapitalO());
    x.emplace_back(Predefined_Characters::CapitalP());
    x.emplace_back(Predefined_Characters::CapitalQ());
    x.emplace_back(Predefined_Characters::CapitalR());
    x.emplace_back(Predefined_Characters::CapitalS());
    x.emplace_back(Predefined_Characters::CapitalT());
    x.emplace_back(Predefined_Characters::CapitalU());
    x.emplace_back(Predefined_Characters::CapitalV());
    x.emplace_back(Predefined_Characters::CapitalW());
    x.emplace_back(Predefined_Characters::CapitalX());
    x.emplace_back(Predefined_Characters::CapitalY());
    x.emplace_back(Predefined_Characters::CapitalZ());
    x.emplace_back(Predefined_Characters::LeftBracket());
    x.emplace_back(Predefined_Characters::BackSlash());
    x.emplace_back(Predefined_Characters::RightBracket());
    x.emplace_back(Predefined_Characters::Carrot());
    x.emplace_back(Predefined_Characters::Underscore());
    x.emplace_back(Predefined_Characters::Grave());
    x.emplace_back(Predefined_Characters::Lowercase_A());
    x.emplace_back(Predefined_Characters::Lowercase_B());
    x.emplace_back(Predefined_Characters::Lowercase_C());
    x.emplace_back(Predefined_Characters::Lowercase_D());
    x.emplace_back(Predefined_Characters::Lowercase_E());
    x.emplace_back(Predefined_Characters::Lowercase_F());
    x.emplace_back(Predefined_Characters::Lowercase_G());
    x.emplace_back(Predefined_Characters::Lowercase_H());
    x.emplace_back(Predefined_Characters::Lowercase_I());
    x.emplace_back(Predefined_Characters::Lowercase_J());
    x.emplace_back(Predefined_Characters::Lowercase_K());
    x.emplace_back(Predefined_Characters::Lowercase_L());
    x.emplace_back(Predefined_Characters::Lowercase_M());
    x.emplace_back(Predefined_Characters::Lowercase_N());
    x.emplace_back(Predefined_Characters::Lowercase_O());
    x.emplace_back(Predefined_Characters::Lowercase_P());
    x.emplace_back(Predefined_Characters::Lowercase_Q());
    x.emplace_back(Predefined_Characters::Lowercase_R());
    x.emplace_back(Predefined_Characters::Lowercase_S());
    x.emplace_back(Predefined_Characters::Lowercase_T());
    x.emplace_back(Predefined_Characters::Lowercase_U());
    x.emplace_back(Predefined_Characters::Lowercase_V());
    x.emplace_back(Predefined_Characters::Lowercase_W());
    x.emplace_back(Predefined_Characters::Lowercase_X());
    x.emplace_back(Predefined_Characters::Lowercase_Y());
    x.emplace_back(Predefined_Characters::Lowercase_Z());
    x.emplace_back(Predefined_Characters::Brace_Left());
    x.emplace_back(Predefined_Characters::Bar());
    x.emplace_back(Predefined_Characters::Brace_Right());
    x.emplace_back(Predefined_Characters::Tilde());
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(127));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(128));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(129));
    x.emplace_back(Predefined_Characters::Uni0082());
    x.emplace_back(Predefined_Characters::Uni0083());
    x.emplace_back(Predefined_Characters::Uni0084());
    x.emplace_back(Predefined_Characters::Uni0085());
    x.emplace_back(Predefined_Characters::Uni0086());
    x.emplace_back(Predefined_Characters::Uni0087());
    x.emplace_back(Predefined_Characters::Uni0088());
    x.emplace_back(Predefined_Characters::Uni0089());
    x.emplace_back(Predefined_Characters::Uni008A());
    x.emplace_back(Predefined_Characters::Uni008B());
    x.emplace_back(Predefined_Characters::Uni008C());
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(141));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(142));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(143));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(144));
    x.emplace_back(Predefined_Characters::Uni0091());
    x.emplace_back(Predefined_Characters::Uni0092());
    x.emplace_back(Predefined_Characters::Uni0093());
    x.emplace_back(Predefined_Characters::Uni0094());
    x.emplace_back(Predefined_Characters::Uni0095());
    x.emplace_back(Predefined_Characters::Uni0096());
    x.emplace_back(Predefined_Characters::Uni0097());
    x.emplace_back(Predefined_Characters::Uni0098());
    x.emplace_back(Predefined_Characters::Uni0099());
    x.emplace_back(Predefined_Characters::Uni009A());
    x.emplace_back(Predefined_Characters::Uni009B());
    x.emplace_back(Predefined_Characters::Uni009C());
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(157));
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(158));
    x.emplace_back(Predefined_Characters::Uni009F());
    x.emplace_back(Predefined_Characters::Empty_Character_Segment(160));
    x.emplace_back(Predefined_Characters::Exclamation_Point_Down());
    x.emplace_back(Predefined_Characters::Cent());
    x.emplace_back(Predefined_Characters::Sterling());
    x.emplace_back(Predefined_Characters::Currency());
    x.emplace_back(Predefined_Characters::Yen());
    x.emplace_back(Predefined_Characters::BrokenBar());
    x.emplace_back(Predefined_Characters::Section());
    x.emplace_back(Predefined_Characters::Dieresis());
    x.emplace_back(Predefined_Characters::Copyright());
    x.emplace_back(Predefined_Characters::Ordfeminine());
    x.emplace_back(Predefined_Characters::Guillemotleft());
    x.emplace_back(Predefined_Characters::Logical_Not());
    x.emplace_back(Predefined_Characters::uni00AD());
    x.emplace_back(Predefined_Characters::registered());
    x.emplace_back(Predefined_Characters::macron());
    x.emplace_back(Predefined_Characters::degree());
    x.emplace_back(Predefined_Characters::plusminus());
    x.emplace_back(Predefined_Characters::uni00B2());
    x.emplace_back(Predefined_Characters::uni00B3());
    x.emplace_back(Predefined_Characters::ACute());
    x.emplace_back(Predefined_Characters::Mu());
    x.emplace_back(Predefined_Characters::Paragraph());
    x.emplace_back(Predefined_Characters::Period_Centered());
    x.emplace_back(Predefined_Characters::Cedilla());
    x.emplace_back(Predefined_Characters::uni00B9());
    x.emplace_back(Predefined_Characters::Ordmasculine());
    x.emplace_back(Predefined_Characters::Guillemotright());
    x.emplace_back(Predefined_Characters::One_Quarter());
    x.emplace_back(Predefined_Characters::One_Half());
    x.emplace_back(Predefined_Characters::Three_Quarters());
    x.emplace_back(Predefined_Characters::Question_Down());
    x.emplace_back(Predefined_Characters::Agrave());
    x.emplace_back(Predefined_Characters::acute());
    x.emplace_back(Predefined_Characters::Acircumflex());
    x.emplace_back(Predefined_Characters::Atilde());
    x.emplace_back(Predefined_Characters::adieresis());
    x.emplace_back(Predefined_Characters::Aring());
    x.emplace_back(Predefined_Characters::AE());
    x.emplace_back(Predefined_Characters::Ccedilla());
    x.emplace_back(Predefined_Characters::Egrave());
    x.emplace_back(Predefined_Characters::Eacute());
    x.emplace_back(Predefined_Characters::Ecirumflex());
    x.emplace_back(Predefined_Characters::Edieresis());
    x.emplace_back(Predefined_Characters::Igrave());
    x.emplace_back(Predefined_Characters::Iacute());
    x.emplace_back(Predefined_Characters::Icircumflex());
    x.emplace_back(Predefined_Characters::Idieresis());
    x.emplace_back(Predefined_Characters::Eth());
    x.emplace_back(Predefined_Characters::Ntilde());
    x.emplace_back(Predefined_Characters::Ograve());
    x.emplace_back(Predefined_Characters::Oacute());
    x.emplace_back(Predefined_Characters::Ocircumflex());
    x.emplace_back(Predefined_Characters::Otilde());
    x.emplace_back(Predefined_Characters::Odieresis());
    x.emplace_back(Predefined_Characters::Multiply());
    x.emplace_back(Predefined_Characters::Oslash());
    x.emplace_back(Predefined_Characters::Ugrave());
    x.emplace_back(Predefined_Characters::Uacute());
    x.emplace_back(Predefined_Characters::Ucircumflex());
    x.emplace_back(Predefined_Characters::Udieresis());
    x.emplace_back(Predefined_Characters::Yacute());
    x.emplace_back(Predefined_Characters::Thorn());
    x.emplace_back(Predefined_Characters::Germandbls());
    x.emplace_back(Predefined_Characters::agrave());
    x.emplace_back(Predefined_Characters::Aacute());
    x.emplace_back(Predefined_Characters::acircumflex());
    x.emplace_back(Predefined_Characters::atilde());
    //x.emplace_back(Predefined_Characters::Empty_Character_Segment(228));
    x.emplace_back(Predefined_Characters::aring());
    x.emplace_back(Predefined_Characters::ae());
    x.emplace_back(Predefined_Characters::ccedilla());
    x.emplace_back(Predefined_Characters::egrave());
    x.emplace_back(Predefined_Characters::eacute());
    x.emplace_back(Predefined_Characters::ecircumflex());
    x.emplace_back(Predefined_Characters::edieresis());
    x.emplace_back(Predefined_Characters::igrave());
    x.emplace_back(Predefined_Characters::iacute());
    x.emplace_back(Predefined_Characters::icircumflex());
    x.emplace_back(Predefined_Characters::idieresis());
    x.emplace_back(Predefined_Characters::eth());
    x.emplace_back(Predefined_Characters::ntilde());
    x.emplace_back(Predefined_Characters::ograve());
    x.emplace_back(Predefined_Characters::oacute());
    x.emplace_back(Predefined_Characters::ocircumflex());
    x.emplace_back(Predefined_Characters::otilde());
    x.emplace_back(Predefined_Characters::odieresis());
    x.emplace_back(Predefined_Characters::divide());
    x.emplace_back(Predefined_Characters::oslash());
    x.emplace_back(Predefined_Characters::ugrave());
    x.emplace_back(Predefined_Characters::uacute());
    x.emplace_back(Predefined_Characters::ucircumflex());
    x.emplace_back(Predefined_Characters::udieresis());
    x.emplace_back(Predefined_Characters::yacute());
    x.emplace_back(Predefined_Characters::thorn());
    x.emplace_back(Predefined_Characters::ydieresis());
    
    
    //turn all of the unilang tokens into character segments
    std::vector<Character_Segment> unilang_segments;
    auto all_tokens = Get_Tokens::Get();
    
    for (auto const& it: all_tokens.tokens){
        
        auto begin_char = it.bdf.begin;
        auto end_char = it.bdf.end;
        begin_char.glyph_index = static_cast<int>(it.start);
        end_char.glyph_index = static_cast<int>(it.end);
        unilang_segments.emplace_back(begin_char);
        unilang_segments.emplace_back(end_char);
    }
    for (auto const& it: all_tokens.body_tokens){
        
        auto begin_char = it.bdf.begin;
        auto end_char = it.bdf.end;
        begin_char.glyph_index = static_cast<int>(it.start);
        end_char.glyph_index = static_cast<int>(it.end);
        unilang_segments.emplace_back(begin_char);
        unilang_segments.emplace_back(end_char);
    }
    
    unilang_segments.emplace_back(Predefined_Characters::lowercase_uni());
    unilang_segments.emplace_back(Predefined_Characters::uppercase_uni());
    unilang_segments.emplace_back(Predefined_Characters::null_symbol());
    unilang_segments.emplace_back(Predefined_Characters::true_symbol());
    unilang_segments.emplace_back(Predefined_Characters::false_symbol());
    
    //sort them by their glyph index
    std::sort(unilang_segments.begin(),unilang_segments.end(),[&](Character_Segment const& a, Character_Segment const& b){
        return a.glyph_index < b.glyph_index;
    });
    
    //add them the main
    for (auto const& it: unilang_segments){
        x.emplace_back(it);
    }
    
    
    return x;
❱