class
❪fstream❫
❪string❫
❪"code/transcompilers/unilang/tokens/generic_token"❫
❪"code/transcompilers/unilang/tokens/get_tokens"❫
❪"code/utilities/bdf/settings/bdf_settings"❫
❪"code/utilities/bdf/glyph/glyphs"❫
⚯
❪"code/transcompilers/unilang/language-and-theme-creator/sublime/global"❫
❪"code/transcompilers/unilang/language-and-theme-creator/sublime/unilang_file_creator"❫
❪"code/transcompilers/unilang/tokens/unique_tokens_checker"❫
❪"code/utilities/filesystem/paths/lib"❫
❪"code/utilities/bdf/exporter/bdf_settings_to_format"❫
❪"code/transcompilers/unilang/tokens/get_tokens"❫
⚞⚟

◀public: static▶ void ☀Create_Fonts()❰

    std::ofstream outfile(Fonts_Path() + "newFont.bdf");
    outfile << Font_As_String();
    outfile.close();
❱

◀private: static▶ std::string ☀Font_As_String()❰
    std::string str;
    
    Bdf_Settings bdf_settings;
    bdf_settings.segments = Get_Unilang_Character_Segments();
    str += Bdf_Settings_To_Format::Convert(bdf_settings);
    
    return str;
❱

◀private: static▶ std::string ☀Fonts_Path()❰
    return Full_Path_To_Home() + "/.fonts/";
❱



◀private: static▶ std::vector<Character_Segment> ☀Get_Unilang_Character_Segments()❰
    std::vector<Character_Segment> x;
    x.emplace_back(Empty_Character_Segment(0));
    x.emplace_back(Empty_Character_Segment(1));
    x.emplace_back(Empty_Character_Segment(2));
    x.emplace_back(Empty_Character_Segment(3));
    x.emplace_back(Empty_Character_Segment(4));
    x.emplace_back(Empty_Character_Segment(5));
    x.emplace_back(Empty_Character_Segment(6));
    x.emplace_back(Empty_Character_Segment(7));
    x.emplace_back(Empty_Character_Segment(8));
    x.emplace_back(Empty_Character_Segment(9));
    x.emplace_back(Empty_Character_Segment(10));
    x.emplace_back(Empty_Character_Segment(11));
    x.emplace_back(Empty_Character_Segment(12));
    x.emplace_back(Empty_Character_Segment(13));
    x.emplace_back(Empty_Character_Segment(14));
    x.emplace_back(Empty_Character_Segment(15));
    x.emplace_back(Empty_Character_Segment(16));
    x.emplace_back(Empty_Character_Segment(17));
    x.emplace_back(Empty_Character_Segment(18));
    x.emplace_back(Empty_Character_Segment(19));
    x.emplace_back(Empty_Character_Segment(20));
    x.emplace_back(Empty_Character_Segment(21));
    x.emplace_back(Empty_Character_Segment(22));
    x.emplace_back(Empty_Character_Segment(23));
    x.emplace_back(Empty_Character_Segment(24));
    x.emplace_back(Empty_Character_Segment(25));
    x.emplace_back(Empty_Character_Segment(26));
    x.emplace_back(Empty_Character_Segment(27));
    x.emplace_back(Empty_Character_Segment(28));
    x.emplace_back(Empty_Character_Segment(29));
    x.emplace_back(Empty_Character_Segment(30));
    x.emplace_back(Empty_Character_Segment(31));
    x.emplace_back(Empty_Character_Segment(32));
    //symbols
    x.emplace_back(Exclam());
    x.emplace_back(Double_Quotation());
    x.emplace_back(Number_Sign());
    x.emplace_back(Dollar_Sign());
    x.emplace_back(Percent_Sign());
    x.emplace_back(Ampersand());
    x.emplace_back(Single_Quotation_Mark());
    x.emplace_back(Paren_Left());
    x.emplace_back(Paren_Right());
    x.emplace_back(Asterisk());
    x.emplace_back(Plus());
    x.emplace_back(Comma());
    x.emplace_back(Hyphen());
    x.emplace_back(Period());
    x.emplace_back(Slash());
    x.emplace_back(Zero());
    x.emplace_back(One());
    x.emplace_back(Two());
    x.emplace_back(Three());
    x.emplace_back(Four());
    x.emplace_back(Five());
    x.emplace_back(Six());
    x.emplace_back(Seven());
    x.emplace_back(Eight());
    x.emplace_back(Nine());
    x.emplace_back(Colon());
    x.emplace_back(Semicolon());
    x.emplace_back(LessThan());
    x.emplace_back(Equal());
    x.emplace_back(Greater());
    x.emplace_back(Question_Mark());
    x.emplace_back(At());
    x.emplace_back(CapitalA());
    x.emplace_back(CapitalB());
    x.emplace_back(CapitalC());
    x.emplace_back(CapitalD());
    x.emplace_back(CapitalE());
    x.emplace_back(CapitalF());
    x.emplace_back(CapitalG());
    x.emplace_back(CapitalH());
    x.emplace_back(CapitalI());
    x.emplace_back(CapitalJ());
    x.emplace_back(CapitalK());
    x.emplace_back(CapitalL());
    x.emplace_back(CapitalM());
    x.emplace_back(CapitalN());
    x.emplace_back(CapitalO());
    x.emplace_back(CapitalP());
    x.emplace_back(CapitalQ());
    x.emplace_back(CapitalR());
    x.emplace_back(CapitalS());
    x.emplace_back(CapitalT());
    x.emplace_back(CapitalU());
    x.emplace_back(CapitalV());
    x.emplace_back(CapitalW());
    x.emplace_back(CapitalX());
    x.emplace_back(CapitalY());
    x.emplace_back(CapitalZ());
    x.emplace_back(LeftBracket());
    x.emplace_back(BackSlash());
    x.emplace_back(RightBracket());
    x.emplace_back(Carrot());
    x.emplace_back(Underscore());
    x.emplace_back(Grave());
    x.emplace_back(Lowercase_A());
    x.emplace_back(Lowercase_B());
    x.emplace_back(Lowercase_C());
    x.emplace_back(Lowercase_D());
    x.emplace_back(Lowercase_E());
    x.emplace_back(Lowercase_F());
    x.emplace_back(Lowercase_G());
    x.emplace_back(Lowercase_H());
    x.emplace_back(Lowercase_I());
    x.emplace_back(Lowercase_J());
    x.emplace_back(Lowercase_K());
    x.emplace_back(Lowercase_L());
    x.emplace_back(Lowercase_M());
    x.emplace_back(Lowercase_N());
    x.emplace_back(Lowercase_O());
    x.emplace_back(Lowercase_P());
    x.emplace_back(Lowercase_Q());
    x.emplace_back(Lowercase_R());
    x.emplace_back(Lowercase_S());
    x.emplace_back(Lowercase_T());
    x.emplace_back(Lowercase_U());
    x.emplace_back(Lowercase_V());
    x.emplace_back(Lowercase_W());
    x.emplace_back(Lowercase_X());
    x.emplace_back(Lowercase_Y());
    x.emplace_back(Lowercase_Z());
    x.emplace_back(Brace_Left());
    x.emplace_back(Bar());
    x.emplace_back(Brace_Right());
    x.emplace_back(Tilde());
    x.emplace_back(Empty_Character_Segment(127));
    x.emplace_back(Empty_Character_Segment(128));
    x.emplace_back(Empty_Character_Segment(129));
    x.emplace_back(Uni0082());
    x.emplace_back(Uni0083());
    x.emplace_back(Uni0084());
    x.emplace_back(Uni0085());
    x.emplace_back(Uni0086());
    x.emplace_back(Uni0087());
    x.emplace_back(Uni0088());
    x.emplace_back(Uni0089());
    x.emplace_back(Uni008A());
    x.emplace_back(Uni008B());
    x.emplace_back(Uni008C());
    x.emplace_back(Empty_Character_Segment(141));
    x.emplace_back(Empty_Character_Segment(142));
    x.emplace_back(Empty_Character_Segment(143));
    x.emplace_back(Empty_Character_Segment(144));
    x.emplace_back(Uni0091());
    x.emplace_back(Uni0092());
    x.emplace_back(Uni0093());
    x.emplace_back(Uni0094());
    x.emplace_back(Uni0095());
    x.emplace_back(Uni0096());
    x.emplace_back(Uni0097());
    x.emplace_back(Uni0098());
    x.emplace_back(Uni0099());
    x.emplace_back(Uni009A());
    x.emplace_back(Uni009B());
    x.emplace_back(Uni009C());
    x.emplace_back(Empty_Character_Segment(157));
    x.emplace_back(Empty_Character_Segment(158));
    x.emplace_back(Uni009F());
    x.emplace_back(Empty_Character_Segment(160));
    x.emplace_back(Exclamation_Point_Down());
    x.emplace_back(Cent());
    x.emplace_back(Sterling());
    x.emplace_back(Currency());
    x.emplace_back(Yen());
    x.emplace_back(BrokenBar());
    x.emplace_back(Section());
    x.emplace_back(Dieresis());
    x.emplace_back(Copyright());
    x.emplace_back(Ordfeminine());
    x.emplace_back(Guillemotleft());
    x.emplace_back(Logical_Not());
    x.emplace_back(uni00AD());
    x.emplace_back(registered());
    x.emplace_back(macron());
    x.emplace_back(degree());
    x.emplace_back(plusminus());
    x.emplace_back(uni00B2());
    x.emplace_back(uni00B3());
    x.emplace_back(ACute());
    x.emplace_back(Mu());
    x.emplace_back(Paragraph());
    x.emplace_back(Period_Centered());
    x.emplace_back(Cedilla());
    x.emplace_back(uni00B9());
    x.emplace_back(Ordmasculine());
    x.emplace_back(Guillemotright());
    x.emplace_back(One_Quarter());
    x.emplace_back(One_Half());
    x.emplace_back(Three_Quarters());
    x.emplace_back(Question_Down());
    x.emplace_back(agrave());
    x.emplace_back(acute());
    x.emplace_back(acircumflex());
    x.emplace_back(atilde());
    x.emplace_back(adieresis());
    x.emplace_back(aring());
    x.emplace_back(ae());
    x.emplace_back(Ccedilla());
    x.emplace_back(Egrave());
    x.emplace_back(Eacute());
    x.emplace_back(Ecirumflex());
    x.emplace_back(Edieresis());
    x.emplace_back(Igrave());
    x.emplace_back(Iacute());
    x.emplace_back(Icircumflex());
    x.emplace_back(Idieresis());
    x.emplace_back(Eth());
    x.emplace_back(Ntilde());
    x.emplace_back(Ograve());
    x.emplace_back(Oacute());
    x.emplace_back(Ocircumflex());
    x.emplace_back(Otilde());
    x.emplace_back(Odieresis());
    x.emplace_back(Multiply());
    x.emplace_back(Oslash());
    x.emplace_back(Ugrave());
    x.emplace_back(Uacute());
    x.emplace_back(Ucircumflex());
    x.emplace_back(Udieresis());
    x.emplace_back(Yacute());
    x.emplace_back(Thorn());
    x.emplace_back(Germandbls());
    x.emplace_back(Agrave());
    x.emplace_back(Aacute());
    x.emplace_back(Acircumflex());
    x.emplace_back(Atilde());
    //x.emplace_back(Empty_Character_Segment(228));
    x.emplace_back(Aring());
    x.emplace_back(ae());
    x.emplace_back(ccedilla());
    x.emplace_back(egrave());
    x.emplace_back(eacute());
    x.emplace_back(ecircumflex());
    x.emplace_back(edieresis());
    x.emplace_back(igrave());
    x.emplace_back(iacute());
    x.emplace_back(icircumflex());
    x.emplace_back(idieresis());
    x.emplace_back(eth());
    x.emplace_back(ntilde());
    x.emplace_back(ograve());
    x.emplace_back(oacute());
    x.emplace_back(ocircumflex());
    x.emplace_back(otilde());
    x.emplace_back(odieresis());
    x.emplace_back(divide());
    x.emplace_back(oslash());
    x.emplace_back(ugrave());
    x.emplace_back(uacute());
    x.emplace_back(ucircumflex());
    x.emplace_back(udieresis());
    x.emplace_back(yacute());
    x.emplace_back(thorn());
    x.emplace_back(ydieresis());
    //unilang tokens
    // auto all_tokens = Get_Tokens::Get();
    // for (auto const& it: all_tokens.tokens){
    //     x.emplace_back(create_unilang_char_start(it));
    //     x.emplace_back(create_unilang_char_end(it));
    // }
    // for (auto const& it: all_tokens.body_tokens){
    // }
    
    
    x.emplace_back(Empty_Character_Segment(1113169));
    x.emplace_back(Empty_Character_Segment(1113170));
    x.emplace_back(Empty_Character_Segment(1113171));
    x.emplace_back(Empty_Character_Segment(1113172));
    x.emplace_back(Empty_Character_Segment(1113173));
    x.emplace_back(Empty_Character_Segment(1113174));
    x.emplace_back(Empty_Character_Segment(1113175));
    x.emplace_back(Empty_Character_Segment(1113176));
    x.emplace_back(Empty_Character_Segment(1113177));
    x.emplace_back(Empty_Character_Segment(1113178));
    x.emplace_back(Empty_Character_Segment(1113179));
    x.emplace_back(Empty_Character_Segment(1113180));
    x.emplace_back(Empty_Character_Segment(1113181));
    x.emplace_back(Empty_Character_Segment(1113182));
    x.emplace_back(Empty_Character_Segment(1113183));
    x.emplace_back(Empty_Character_Segment(1113184));
    x.emplace_back(Empty_Character_Segment(1113185));
    x.emplace_back(Empty_Character_Segment(1113186));
    x.emplace_back(Empty_Character_Segment(1113187));
    x.emplace_back(Empty_Character_Segment(1113188));
    x.emplace_back(Empty_Character_Segment(1113189));
    x.emplace_back(Empty_Character_Segment(1113190));
    x.emplace_back(Empty_Character_Segment(1113191));
    x.emplace_back(Empty_Character_Segment(1113192));
    x.emplace_back(Empty_Character_Segment(1113193));
    x.emplace_back(Empty_Character_Segment(1113194));
    x.emplace_back(Empty_Character_Segment(1113195));
    x.emplace_back(Empty_Character_Segment(1113196));
    x.emplace_back(Empty_Character_Segment(1113197));
    x.emplace_back(Empty_Character_Segment(1113198));
    x.emplace_back(Empty_Character_Segment(1113199));
    x.emplace_back(Empty_Character_Segment(1113200));
    x.emplace_back(Empty_Character_Segment(1113201));
    x.emplace_back(Empty_Character_Segment(1113202));
    x.emplace_back(Empty_Character_Segment(1113203));
    x.emplace_back(Empty_Character_Segment(1113204));
    x.emplace_back(Empty_Character_Segment(1113205));
    x.emplace_back(Empty_Character_Segment(1113206));
    x.emplace_back(Empty_Character_Segment(1113207));
    x.emplace_back(Empty_Character_Segment(1113208));
    x.emplace_back(Empty_Character_Segment(1113209));
    x.emplace_back(Empty_Character_Segment(1113210));
    x.emplace_back(Empty_Character_Segment(1113211));
    x.emplace_back(Empty_Character_Segment(1113212));
    x.emplace_back(Empty_Character_Segment(1113213));
    x.emplace_back(Empty_Character_Segment(1113214));
    x.emplace_back(Empty_Character_Segment(1113215));
    x.emplace_back(Empty_Character_Segment(1113216));
    x.emplace_back(Empty_Character_Segment(1113217));
    x.emplace_back(Empty_Character_Segment(1113218));
    x.emplace_back(Empty_Character_Segment(1113219));
    x.emplace_back(Empty_Character_Segment(1113220));
    x.emplace_back(Empty_Character_Segment(1113221));
    x.emplace_back(Empty_Character_Segment(1113222));
    x.emplace_back(Empty_Character_Segment(1113223));
    x.emplace_back(Empty_Character_Segment(1113224));
    x.emplace_back(Empty_Character_Segment(1113225));
    x.emplace_back(Empty_Character_Segment(1113226));
    x.emplace_back(Empty_Character_Segment(1113227));
    x.emplace_back(Empty_Character_Segment(1113228));
    x.emplace_back(Empty_Character_Segment(1113229));
    x.emplace_back(Empty_Character_Segment(1113230));
    x.emplace_back(Empty_Character_Segment(1113231));
    x.emplace_back(Empty_Character_Segment(1113232));
    x.emplace_back(Empty_Character_Segment(1113233));
    x.emplace_back(Empty_Character_Segment(1113234));
    x.emplace_back(Empty_Character_Segment(1113235));
    x.emplace_back(Empty_Character_Segment(1113236));
    x.emplace_back(Empty_Character_Segment(1113237));
    x.emplace_back(Empty_Character_Segment(1113238));
    x.emplace_back(Empty_Character_Segment(1113239));
    x.emplace_back(Empty_Character_Segment(1113240));
    x.emplace_back(Empty_Character_Segment(1113241));
    x.emplace_back(Empty_Character_Segment(1113242));
    x.emplace_back(Empty_Character_Segment(1113243));
    x.emplace_back(Empty_Character_Segment(1113244));
    x.emplace_back(Empty_Character_Segment(1113245));
    x.emplace_back(Empty_Character_Segment(1113246));
    x.emplace_back(Empty_Character_Segment(1113247));
    x.emplace_back(Empty_Character_Segment(1113248));
    x.emplace_back(Empty_Character_Segment(1113249));
    x.emplace_back(Empty_Character_Segment(1113250));
    x.emplace_back(Empty_Character_Segment(1113251));
    x.emplace_back(Empty_Character_Segment(1113252));
    x.emplace_back(Empty_Character_Segment(1113253));
    x.emplace_back(Empty_Character_Segment(1113254));
    x.emplace_back(Empty_Character_Segment(1113255));
    x.emplace_back(Empty_Character_Segment(1113256));
    x.emplace_back(Empty_Character_Segment(1113257));
    x.emplace_back(Empty_Character_Segment(1113258));
    x.emplace_back(Empty_Character_Segment(1113259));
    x.emplace_back(Empty_Character_Segment(1113260));
    x.emplace_back(Empty_Character_Segment(1113261));
    x.emplace_back(Empty_Character_Segment(1113262));
    x.emplace_back(Empty_Character_Segment(1113263));
    x.emplace_back(Empty_Character_Segment(1113264));
    x.emplace_back(Empty_Character_Segment(1113265));
    x.emplace_back(Empty_Character_Segment(1113266));
    x.emplace_back(Empty_Character_Segment(1113267));
    x.emplace_back(Empty_Character_Segment(1113268));
    x.emplace_back(Empty_Character_Segment(1113269));
    x.emplace_back(Empty_Character_Segment(1113270));
    x.emplace_back(Empty_Character_Segment(1113271));
    x.emplace_back(Empty_Character_Segment(1113272));
    x.emplace_back(Empty_Character_Segment(1113273));
    x.emplace_back(Empty_Character_Segment(1113274));
    x.emplace_back(Empty_Character_Segment(1113275));
    x.emplace_back(Empty_Character_Segment(1113276));
    x.emplace_back(Empty_Character_Segment(1113277));
    x.emplace_back(Empty_Character_Segment(1113278));
    x.emplace_back(Empty_Character_Segment(1113279));
    x.emplace_back(Empty_Character_Segment(1113280));
    x.emplace_back(Empty_Character_Segment(1113281));
    x.emplace_back(Empty_Character_Segment(1113282));
    x.emplace_back(Empty_Character_Segment(1113283));
    x.emplace_back(Empty_Character_Segment(1113284));
    x.emplace_back(Empty_Character_Segment(1113285));
    x.emplace_back(Empty_Character_Segment(1113286));
    x.emplace_back(Empty_Character_Segment(1113287));
    x.emplace_back(Empty_Character_Segment(1113288));
    x.emplace_back(Empty_Character_Segment(1113289));
    x.emplace_back(Empty_Character_Segment(1113290));
    x.emplace_back(Empty_Character_Segment(1113291));
    x.emplace_back(Empty_Character_Segment(1113292));
    x.emplace_back(Empty_Character_Segment(1113293));
    x.emplace_back(Empty_Character_Segment(1113294));
    x.emplace_back(Empty_Character_Segment(1113295));
    x.emplace_back(Empty_Character_Segment(1113296));
    x.emplace_back(Empty_Character_Segment(1113297));
    x.emplace_back(Empty_Character_Segment(1113298));
    x.emplace_back(Empty_Character_Segment(1113299));
    x.emplace_back(Empty_Character_Segment(1113300));
    x.emplace_back(Empty_Character_Segment(1113301));
    x.emplace_back(Empty_Character_Segment(1113302));
    x.emplace_back(Empty_Character_Segment(1113303));
    x.emplace_back(Empty_Character_Segment(1113304));
    x.emplace_back(Empty_Character_Segment(1113305));
    x.emplace_back(Empty_Character_Segment(1113306));
    x.emplace_back(Empty_Character_Segment(1113307));
    x.emplace_back(Empty_Character_Segment(1113308));
    x.emplace_back(Empty_Character_Segment(1113309));
    x.emplace_back(Empty_Character_Segment(1113310));
    x.emplace_back(Empty_Character_Segment(1113311));
    x.emplace_back(Empty_Character_Segment(1113312));
    x.emplace_back(Empty_Character_Segment(1113313));
    x.emplace_back(Empty_Character_Segment(1113314));
    x.emplace_back(Empty_Character_Segment(1113315));
    x.emplace_back(Empty_Character_Segment(1113316));
    x.emplace_back(Empty_Character_Segment(1113317));
    x.emplace_back(Empty_Character_Segment(1113318));
    x.emplace_back(Empty_Character_Segment(1113319));
    x.emplace_back(Empty_Character_Segment(1113320));
    x.emplace_back(Empty_Character_Segment(1113321));
    x.emplace_back(Empty_Character_Segment(1113322));
    x.emplace_back(Empty_Character_Segment(1113323));
    x.emplace_back(Empty_Character_Segment(1113324));
    x.emplace_back(Empty_Character_Segment(1113325));
    x.emplace_back(Empty_Character_Segment(1113326));
    x.emplace_back(Empty_Character_Segment(1113327));
    x.emplace_back(Empty_Character_Segment(1113328));
    x.emplace_back(Empty_Character_Segment(1113329));
    x.emplace_back(Empty_Character_Segment(1113330));
    x.emplace_back(Empty_Character_Segment(1113331));
    x.emplace_back(Empty_Character_Segment(1113332));
    x.emplace_back(Empty_Character_Segment(1113333));
    x.emplace_back(Empty_Character_Segment(1113334));
    x.emplace_back(Empty_Character_Segment(1113335));
    x.emplace_back(Empty_Character_Segment(1113336));
    x.emplace_back(Empty_Character_Segment(1113337));
    x.emplace_back(Empty_Character_Segment(1113338));
    x.emplace_back(Empty_Character_Segment(1113339));
    x.emplace_back(Empty_Character_Segment(1113340));
    x.emplace_back(Empty_Character_Segment(1113341));
    x.emplace_back(Empty_Character_Segment(1113342));
    x.emplace_back(Empty_Character_Segment(1113343));
    x.emplace_back(Empty_Character_Segment(1113344));
    x.emplace_back(Empty_Character_Segment(1113345));
    x.emplace_back(Empty_Character_Segment(1113346));
    x.emplace_back(Empty_Character_Segment(1113347));
    x.emplace_back(Empty_Character_Segment(1113348));
    x.emplace_back(Empty_Character_Segment(1113349));
    x.emplace_back(Empty_Character_Segment(1113350));
    x.emplace_back(Empty_Character_Segment(1113351));
    x.emplace_back(Empty_Character_Segment(1113352));
    x.emplace_back(Empty_Character_Segment(1113353));
    x.emplace_back(Empty_Character_Segment(1113354));
    x.emplace_back(Empty_Character_Segment(1113355));
    x.emplace_back(Empty_Character_Segment(1113356));
    x.emplace_back(Empty_Character_Segment(1113357));
    x.emplace_back(Empty_Character_Segment(1113358));
    x.emplace_back(Empty_Character_Segment(1113359));
    x.emplace_back(Empty_Character_Segment(1113360));
    x.emplace_back(Empty_Character_Segment(1113361));
    x.emplace_back(Empty_Character_Segment(1113362));
    x.emplace_back(Empty_Character_Segment(1113363));
    x.emplace_back(Empty_Character_Segment(1113364));
    x.emplace_back(Empty_Character_Segment(1113365));
    x.emplace_back(Empty_Character_Segment(1113366));
    x.emplace_back(Empty_Character_Segment(1113367));
    x.emplace_back(Empty_Character_Segment(1113368));
    x.emplace_back(Empty_Character_Segment(1113369));
    x.emplace_back(Empty_Character_Segment(1113370));
    x.emplace_back(Empty_Character_Segment(1113371));
    x.emplace_back(Empty_Character_Segment(1113372));
    x.emplace_back(Empty_Character_Segment(1113373));
    x.emplace_back(Empty_Character_Segment(1113374));
    x.emplace_back(Empty_Character_Segment(1113375));
    x.emplace_back(Empty_Character_Segment(1113376));
    x.emplace_back(Empty_Character_Segment(1113377));
    x.emplace_back(Empty_Character_Segment(1113378));
    x.emplace_back(Empty_Character_Segment(1113379));
    x.emplace_back(Empty_Character_Segment(1113380));
    x.emplace_back(Empty_Character_Segment(1113381));
    x.emplace_back(Empty_Character_Segment(1113382));
    x.emplace_back(Empty_Character_Segment(1113383));
    x.emplace_back(Empty_Character_Segment(1113384));
    x.emplace_back(Empty_Character_Segment(1113385));
    x.emplace_back(Empty_Character_Segment(1113386));
    x.emplace_back(Empty_Character_Segment(1113387));
    x.emplace_back(Empty_Character_Segment(1113388));
    x.emplace_back(Empty_Character_Segment(1113389));
    x.emplace_back(Empty_Character_Segment(1113390));
    x.emplace_back(Empty_Character_Segment(1113391));
    x.emplace_back(Empty_Character_Segment(1113392));
    x.emplace_back(Empty_Character_Segment(1113393));
    x.emplace_back(Empty_Character_Segment(1113394));
    x.emplace_back(Empty_Character_Segment(1113395));
    x.emplace_back(Empty_Character_Segment(1113396));
    x.emplace_back(Empty_Character_Segment(1113397));
    x.emplace_back(Empty_Character_Segment(1113398));
    x.emplace_back(Empty_Character_Segment(1113399));
    x.emplace_back(Empty_Character_Segment(1113400));
    x.emplace_back(Empty_Character_Segment(1113401));
    x.emplace_back(Empty_Character_Segment(1113402));
    x.emplace_back(Empty_Character_Segment(1113403));
    x.emplace_back(Empty_Character_Segment(1113404));
    x.emplace_back(Empty_Character_Segment(1113405));
    x.emplace_back(Empty_Character_Segment(1113406));
    x.emplace_back(Empty_Character_Segment(1113407));
    x.emplace_back(Empty_Character_Segment(1113408));
    x.emplace_back(Empty_Character_Segment(1113409));
    x.emplace_back(Empty_Character_Segment(1113410));
    x.emplace_back(Empty_Character_Segment(1113411));
    x.emplace_back(Empty_Character_Segment(1113412));
    x.emplace_back(Empty_Character_Segment(1113413));
    x.emplace_back(Empty_Character_Segment(1113414));
    x.emplace_back(Empty_Character_Segment(1113415));
    x.emplace_back(Empty_Character_Segment(1113416));
    x.emplace_back(Empty_Character_Segment(1113417));
    x.emplace_back(Empty_Character_Segment(1113418));
    x.emplace_back(Empty_Character_Segment(1113419));
    x.emplace_back(Empty_Character_Segment(1113420));
    x.emplace_back(Empty_Character_Segment(1113421));
    x.emplace_back(Empty_Character_Segment(1113422));
    x.emplace_back(Empty_Character_Segment(1113423));
    x.emplace_back(Empty_Character_Segment(1113424));
    x.emplace_back(Empty_Character_Segment(1113425));
    x.emplace_back(Empty_Character_Segment(1113426));
    x.emplace_back(Empty_Character_Segment(1113427));
    x.emplace_back(Empty_Character_Segment(1113428));
    x.emplace_back(Empty_Character_Segment(1113429));
    x.emplace_back(Empty_Character_Segment(1113430));
    x.emplace_back(Empty_Character_Segment(1113431));
    x.emplace_back(Empty_Character_Segment(1113432));
    x.emplace_back(Empty_Character_Segment(1113433));
    x.emplace_back(Empty_Character_Segment(1113434));
    x.emplace_back(Empty_Character_Segment(1113435));
    x.emplace_back(Empty_Character_Segment(1113436));
    x.emplace_back(Empty_Character_Segment(1113437));
    x.emplace_back(Empty_Character_Segment(1113438));
    x.emplace_back(Empty_Character_Segment(1113439));
    x.emplace_back(Empty_Character_Segment(1113440));
    x.emplace_back(Empty_Character_Segment(1113441));
    x.emplace_back(Empty_Character_Segment(1113442));
    x.emplace_back(Empty_Character_Segment(1113443));
    x.emplace_back(Empty_Character_Segment(1113444));
    x.emplace_back(Empty_Character_Segment(1113445));
    x.emplace_back(Empty_Character_Segment(1113446));
    x.emplace_back(Empty_Character_Segment(1113447));
    x.emplace_back(Empty_Character_Segment(1113448));
    x.emplace_back(Empty_Character_Segment(1113449));
    x.emplace_back(Empty_Character_Segment(1113450));
    x.emplace_back(Empty_Character_Segment(1113451));
    x.emplace_back(Empty_Character_Segment(1113452));
    x.emplace_back(Empty_Character_Segment(1113453));
    x.emplace_back(Empty_Character_Segment(1113454));
    x.emplace_back(Empty_Character_Segment(1113455));
    x.emplace_back(Empty_Character_Segment(1113456));
    x.emplace_back(Empty_Character_Segment(1113457));
    x.emplace_back(Empty_Character_Segment(1113458));
    x.emplace_back(Empty_Character_Segment(1113459));
    x.emplace_back(Empty_Character_Segment(1113460));
    x.emplace_back(Empty_Character_Segment(1113461));
    x.emplace_back(Empty_Character_Segment(1113462));
    x.emplace_back(Empty_Character_Segment(1113463));
    x.emplace_back(Empty_Character_Segment(1113464));
    x.emplace_back(Empty_Character_Segment(1113465));
    x.emplace_back(Empty_Character_Segment(1113466));
    x.emplace_back(Empty_Character_Segment(1113467));
    x.emplace_back(Empty_Character_Segment(1113468));
    x.emplace_back(Empty_Character_Segment(1113469));
    x.emplace_back(Empty_Character_Segment(1113470));
    x.emplace_back(Empty_Character_Segment(1113471));
    x.emplace_back(Empty_Character_Segment(1113472));
    x.emplace_back(Empty_Character_Segment(1113473));
    x.emplace_back(Empty_Character_Segment(1113474));
    x.emplace_back(Empty_Character_Segment(1113475));
    x.emplace_back(Empty_Character_Segment(1113476));
    x.emplace_back(Empty_Character_Segment(1113477));
    x.emplace_back(Empty_Character_Segment(1113478));
    x.emplace_back(Empty_Character_Segment(1113479));
    x.emplace_back(Empty_Character_Segment(1113480));
    x.emplace_back(Empty_Character_Segment(1113481));
    x.emplace_back(Empty_Character_Segment(1113482));
    x.emplace_back(Empty_Character_Segment(1113483));
    x.emplace_back(Empty_Character_Segment(1113484));
    x.emplace_back(Empty_Character_Segment(1113485));
    x.emplace_back(Empty_Character_Segment(1113486));
    x.emplace_back(Empty_Character_Segment(1113487));
    x.emplace_back(Empty_Character_Segment(1113488));
    x.emplace_back(Empty_Character_Segment(1113489));
    x.emplace_back(Empty_Character_Segment(1113490));
    x.emplace_back(Empty_Character_Segment(1113491));
    x.emplace_back(Empty_Character_Segment(1113492));
    x.emplace_back(Empty_Character_Segment(1113493));
    x.emplace_back(Empty_Character_Segment(1113494));
    x.emplace_back(Empty_Character_Segment(1113495));
    x.emplace_back(Empty_Character_Segment(1113496));
    x.emplace_back(Empty_Character_Segment(1113497));
    x.emplace_back(Empty_Character_Segment(1113498));
    x.emplace_back(Empty_Character_Segment(1113499));
    x.emplace_back(Empty_Character_Segment(1113500));
    x.emplace_back(Empty_Character_Segment(1113501));
    x.emplace_back(Empty_Character_Segment(1113502));
    x.emplace_back(Empty_Character_Segment(1113503));
    x.emplace_back(Empty_Character_Segment(1113504));
    x.emplace_back(Empty_Character_Segment(1113505));
    x.emplace_back(Empty_Character_Segment(1113506));
    x.emplace_back(Empty_Character_Segment(1113507));
    x.emplace_back(Empty_Character_Segment(1113508));
    x.emplace_back(Empty_Character_Segment(1113509));
    x.emplace_back(Empty_Character_Segment(1113510));
    x.emplace_back(Empty_Character_Segment(1113511));
    x.emplace_back(Empty_Character_Segment(1113512));
    x.emplace_back(Empty_Character_Segment(1113513));
    x.emplace_back(Empty_Character_Segment(1113514));
    x.emplace_back(Empty_Character_Segment(1113515));
    x.emplace_back(Empty_Character_Segment(1113516));
    x.emplace_back(Empty_Character_Segment(1113517));
    x.emplace_back(Empty_Character_Segment(1113518));
    x.emplace_back(Empty_Character_Segment(1113519));
    x.emplace_back(Empty_Character_Segment(1113520));
    x.emplace_back(Empty_Character_Segment(1113521));
    x.emplace_back(Empty_Character_Segment(1113522));
    x.emplace_back(Empty_Character_Segment(1113523));
    x.emplace_back(Empty_Character_Segment(1113524));
    x.emplace_back(Empty_Character_Segment(1113525));
    x.emplace_back(Empty_Character_Segment(1113526));
    x.emplace_back(Empty_Character_Segment(1113527));
    x.emplace_back(Empty_Character_Segment(1113528));
    x.emplace_back(Empty_Character_Segment(1113529));
    x.emplace_back(Empty_Character_Segment(1113530));
    x.emplace_back(Empty_Character_Segment(1113531));
    x.emplace_back(Empty_Character_Segment(1113532));
    x.emplace_back(Empty_Character_Segment(1113533));
    x.emplace_back(Empty_Character_Segment(1113534));
    x.emplace_back(Empty_Character_Segment(1113535));
    x.emplace_back(Empty_Character_Segment(1113536));
    x.emplace_back(Empty_Character_Segment(1113537));
    x.emplace_back(Empty_Character_Segment(1113538));
    x.emplace_back(Empty_Character_Segment(1113539));
    x.emplace_back(Empty_Character_Segment(1113540));
    x.emplace_back(Empty_Character_Segment(1113541));
    x.emplace_back(Empty_Character_Segment(1113542));
    x.emplace_back(Empty_Character_Segment(1113543));
    x.emplace_back(Empty_Character_Segment(1113544));
    x.emplace_back(Empty_Character_Segment(1113545));
    x.emplace_back(Empty_Character_Segment(1113546));
    x.emplace_back(Empty_Character_Segment(1113547));
    x.emplace_back(Empty_Character_Segment(1113548));
    x.emplace_back(Empty_Character_Segment(1113549));
    x.emplace_back(Empty_Character_Segment(1113550));
    x.emplace_back(Empty_Character_Segment(1113551));
    x.emplace_back(Empty_Character_Segment(1113552));
    x.emplace_back(Empty_Character_Segment(1113553));
    x.emplace_back(Empty_Character_Segment(1113554));
    x.emplace_back(Empty_Character_Segment(1113555));
    x.emplace_back(Empty_Character_Segment(1113556));
    x.emplace_back(Empty_Character_Segment(1113557));
    x.emplace_back(Empty_Character_Segment(1113558));
    x.emplace_back(Empty_Character_Segment(1113559));
    x.emplace_back(Empty_Character_Segment(1113560));
    x.emplace_back(Empty_Character_Segment(1113561));
    x.emplace_back(Empty_Character_Segment(1113562));
    x.emplace_back(Empty_Character_Segment(1113563));
    x.emplace_back(Empty_Character_Segment(1113564));
    x.emplace_back(Empty_Character_Segment(1113565));
    x.emplace_back(Empty_Character_Segment(1113566));
    x.emplace_back(Empty_Character_Segment(1113567));
    x.emplace_back(Empty_Character_Segment(1113568));
    x.emplace_back(Empty_Character_Segment(1113569));
    x.emplace_back(Empty_Character_Segment(1113570));
    x.emplace_back(Empty_Character_Segment(1113571));
    x.emplace_back(Empty_Character_Segment(1113572));
    x.emplace_back(Empty_Character_Segment(1113573));
    x.emplace_back(Empty_Character_Segment(1113574));
    x.emplace_back(Empty_Character_Segment(1113575));
    x.emplace_back(Empty_Character_Segment(1113576));
    x.emplace_back(Empty_Character_Segment(1113577));
    x.emplace_back(Empty_Character_Segment(1113578));
    x.emplace_back(Empty_Character_Segment(1113579));
    x.emplace_back(Empty_Character_Segment(1113580));
    x.emplace_back(Empty_Character_Segment(1113581));
    x.emplace_back(Empty_Character_Segment(1113582));
    x.emplace_back(Empty_Character_Segment(1113583));
    x.emplace_back(Empty_Character_Segment(1113584));
    x.emplace_back(Empty_Character_Segment(1113585));
    x.emplace_back(Empty_Character_Segment(1113586));
    x.emplace_back(Empty_Character_Segment(1113587));

    
    
    return x;
❱

◀private: static▶ Character_Segment ☀Empty_Character_Segment(int encoding)❰
    Character_Segment x;
    x.name = "empty";
    x.glyph_index = encoding;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 1;
    x.bb_h = 1;
    x.bbo_x = 5;
    x.bbo_y = -2;
    x.hex_encoded_bitmap.emplace_back("00");
    return x;
❱

◀private: static▶ Character_Segment ☀create_unilang_char_start(Token const& token)❰
    Character_Segment x;
    x.name = "unilang start char";
    x.glyph_index = static_cast<int>(token.start);
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 2;
    x.bb_h = 9;
    x.bbo_x = 2;
    x.bbo_y = -1;
    auto glyph = Glyphs::left_bracket();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀create_unilang_char_end(Token const& token)❰
    Character_Segment x;
    x.name = "unilang end char";
    x.glyph_index = static_cast<int>(token.end);
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 2;
    x.bb_h = 9;
    x.bbo_x = 2;
    x.bbo_y = -1;
    auto glyph = Glyphs::right_bracket();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱




◀private: static▶ Character_Segment ☀Exclam()❰
    Character_Segment x;
    x.name = "exclam";
    x.glyph_index = 33;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 1;
    x.bb_h = 7;
    x.bbo_x = 2;
    x.bbo_y = 0;
    auto glyph = Glyphs::glyph_exclamation_point();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Double_Quotation()❰
    Character_Segment x;
    x.name = "quotedbl";
    x.glyph_index = 34;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 3;
    x.bbo_x = 1;
    x.bbo_y = 5;
    auto glyph = Glyphs::double_quoatation_mark();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Number_Sign()❰
    Character_Segment x;
    x.name = "numbersign";
    x.glyph_index = 35;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 2;
    auto glyph = Glyphs::number_sign();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Dollar_Sign()❰
    Character_Segment x;
    x.name = "dollar";
    x.glyph_index = 36;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = -1;
    auto glyph = Glyphs::dollar_sign();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Percent_Sign()❰
    Character_Segment x;
    x.name = "percent";
    x.glyph_index = 37;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::percent_sign();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Ampersand()❰
    Character_Segment x;
    x.name = "ampersand";
    x.glyph_index = 38;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::ampersand();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Single_Quotation_Mark()❰
    Character_Segment x;
    x.name = "quotesingle";
    x.glyph_index = 39;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 1;
    x.bb_h = 3;
    x.bbo_x = 2;
    x.bbo_y = 5;
    auto glyph = Glyphs::single_quoatation_mark();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Paren_Left()❰
    Character_Segment x;
    x.name = "parenleft";
    x.glyph_index = 40;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 9;
    x.bbo_x = 1;
    x.bbo_y = -1;
    auto glyph = Glyphs::paren_left();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Paren_Right()❰
    Character_Segment x;
    x.name = "parenright";
    x.glyph_index = 41;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 9;
    x.bbo_x = 1;
    x.bbo_y = -1;
    auto glyph = Glyphs::paren_right();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Asterisk()❰
    Character_Segment x;
    x.name = "asterisk";
    x.glyph_index = 42;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 2;
    auto glyph = Glyphs::asterisk();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Plus()❰
    Character_Segment x;
    x.name = "plus";
    x.glyph_index = 43;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 1;
    auto glyph = Glyphs::plus();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Comma()❰
    Character_Segment x;
    x.name = "comma";
    x.glyph_index = 44;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 2;
    x.bb_h = 4;
    x.bbo_x = 1;
    x.bbo_y = -2;
    auto glyph = Glyphs::comma();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Hyphen()❰
    Character_Segment x;
    x.name = "hyphen";
    x.glyph_index = 45;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 1;
    x.bbo_x = 1;
    x.bbo_y = 3;
    auto glyph = Glyphs::hyphen();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Period()❰
    Character_Segment x;
    x.name = "period";
    x.glyph_index = 46;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 2;
    x.bb_h = 2;
    x.bbo_x = 2;
    x.bbo_y = 0;
    auto glyph = Glyphs::period();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Slash()❰
    Character_Segment x;
    x.name = "slash";
    x.glyph_index = 47;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 10;
    x.bbo_x = 0;
    x.bbo_y = -2;
    auto glyph = Glyphs::slash();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Zero()❰
    Character_Segment x;
    x.name = "zero";
    x.glyph_index = 48;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::zero();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀One()❰
    Character_Segment x;
    x.name = "one";
    x.glyph_index = 49;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::one();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Two()❰
    Character_Segment x;
    x.name = "two";
    x.glyph_index = 50;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::two();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Three()❰
    Character_Segment x;
    x.name = "three";
    x.glyph_index = 51;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::three();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Four()❰
    Character_Segment x;
    x.name = "four";
    x.glyph_index = 52;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::four();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Five()❰
    Character_Segment x;
    x.name = "five";
    x.glyph_index = 53;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::five();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Six()❰
    Character_Segment x;
    x.name = "six";
    x.glyph_index = 54;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::six();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Seven()❰
    Character_Segment x;
    x.name = "seven";
    x.glyph_index = 55;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::seven();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Eight()❰
    Character_Segment x;
    x.name = "eight";
    x.glyph_index = 56;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::eight();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Nine()❰
    Character_Segment x;
    x.name = "nine";
    x.glyph_index = 57;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::nine();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Colon()❰
    Character_Segment x;
    x.name = "colon";
    x.glyph_index = 58;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 2;
    x.bb_h = 5;
    x.bbo_x = 2;
    x.bbo_y = 0;
    auto glyph = Glyphs::colon();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Semicolon()❰
    Character_Segment x;
    x.name = "semicolon";
    x.glyph_index = 59;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 2;
    x.bb_h = 7;
    x.bbo_x = 1;
    x.bbo_y = -2;
    auto glyph = Glyphs::semicolon();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀LessThan()❰
    Character_Segment x;
    x.name = "less";
    x.glyph_index = 60;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 4;
    x.bb_h = 7;
    x.bbo_x = 1;
    x.bbo_y = 0;
    auto glyph = Glyphs::less_than();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Equal()❰
    Character_Segment x;
    x.name = "equal";
    x.glyph_index = 61;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 3;
    x.bbo_x = 0;
    x.bbo_y = 2;
    auto glyph = Glyphs::equal();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Greater()❰
    Character_Segment x;
    x.name = "greater";
    x.glyph_index = 62;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 4;
    x.bb_h = 7;
    x.bbo_x = 1;
    x.bbo_y = 0;
    auto glyph = Glyphs::greater_than();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Question_Mark()❰
    Character_Segment x;
    x.name = "question";
    x.glyph_index = 63;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::question_mark();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀At()❰
    Character_Segment x;
    x.name = "at";
    x.glyph_index = 64;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::at();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalA()❰
    Character_Segment x;
    x.name = "A";
    x.glyph_index = 65;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_a();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalB()❰
    Character_Segment x;
    x.name = "B";
    x.glyph_index = 66;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_b();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalC()❰
    Character_Segment x;
    x.name = "C";
    x.glyph_index = 67;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_c();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalD()❰
    Character_Segment x;
    x.name = "D";
    x.glyph_index = 68;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_d();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalE()❰
    Character_Segment x;
    x.name = "E";
    x.glyph_index = 69;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_e();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalF()❰
    Character_Segment x;
    x.name = "F";
    x.glyph_index = 70;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_f();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalG()❰
    Character_Segment x;
    x.name = "G";
    x.glyph_index = 71;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_g();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalH()❰
    Character_Segment x;
    x.name = "H";
    x.glyph_index = 72;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_h();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalI()❰
    Character_Segment x;
    x.name = "I";
    x.glyph_index = 73;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_i();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalJ()❰
    Character_Segment x;
    x.name = "J";
    x.glyph_index = 74;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_j();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalK()❰
    Character_Segment x;
    x.name = "K";
    x.glyph_index = 75;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_k();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalL()❰
    Character_Segment x;
    x.name = "L";
    x.glyph_index = 76;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_l();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalM()❰
    Character_Segment x;
    x.name = "M";
    x.glyph_index = 77;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_m();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalN()❰
    Character_Segment x;
    x.name = "N";
    x.glyph_index = 78;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_n();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalO()❰
    Character_Segment x;
    x.name = "O";
    x.glyph_index = 79;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_o();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalP()❰
    Character_Segment x;
    x.name = "P";
    x.glyph_index = 80;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_p();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalQ()❰
    Character_Segment x;
    x.name = "Q";
    x.glyph_index = 81;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = -1;
    auto glyph = Glyphs::capital_q();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalR()❰
    Character_Segment x;
    x.name = "R";
    x.glyph_index = 82;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_r();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalS()❰
    Character_Segment x;
    x.name = "S";
    x.glyph_index = 83;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_s();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalT()❰
    Character_Segment x;
    x.name = "T";
    x.glyph_index = 84;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_t();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalU()❰
    Character_Segment x;
    x.name = "U";
    x.glyph_index = 85;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_u();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalV()❰
    Character_Segment x;
    x.name = "V";
    x.glyph_index = 86;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_v();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalW()❰
    Character_Segment x;
    x.name = "W";
    x.glyph_index = 87;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_w();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalX()❰
    Character_Segment x;
    x.name = "X";
    x.glyph_index = 88;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_x();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalY()❰
    Character_Segment x;
    x.name = "Y";
    x.glyph_index = 89;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_y();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀CapitalZ()❰
    Character_Segment x;
    x.name = "Z";
    x.glyph_index = 90;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::capital_z();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀LeftBracket()❰
    Character_Segment x;
    x.name = "bracketleft";
    x.glyph_index = 91;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 2;
    x.bb_h = 9;
    x.bbo_x = 2;
    x.bbo_y = -1;
    auto glyph = Glyphs::left_bracket();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀BackSlash()❰
    Character_Segment x;
    x.name = "backslash";
    x.glyph_index = 92;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 10;
    x.bbo_x = 1;
    x.bbo_y = -2;
    auto glyph = Glyphs::backslash();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀RightBracket()❰
    Character_Segment x;
    x.name = "bracketright";
    x.glyph_index = 93;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 2;
    x.bb_h = 9;
    x.bbo_x = 1;
    x.bbo_y = -1;
    auto glyph = Glyphs::right_bracket();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Carrot()❰
    Character_Segment x;
    x.name = "asciicircum";
    x.glyph_index = 94;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 3;
    x.bbo_x = 0;
    x.bbo_y = 4;
    auto glyph = Glyphs::carrot();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Underscore()❰
    Character_Segment x;
    x.name = "underscore";
    x.glyph_index = 95;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 6;
    x.bb_h = 1;
    x.bbo_x = 0;
    x.bbo_y = -2;
    auto glyph = Glyphs::underscore();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Grave()❰
    Character_Segment x;
    x.name = "grave";
    x.glyph_index = 96;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 2;
    x.bb_h = 2;
    x.bbo_x = 1;
    x.bbo_y = 6;
    auto glyph = Glyphs::grave();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_A()❰
    Character_Segment x;
    x.name = "a";
    x.glyph_index = 97;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_a();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_B()❰
    Character_Segment x;
    x.name = "b";
    x.glyph_index = 98;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_b();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_C()❰
    Character_Segment x;
    x.name = "c";
    x.glyph_index = 99;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_c();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_D()❰
    Character_Segment x;
    x.name = "d";
    x.glyph_index = 100;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_d();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_E()❰
    Character_Segment x;
    x.name = "e";
    x.glyph_index = 101;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_e();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_F()❰
    Character_Segment x;
    x.name = "f";
    x.glyph_index = 102;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 4;
    x.bb_h = 7;
    x.bbo_x = 1;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_f();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_G()❰
    Character_Segment x;
    x.name = "g";
    x.glyph_index = 103;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = -2;
    auto glyph = Glyphs::lowercase_g();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_H()❰
    Character_Segment x;
    x.name = "h";
    x.glyph_index = 104;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_h();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_I()❰
    Character_Segment x;
    x.name = "i";
    x.glyph_index = 105;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 7;
    x.bbo_x = 1;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_i();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_J()❰
    Character_Segment x;
    x.name = "j";
    x.glyph_index = 106;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = -2;
    auto glyph = Glyphs::lowercase_j();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_K()❰
    Character_Segment x;
    x.name = "k";
    x.glyph_index = 107;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_k();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_L()❰
    Character_Segment x;
    x.name = "l";
    x.glyph_index = 108;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 7;
    x.bbo_x = 1;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_l();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_M()❰
    Character_Segment x;
    x.name = "m";
    x.glyph_index = 109;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_m();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_N()❰
    Character_Segment x;
    x.name = "n";
    x.glyph_index = 110;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_n();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_O()❰
    Character_Segment x;
    x.name = "o";
    x.glyph_index = 111;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_o();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_P()❰
    Character_Segment x;
    x.name = "p";
    x.glyph_index = 112;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = -2;
    auto glyph = Glyphs::lowercase_p();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_Q()❰
    Character_Segment x;
    x.name = "q";
    x.glyph_index = 113;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = -2;
    auto glyph = Glyphs::lowercase_q();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_R()❰
    Character_Segment x;
    x.name = "r";
    x.glyph_index = 114;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_r();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_S()❰
    Character_Segment x;
    x.name = "s";
    x.glyph_index = 115;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_s();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_T()❰
    Character_Segment x;
    x.name = "t";
    x.glyph_index = 116;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 4;
    x.bb_h = 7;
    x.bbo_x = 1;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_t();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_U()❰
    Character_Segment x;
    x.name = "u";
    x.glyph_index = 117;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_u();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_V()❰
    Character_Segment x;
    x.name = "v";
    x.glyph_index = 118;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_v();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_W()❰
    Character_Segment x;
    x.name = "w";
    x.glyph_index = 119;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_w();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_X()❰
    Character_Segment x;
    x.name = "x";
    x.glyph_index = 120;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_x();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_Y()❰
    Character_Segment x;
    x.name = "y";
    x.glyph_index = 121;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = -2;
    auto glyph = Glyphs::lowercase_y();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Lowercase_Z()❰
    Character_Segment x;
    x.name = "z";
    x.glyph_index = 122;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::lowercase_z();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Brace_Left()❰
    Character_Segment x;
    x.name = "braceleft";
    x.glyph_index = 123;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 11;
    x.bbo_x = 1;
    x.bbo_y = -2;
    auto glyph = Glyphs::left_brace();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Bar()❰
    Character_Segment x;
    x.name = "bar";
    x.glyph_index = 124;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 1;
    x.bb_h = 9;
    x.bbo_x = 2;
    x.bbo_y = -1;
    auto glyph = Glyphs::bar();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Brace_Right()❰
    Character_Segment x;
    x.name = "braceright";
    x.glyph_index = 125;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 11;
    x.bbo_x = 1;
    x.bbo_y = -2;
    auto glyph = Glyphs::right_brace();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Tilde()❰
    Character_Segment x;
    x.name = "asciitilde";
    x.glyph_index = 126;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 2;
    x.bbo_x = 0;
    x.bbo_y = 3;
    auto glyph = Glyphs::tilde();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0082()❰
    Character_Segment x;
    x.name = "uni0082";
    x.glyph_index = 130;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 2;
    x.bb_h = 3;
    x.bbo_x = 0;
    x.bbo_y = -1;
    auto glyph = Glyphs::unizz82();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0083()❰
    Character_Segment x;
    x.name = "uni0083";
    x.glyph_index = 131;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 11;
    x.bbo_x = 0;
    x.bbo_y = -2;
    auto glyph = Glyphs::unizz83();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0084()❰
    Character_Segment x;
    x.name = "uni0084";
    x.glyph_index = 132;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 4;
    x.bb_h = 3;
    x.bbo_x = 0;
    x.bbo_y = -1;
    auto glyph = Glyphs::unizz84();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0085()❰
    Character_Segment x;
    x.name = "uni0085";
    x.glyph_index = 133;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 1;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::unizz85();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0086()❰
    Character_Segment x;
    x.name = "uni0086";
    x.glyph_index = 134;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 5;
    x.bbo_x = 1;
    x.bbo_y = 2;
    auto glyph = Glyphs::unizz86();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0087()❰
    Character_Segment x;
    x.name = "uni0087";
    x.glyph_index = 135;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 5;
    x.bbo_x = 1;
    x.bbo_y = 2;
    auto glyph = Glyphs::unizz87();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0088()❰
    Character_Segment x;
    x.name = "uni0088";
    x.glyph_index = 136;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 2;
    x.bbo_x = 1;
    x.bbo_y = 6;
    auto glyph = Glyphs::unizz88();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0089()❰
    Character_Segment x;
    x.name = "uni0089";
    x.glyph_index = 137;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 6;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::unizz89();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni008A()❰
    Character_Segment x;
    x.name = "uni008A";
    x.glyph_index = 138;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::unizz8A();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni008B()❰
    Character_Segment x;
    x.name = "uni008B";
    x.glyph_index = 139;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 2;
    x.bb_h = 4;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::unizz8B();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni008C()❰
    Character_Segment x;
    x.name = "uni008C";
    x.glyph_index = 140;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::unizz8C();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0091()❰
    Character_Segment x;
    x.name = "uni0091";
    x.glyph_index = 145;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 2;
    x.bb_h = 3;
    x.bbo_x = 2;
    x.bbo_y = 4;
    auto glyph = Glyphs::unizz91();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0092()❰
    Character_Segment x;
    x.name = "uni0092";
    x.glyph_index = 146;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 2;
    x.bb_h = 3;
    x.bbo_x = 2;
    x.bbo_y = 4;
    auto glyph = Glyphs::unizz92();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0093()❰
    Character_Segment x;
    x.name = "uni0093";
    x.glyph_index = 147;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 4;
    x.bb_h = 3;
    x.bbo_x = 1;
    x.bbo_y = 4;
    auto glyph = Glyphs::unizz93();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0094()❰
    Character_Segment x;
    x.name = "uni0094";
    x.glyph_index = 148;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 4;
    x.bb_h = 3;
    x.bbo_x = 1;
    x.bbo_y = 4;
    auto glyph = Glyphs::unizz94();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0095()❰
    Character_Segment x;
    x.name = "uni0095";
    x.glyph_index = 149;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 1;
    auto glyph = Glyphs::unizz95();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0096()❰
    Character_Segment x;
    x.name = "uni0096";
    x.glyph_index = 150;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 1;
    x.bbo_x = 1;
    x.bbo_y = 3;
    auto glyph = Glyphs::unizz96();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0097()❰
    Character_Segment x;
    x.name = "uni0097";
    x.glyph_index = 151;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 6;
    x.bb_h = 1;
    x.bbo_x = 0;
    x.bbo_y = 3;
    auto glyph = Glyphs::unizz97();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0098()❰
    Character_Segment x;
    x.name = "uni0098";
    x.glyph_index = 152;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 2;
    x.bbo_x = 0;
    x.bbo_y = 6;
    auto glyph = Glyphs::unizz98();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni0099()❰
    Character_Segment x;
    x.name = "uni0099";
    x.glyph_index = 153;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 6;
    x.bb_h = 3;
    x.bbo_x = 0;
    x.bbo_y = 4;
    auto glyph = Glyphs::unizz99();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni009A()❰
    Character_Segment x;
    x.name = "uni009A";
    x.glyph_index = 154;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::unizz9A();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni009B()❰
    Character_Segment x;
    x.name = "uni009B";
    x.glyph_index = 155;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 2;
    x.bb_h = 4;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::unizz9B();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni009C()❰
    Character_Segment x;
    x.name = "uni009C";
    x.glyph_index = 156;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::unizz9C();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uni009F()❰
    Character_Segment x;
    x.name = "uni009F";
    x.glyph_index = 159;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::unizz9F();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Exclamation_Point_Down()❰
    Character_Segment x;
    x.name = "exclamdown";
    x.glyph_index = 161;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 1;
    x.bb_h = 7;
    x.bbo_x = 3;
    x.bbo_y = 0;
    auto glyph = Glyphs::exclamation_point_down();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Cent()❰
    Character_Segment x;
    x.name = "cent";
    x.glyph_index = 162;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = -1;
    auto glyph = Glyphs::cent();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Sterling()❰
    Character_Segment x;
    x.name = "sterling";
    x.glyph_index = 163;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::sterling();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Currency()❰
    Character_Segment x;
    x.name = "currency";
    x.glyph_index = 164;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::currency();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Yen()❰
    Character_Segment x;
    x.name = "yen";
    x.glyph_index = 165;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::yen();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀BrokenBar()❰
    Character_Segment x;
    x.name = "brokenbar";
    x.glyph_index = 166;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 1;
    x.bb_h = 9;
    x.bbo_x = 2;
    x.bbo_y = -1;
    auto glyph = Glyphs::broken_bar();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Section()❰
    Character_Segment x;
    x.name = "section";
    x.glyph_index = 167;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 10;
    x.bbo_x = 0;
    x.bbo_y = -1;
    auto glyph = Glyphs::section();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Dieresis()❰
    Character_Segment x;
    x.name = "dieresis";
    x.glyph_index = 168;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 1;
    x.bbo_x = 1;
    x.bbo_y = 6;
    auto glyph = Glyphs::dieresis();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Copyright()❰
    Character_Segment x;
    x.name = "copyright";
    x.glyph_index = 169;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::copyright();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Ordfeminine()❰
    Character_Segment x;
    x.name = "ordfeminine";
    x.glyph_index = 170;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 4;
    x.bb_h = 6;
    x.bbo_x = 1;
    x.bbo_y = 3;
    auto glyph = Glyphs::ordfeminine();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Guillemotleft()❰
    Character_Segment x;
    x.name = "guillemotleft";
    x.glyph_index = 171;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 4;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::guillemotleft();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Logical_Not()❰
    Character_Segment x;
    x.name = "logicalnot";
    x.glyph_index = 172;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 3;
    x.bbo_x = 0;
    x.bbo_y = 1;
    auto glyph = Glyphs::logicalnot();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀uni00AD()❰
    Character_Segment x;
    x.name = "uni00AD";
    x.glyph_index = 173;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 1;
    x.bbo_x = 0;
    x.bbo_y = 3;
    auto glyph = Glyphs::unizzAD();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀registered()❰
    Character_Segment x;
    x.name = "registered";
    x.glyph_index = 174;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 6;
    x.bbo_x = 0;
    x.bbo_y = 1;
    auto glyph = Glyphs::registered();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀macron()❰
    Character_Segment x;
    x.name = "macron";
    x.glyph_index = 175;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 1;
    x.bbo_x = 1;
    x.bbo_y = 6;
    auto glyph = Glyphs::macron();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀degree()❰
    Character_Segment x;
    x.name = "degree";
    x.glyph_index = 176;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 4;
    x.bb_h = 4;
    x.bbo_x = 1;
    x.bbo_y = 4;
    auto glyph = Glyphs::degree();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀plusminus()❰
    Character_Segment x;
    x.name = "plusminus";
    x.glyph_index = 177;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 6;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::plusminus();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀uni00B2()❰
    Character_Segment x;
    x.name = "uni00B2";
    x.glyph_index = 178;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 4;
    x.bbo_x = 1;
    x.bbo_y = 5;
    auto glyph = Glyphs::unizzB2();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀uni00B3()❰
    Character_Segment x;
    x.name = "uni00B3";
    x.glyph_index = 179;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 5;
    x.bbo_x = 1;
    x.bbo_y = 4;
    auto glyph = Glyphs::unizzB3();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀ACute()❰
    Character_Segment x;
    x.name = "acute";
    x.glyph_index = 180;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 2;
    x.bbo_x = 2;
    x.bbo_y = 6;
    auto glyph = Glyphs::acute();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Mu()❰
    Character_Segment x;
    x.name = "mu";
    x.glyph_index = 181;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = -2;
    auto glyph = Glyphs::mu();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Paragraph()❰
    Character_Segment x;
    x.name = "paragraph";
    x.glyph_index = 182;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::paragraph();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Period_Centered()❰
    Character_Segment x;
    x.name = "periodcentered";
    x.glyph_index = 183;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 2;
    x.bb_h = 2;
    x.bbo_x = 2;
    x.bbo_y = 2;
    auto glyph = Glyphs::period_centered();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Cedilla()❰
    Character_Segment x;
    x.name = "cedilla";
    x.glyph_index = 184;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 3;
    x.bbo_x = 1;
    x.bbo_y = -2;
    auto glyph = Glyphs::cedilla();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀uni00B9()❰
    Character_Segment x;
    x.name = "uni00B9";
    x.glyph_index = 185;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 4;
    x.bbo_x = 1;
    x.bbo_y = 5;
    auto glyph = Glyphs::unizzB9();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Ordmasculine()❰
    Character_Segment x;
    x.name = "ordmasculine";
    x.glyph_index = 186;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 4;
    x.bb_h = 6;
    x.bbo_x = 1;
    x.bbo_y = 3;
    auto glyph = Glyphs::ordmasculine();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Guillemotright()❰
    Character_Segment x;
    x.name = "guillemotright";
    x.glyph_index = 187;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 4;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::guillemotright();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀One_Quarter()❰
    Character_Segment x;
    x.name = "onequarter";
    x.glyph_index = 188;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 6;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::onequarter();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀One_Half()❰
    Character_Segment x;
    x.name = "onehalf";
    x.glyph_index = 189;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 6;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::onehalf();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Three_Quarters()❰
    Character_Segment x;
    x.name = "threequarters";
    x.glyph_index = 190;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 6;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::threequarters();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Question_Down()❰
    Character_Segment x;
    x.name = "questiondown";
    x.glyph_index = 191;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::questiondown();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Agrave()❰
    Character_Segment x;
    x.name = "Agrave";
    x.glyph_index = 192;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Agrave();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀acute()❰
    Character_Segment x;
    x.name = "Aacute";
    x.glyph_index = 193;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Acute();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Acircumflex()❰
    Character_Segment x;
    x.name = "Acircumflex";
    x.glyph_index = 194;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Acircumflex();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Atilde()❰
    Character_Segment x;
    x.name = "Atilde";
    x.glyph_index = 195;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Atilde();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀adieresis()❰
    Character_Segment x;
    x.name = "Adieresis";
    x.glyph_index = 196;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Adieresis();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Aring()❰
    Character_Segment x;
    x.name = "Aring";
    x.glyph_index = 197;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Aring();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀AE()❰
    Character_Segment x;
    x.name = "AE";
    x.glyph_index = 198;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::AE();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Ccedilla()❰
    Character_Segment x;
    x.name = "Ccedilla";
    x.glyph_index = 199;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = -2;
    auto glyph = Glyphs::Ccedilla();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Egrave()❰
    Character_Segment x;
    x.name = "Egrave";
    x.glyph_index = 200;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Egrave();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Eacute()❰
    Character_Segment x;
    x.name = "Eacute";
    x.glyph_index = 201;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Eacute();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Ecirumflex()❰
    Character_Segment x;
    x.name = "Ecircumflex";
    x.glyph_index = 202;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Ecircumflex();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Edieresis()❰
    Character_Segment x;
    x.name = "Edieresis";
    x.glyph_index = 203;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Edieresis();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Igrave()❰
    Character_Segment x;
    x.name = "Igrave";
    x.glyph_index = 204;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Igrave();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Iacute()❰
    Character_Segment x;
    x.name = "Iacute";
    x.glyph_index = 205;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Iacute();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Icircumflex()❰
    Character_Segment x;
    x.name = "Icircumflex";
    x.glyph_index = 206;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Icircumflex();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Idieresis()❰
    Character_Segment x;
    x.name = "Idieresis";
    x.glyph_index = 207;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Idieresis();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Eth()❰
    Character_Segment x;
    x.name = "Eth";
    x.glyph_index = 208;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Eth();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Ntilde()❰
    Character_Segment x;
    x.name = "Ntilde";
    x.glyph_index = 209;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Ntilde();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Ograve()❰
    Character_Segment x;
    x.name = "Ograve";
    x.glyph_index = 210;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Ograve();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Oacute()❰
    Character_Segment x;
    x.name = "Oacute";
    x.glyph_index = 211;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::oacute();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Ocircumflex()❰
    Character_Segment x;
    x.name = "Ocircumflex";
    x.glyph_index = 212;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Ocircumflex();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Otilde()❰
    Character_Segment x;
    x.name = "Otilde";
    x.glyph_index = 213;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Otilde();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Odieresis()❰
    Character_Segment x;
    x.name = "Odieresis";
    x.glyph_index = 214;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Odieresis();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Multiply()❰
    Character_Segment x;
    x.name = "multiply";
    x.glyph_index = 215;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 1;
    auto glyph = Glyphs::multiply();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Oslash()❰
    Character_Segment x;
    x.name = "Oslash";
    x.glyph_index = 216;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Oslash();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Ugrave()❰
    Character_Segment x;
    x.name = "Ugrave";
    x.glyph_index = 217;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Ugrave();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Uacute()❰
    Character_Segment x;
    x.name = "Uacute";
    x.glyph_index = 218;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Uacute();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Ucircumflex()❰
    Character_Segment x;
    x.name = "Ucircumflex";
    x.glyph_index = 219;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Ucircumflex();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Udieresis()❰
    Character_Segment x;
    x.name = "Udieresis";
    x.glyph_index = 220;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Udieresis();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Yacute()❰
    Character_Segment x;
    x.name = "Yacute";
    x.glyph_index = 221;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Yacute();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Thorn()❰
    Character_Segment x;
    x.name = "Thron";
    x.glyph_index = 222;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::Thorn();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Germandbls()❰
    Character_Segment x;
    x.name = "germandbls";
    x.glyph_index = 223;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = -1;
    auto glyph = Glyphs::germandbls();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀agrave()❰
    Character_Segment x;
    x.name = "agrave";
    x.glyph_index = 224;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::agrave();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀Aacute()❰
    Character_Segment x;
    x.name = "aacute";
    x.glyph_index = 225;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::aacute();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀acircumflex()❰
    Character_Segment x;
    x.name = "acircumflex";
    x.glyph_index = 226;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::acircumflex();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀atilde()❰
    Character_Segment x;
    x.name = "atilde";
    x.glyph_index = 227;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::atilde();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀aring()❰
    Character_Segment x;
    x.name = "aring";
    x.glyph_index = 229;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::aring();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀ae()❰
    Character_Segment x;
    x.name = "ae";
    x.glyph_index = 230;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::ae();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀ccedilla()❰
    Character_Segment x;
    x.name = "ccedilla";
    x.glyph_index = 231;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = -2;
    auto glyph = Glyphs::ccedilla();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀egrave()❰
    Character_Segment x;
    x.name = "egrave";
    x.glyph_index = 232;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::egrave();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀eacute()❰
    Character_Segment x;
    x.name = "eacute";
    x.glyph_index = 233;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::eacute();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀ecircumflex()❰
    Character_Segment x;
    x.name = "ecircumflex";
    x.glyph_index = 234;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::ecircumflex();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀edieresis()❰
    Character_Segment x;
    x.name = "edieresis";
    x.glyph_index = 235;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::edieresis();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀igrave()❰
    Character_Segment x;
    x.name = "igrave";
    x.glyph_index = 236;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 8;
    x.bbo_x = 1;
    x.bbo_y = 0;
    auto glyph = Glyphs::igrave();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀iacute()❰
    Character_Segment x;
    x.name = "iacute";
    x.glyph_index = 237;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 8;
    x.bbo_x = 1;
    x.bbo_y = 0;
    auto glyph = Glyphs::iacute();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀icircumflex()❰
    Character_Segment x;
    x.name = "icircumflex";
    x.glyph_index = 238;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 8;
    x.bbo_x = 1;
    x.bbo_y = 0;
    auto glyph = Glyphs::icircumflex();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀idieresis()❰
    Character_Segment x;
    x.name = "idieresis";
    x.glyph_index = 239;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 3;
    x.bb_h = 7;
    x.bbo_x = 1;
    x.bbo_y = 0;
    auto glyph = Glyphs::idieresis();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀eth()❰
    Character_Segment x;
    x.name = "eth";
    x.glyph_index = 240;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::eth();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀ntilde()❰
    Character_Segment x;
    x.name = "ntilde";
    x.glyph_index = 241;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::ntilde();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀ograve()❰
    Character_Segment x;
    x.name = "ograve";
    x.glyph_index = 242;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::ograve();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀oacute()❰
    Character_Segment x;
    x.name = "oacute";
    x.glyph_index = 243;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::oacute();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀ocircumflex()❰
    Character_Segment x;
    x.name = "ocircumflex";
    x.glyph_index = 244;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::ocircumflex();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀otilde()❰
    Character_Segment x;
    x.name = "otilde";
    x.glyph_index = 245;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::otilde();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀odieresis()❰
    Character_Segment x;
    x.name = "odieresis";
    x.glyph_index = 246;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::odieresis();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀divide()❰
    Character_Segment x;
    x.name = "divide";
    x.glyph_index = 247;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 1;
    auto glyph = Glyphs::divide();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀oslash()❰
    Character_Segment x;
    x.name = "oslash";
    x.glyph_index = 248;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 5;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::oslash();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀ugrave()❰
    Character_Segment x;
    x.name = "ugrave";
    x.glyph_index = 249;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::ugrave();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀uacute()❰
    Character_Segment x;
    x.name = "uacute";
    x.glyph_index = 250;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::uacute();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀ucircumflex()❰
    Character_Segment x;
    x.name = "ucircumflex";
    x.glyph_index = 251;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 8;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::ucircumflex();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀udieresis()❰
    Character_Segment x;
    x.name = "udieresis";
    x.glyph_index = 252;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 7;
    x.bbo_x = 0;
    x.bbo_y = 0;
    auto glyph = Glyphs::udieresis();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀yacute()❰
    Character_Segment x;
    x.name = "yacute";
    x.glyph_index = 253;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 10;
    x.bbo_x = 0;
    x.bbo_y = -2;
    auto glyph = Glyphs::yacute();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀thorn()❰
    Character_Segment x;
    x.name = "thorn";
    x.glyph_index = 254;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = -2;
    auto glyph = Glyphs::thorn();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱
◀private: static▶ Character_Segment ☀ydieresis()❰
    Character_Segment x;
    x.name = "ydieresis";
    x.glyph_index = 255;
    x.s_width_x = 6000;
    x.s_width_y = 0;
    x.d_width_x = 6;
    x.d_width_y = 0;
    x.bbx_w = 5;
    x.bb_h = 9;
    x.bbo_x = 0;
    x.bbo_y = -2;
    auto glyph = Glyphs::ydieresis();
    x.hex_encoded_bitmap = Glyphs::glyph_to_hex_strings(glyph);
    return x;
❱