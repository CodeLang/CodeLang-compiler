class
❪vector❫
❪string❫
❪unordered_map❫
❪"code/transcompilers/unilang/options/comment/doxygen/doxygen_block_options"❫
⚯

⚞⚟

◀
public:
     
   //grammar settings on exported comment
   
   //whether or not to take certain actions
   bool auto_capitalize_comments = true;
   bool auto_puncuate_comments = true;
   
   //the default puncution we will apply when the comment is missing puncuation
   std::string default_puncuation = ".";
   
   //a list of puncuations that we will look at to decide if the comment is missing puncuation
   //TODO: change to "terminal puncuation"
   std::vector<std::string> puncuations{
   ".",
   "!",
   "?",
   ":"
   };

   std::vector<std::string> non_word_puncuations{
   ".",
   "!",
   "?",
   ":",
   ",",
   "-",
   "*",
   "'",
   "\""
   };
   
   //options for sensoring bad words
   bool auto_sensor_bad_words = true;
   std::vector<std::string> bad_words{
   "aeolus",
   "ahole",
   "anal",
   "apeshit",
   "areola",
   "areole",
   "arrse",
   "arse",
   "arsehole",
   "ass",
   "asshole",
   "boobs",
   "boob",
   "bootie",
   "booty",
   "ballsack",
   "bullshit",
   "barf",
   "bastard",
   "bdsm",
   "beaner",
   "beotch",
   "bimbo",
   "bitchy",
   "bloody",
   "blowjob",
   "boner",
   "bitch",
   "crap",
   "cunt",
   "damn",
   "dyke",
   "dick",
   "dumb",
   "fuck",
   "gay",
   "nig",
   "nigger",
   "shit",
   "slut",
   "stupid",
   "whore",
   }; //etc
   
   //use sensor alternative
   //instead of just sensoring the bad words with stars,
   //we may have alternative words/phrases to replace them with.
   //if a bad word exists but there is no given alternative, we will
   //choose to sensor it with the given character
   bool use_sensor_alternative=true;
   std::string sensor_pattern = "*";
   std::unordered_map<std::string, std::string> bad_word_alternatives{
	{"damn","darn"},
	{"crap","bad"}
   };
	
   bool use_auto_corrects=true;
   std::unordered_map<std::string, std::string> auto_corrects{
	{"teh","the"},
	{"wensday","wednesday"}
   };
   
   //these are words that are correct but people prefer that they are
   //written differently
   bool auto_retaste_words=true;
   std::unordered_map<std::string, std::string> taste_corrections{
   {"vertexes","verticies"},
   {"indexes","indicies"},
   };
   
   //"that's a valid word, but did you actually mean to write..."
   bool fix_correctly_spelled_typo=true;
   std::unordered_map<std::string, std::string> correctly_spelled_mistypes{
   {"manly","mainly"},
   };

   bool auto_capitalize_certain_words = true;
   std::vector<std::string> capitalize_words{
   "pennsylvania",
   "monday",
   "tuesday",
   "wednesday",
   "thursday",
   "friday",
   //months...
   };

   bool auto_full_caps_certain_words = true;
   std::vector<std::string> full_caps_words{
   "hidl"
   };
   
    
▶
