class
❪"code/transcompilers/unilang/options/language-specific/c_export_settings"❫
❪"code/transcompilers/unilang/options/language-specific/cpp_export_settings"❫
❪"code/transcompilers/unilang/options/language-specific/cpp_test_export_settings"❫
❪"code/transcompilers/unilang/options/language-specific/cpp_benchmark_export_settings"❫
❪"code/transcompilers/unilang/options/language-specific/cpp_fuzz_export_settings"❫
❪"code/transcompilers/unilang/options/language-specific/d_export_settings"❫
❪"code/transcompilers/unilang/options/language-specific/rust_export_settings"❫
❪"code/transcompilers/unilang/options/language-specific/csharp_export_settings"❫
❪"code/transcompilers/unilang/options/language-agnostic/language_agnostic_export_settings"❫
❪"code/transcompilers/unilang/options/language-specific/hidl_export_settings"❫
❪"code/transcompilers/unilang/options/language-specific/call_graph_options"❫
❪"code/transcompilers/unilang/options/language-specific/html_table_options"❫
❪"code/transcompilers/unilang/options/language-specific/processing_options"❫
❪"code/transcompilers/unilang/options/language-specific/treesheets_options"❫
❪"code/transcompilers/unilang/options/language-specific/mermaid_settings"❫
❪"code/transcompilers/unilang/options/language-specific/plant_uml_settings/plant_uml_settings"❫
❪"code/transcompilers/unilang/options/language-specific/protocol_buffer_settings/protocol_buffer_settings"❫
❪"code/transcompilers/unilang/options/bazel/build_rule_settings"❫
⚯

⚞⚟


◀
public:

  //normal programming languages
  C_Export_Settings c;
  Cpp_Export_Settings cpp;
  Cpp_Test_Export_Settings cpp_test;
  Cpp_Benchmark_Export_Settings cpp_benchmark;
  Cpp_Fuzz_Export_Settings cpp_fuzz;
  Csharp_Export_Settings csharp;
  D_Export_Settings d;
  Rust_Export_Settings rust;
  Processing_Options processing;

  //IDLs
  Hidl_Export_Settings hidl;
  Protocol_Buffer_Settings proto_buff;

  //Documentation
  Plant_Uml_Settings plant_uml;
  Call_Graph_Options call_graph;
  Html_Table_Options html_table;
  Treesheets_Options treesheets;
  Mermaid_Settings mermaid;
  
  //Build Config
  Build_Rule_Settings bazel_build;
  
  //terminology and such usually based on the foundations of math, language theory, type theory, etc.
  Language_Agnostic_Export_Settings agnostic;
▶
