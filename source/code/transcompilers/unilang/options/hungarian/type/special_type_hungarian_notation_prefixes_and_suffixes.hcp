class
❪string❫
❪"special_type_notations"❫
⚯

⚞⚟


◀
public:  
    Special_Type_Notations enumerated = Special_Type_Notations{"","E","e",""};
    Special_Type_Notations unions = Special_Type_Notations{"","U","u",""};
    Special_Type_Notations structs = Special_Type_Notations{"","T","t",""};
    
    std::string null_terminated_c_string_prefix = "sz";
    
    //pretty much the same
    std::string unspecial_pointer_prefix = "p";
    std::string unspecial_array_prefix = "p";
    
    std::string function_ptr = "fn";

	//what about templated types?
	//what about a container type?  
	//its a type that contains type Ts.  
    //do we nest hungarian
	std::string template_type_prefix = "t"; //maybe we do something like "tn" for templated vector of ints
    
▶