class
❪"code/utilities/types/strings/transformers/casing/case_format_style"❫
❪"code/transcompilers/unilang/options/comment/doxygen/doxygen_block_options"❫
❪"code/transcompilers/unilang/options/sections/method/parameters/method_parameter_settings"❫
❪"code/transcompilers/unilang/options/comment/comment_settings"❫
❪"code/transcompilers/unilang/options/sections/method/attributes/all_method_attribute_settings"❫
❪"code/transcompilers/unilang/options/sections/method/sorting/method_sorting_settings"❫
❪"method_contract_settings"❫
❪"method_subgroup_settings"❫
❪"outside_body_comment_settings"❫
⚯

⚞⚟

◀
public:
    
    //casing
    Case_Format_Style function_casing = Case_Format_Style::CAMEL_CASE;
    Case_Format_Style argument_casing = Case_Format_Style::CAMEL_CASE_PRESERVE_SUFFIX_UNITS;

    bool prefix_object_api_methods_with_object_name = true;

    Method_Contract_Settings contracts;
    Method_Parameter_Settings parameters;
    
    //attributes about parts of a function
    //this includes parameters / return values as well
    All_Method_Attribute_Settings attributes;

    //how doxygen comments will look
    bool derive_brief_comment = true;
    bool derive_details_comment = true;
    Comment_Settings comment;

    //outside body comment
    Outside_Body_Comment_Settings outside_body_comment;
    
    //subgrouping options
    Method_Subgroup_Settings subgroup;
    
    //settings related to how we are going to sort the methods in the transcompiled output
    Method_Sorting_Settings sorting;
    
    //grammar settings on exported comment
    Comment_Grammar_Settings brief_grammar;
    Comment_Grammar_Settings details_grammar;
    
▶
