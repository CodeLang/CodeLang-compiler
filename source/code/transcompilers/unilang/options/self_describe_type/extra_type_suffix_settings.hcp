class
❪"type_properties_to_identifier_words"❫
❪set❫
⚯

⚞⚟

◀
public:
	
	//removing a plurality indicator that might already exist as part of the indentifier
	bool remove_existing_plurality_indicator = true;
    std::set<std::string> plurality_indicators;

	//words related to type properties that should be append onto an identifier
    //type property = word,ordering weight
    Type_Properties_To_Identifier_Words words;
    
	//for example:  A user in UniLang may write:
    //vector<Item> items;
    //we will convert it to:  
    //vector<Item> item_collection
    //Understanding that the type(vector) assumes plurality we can apply the "plural word to the end"  
    //Given that the word itself may be inflected plurality we need to convert it to singular.  
    //Which is what this flag does.  This will avoid getting a results like:  
    //vector<Item> items_collection
    //notice the double plural inflections in the identifier.  The double plural inflection often sounds
    //awkward, but I'm no english expert.  A small note about English Vs Linguistics.  A linguist doesn't
    //care about grammatical rules.  They simply observe that they happen. 
	bool enforce_singularity_on_plural_appended_words = true;

▶