class
❪"code/transcompilers/unilang/parser/structure_creator"❫
❪"code/transcompilers/unilang/user-frontend/command_line_arguments/dependency_paths"❫
❪"code/transcompilers/unilang/structure/structure"❫
❪"code/transcompilers/unilang/options/parser/parser_settings"❫
❪"code/transcompilers/unilang/parser/parser_shared"❫
❪"code/transcompilers/unilang/user-frontend/fully_read_file"❫
❪"code/transcompilers/unilang/dependency_graph_creator/code_graph"❫
❪"code/transcompilers/unilang/dependency_graph_creator/dependency_graph_creator"❫
⚯
⚞⚟
◀public: static▶ Code_Graph ☀Parse(Fully_Read_File const& file, Dependency_Paths const& dependency_paths, Parser_Settings const& settings)❰
    
    //convert the collection of recursive and non-recursive search paths into a set of all paths
    auto search_paths = Parser_Shared::Turn_Dependency_Paths_Into_Set_Of_Paths(dependency_paths);
    
    //convert the unilang file into a structure object
    auto structure = Structure_Creator::Create_Structure_From_Path(file,settings);
    
    //use the code object to identify all the headers, parse them, and create a graph of code objects
    auto graph = Dependency_Graph_Creator::Create_Graph_From_Structure(structure,search_paths,settings);
    
    return graph;
❱
