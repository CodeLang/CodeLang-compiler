class

❪string❫
❪vector❫
⚯
❪"code/utilities/types/strings/transformers/trimming/lib"❫
❪"code/utilities/types/strings/observers/splitting/lib"❫
❪"code/utilities/types/strings/observers/char/lib"❫
⚞⚟


◀public: static▶ std::vector<std::string> ☀Derive(std::string const& sentence)❰
	
    //tokenize
    auto words = Split_Into_Parts_From_Delimiter(sentence,' ');

	//clense (might not be needed)
	std::vector<std::string> cleaned_words;
	for (auto word: words){
		if (!Contains_Only_Whitespace_Characters(word)){
            trim(word);
			cleaned_words.emplace_back(word);
		}
	}
	return cleaned_words;
❱