class
❪"code/transcompilers/unilang/structure/model/structure"❫
❪"code/transcompilers/unilang/options/static_analysis/static_analysis_settings"❫
❪"code/transcompilers/unilang/structure/analyze/error_message"❫
⚯
❪"code/transcompilers/unilang/structure/analyze/error_message_getter"❫
❪"code/transcompilers/unilang/structure/analyze/error_message_printer"❫
❪"code/utilities/types/strings/observers/splitting/lib"❫
❪"code/utilities/types/strings/transformers/trimming/lib"❫
❪"code/utilities/converters/lib"❫
❪iostream❫
❪"code/utilities/types/sets/lib"❫
❪"code/transcompilers/unilang/structure/query/closed_box_function_checker"❫
⚞⚟


    //we could add nesting counts of various concepts:
    //Annex B (informative) Implementation quantities

    //2.1
    //nesting_level_of_compound_statements
    //nesting_level_of_control_structures
    //nesting_level_of_selection_control_structures
    
    //2.2
    //nesting_levels_of_conditional_inclusion


//need the file markers stored inside the structure
◀public: static▶ void ☀Print_Warnings(Structure const& structure, Static_Analysis_Settings const& settings)❰

    auto error_messages = Error_Message_Getter::Get(structure,settings);
    Error_Message_Printer::Print(error_messages,settings);
❱ 