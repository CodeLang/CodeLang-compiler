class
❪"code/transcompilers/unilang/parser/token_value"❫
❪"code/transcompilers/unilang/structure/sections/method/arguments/usage_requirement"❫
❪"code/transcompilers/unilang/structure/sections/type_specialization"❫

❪"code/transcompilers/unilang/structure/sections/data_member/scope_specifier"❫
❪"code/transcompilers/unilang/structure/sections/module_dependency"❫
❪"code/transcompilers/unilang/structure/sections/library_dependency"❫
⚯

⚞⚟

◀public:

//main properties
Token_Value type;
std::vector<Type_Specialization> type_specializations;
Token_Value identifier;

//property/specifier related
bool is_mutable = false;    //c/c++: whether to use const or not
bool is_reference = false;  //c: whether to use *const  | c++: whether to use &
bool infinitely_more = false; //we probably turn it into some kind of container

//documentation
Token_Value units;
Token_Value comment;

//attribute related
Usage_Requirement usage_requirement = Usage_Requirement::NOT_IGNORED;

std::vector<Scope_Specifier> scope_specifiers;
std::vector<Module_Dependency> import_dependencies;
std::vector<Library_Dependency> library_dependencies;
▶
