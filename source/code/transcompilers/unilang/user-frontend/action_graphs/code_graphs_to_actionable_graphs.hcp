class
❪vector❫
❪string❫
❪"code/transcompilers/unilang/structure/model/inlined_structures"❫
❪"code/transcompilers/unilang/dependency_graph_creator/code_graph"❫
❪"code/transcompilers/unilang/main/program_input"❫
❪"code/transcompilers/unilang/user-frontend/action_graphs/actionable_code_graphs"❫
⚯
⚞⚟

◀public: static▶ Actionable_Code_Graphs ☀Convert(std::vector<Code_Graph> const& code_graphs, Program_Input const& input)❰
    Actionable_Code_Graphs all;
    for (auto const& it: code_graphs){
        all.graphs.emplace_back(To_Actionable_Graph(it,input));
    }
    //all.actions = 
    return all;
❱

◀private: static▶ Actionable_Code_Graph ☀To_Actionable_Graph(Code_Graph const& graph, Program_Input const& input)❰
    
    Actionable_Structure s;
    s.structure = graph.structure;
    //s.actions = 
    
    Actionable_Code_Graph x;
    x.structure = s;
    x.interface_deps = graph.interface_deps;
    x.source_deps = graph.source_deps;
    return x;
❱