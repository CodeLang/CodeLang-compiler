class
❪string❫
❪vector❫
❪"code/transcompilers/unilang/structure/model/structure"❫
⚯

⚞⚟

◀public: static▶ std::vector<std::string> ☀Guess(Structure const& structure)❰

    std::vector<std::string> langs;
    
    //eh, its just data.
    //do you want to do something a bit more language agnostic?
    //some kind of IDL?
    if (structure.methods.methods.empty()){
        
        langs.emplace_back("hidl");
    }
    
    //its got methods?  ok, its probably like actual code then.
    //what language do I use these days?  let's transcompile to that.
    else {
        langs.emplace_back("cpp");
        langs.emplace_back("cpp_test");
        langs.emplace_back("cpp_benchmark");
        
        //we may want to export temporal data so the generation remains deterministic
        langs.emplace_back("date");
    }
    
    return langs;
❱