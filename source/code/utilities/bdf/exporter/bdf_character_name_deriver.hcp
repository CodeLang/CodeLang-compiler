class


❪vector❫
❪string❫
❪iostream❫
❪sstream❫
❪iomanip❫
❪"code/utilities/bdf/settings/bdf_settings"❫
⚯
❪"code/utilities/types/strings/transformers/casing/lib"❫
❪"code/utilities/types/strings/transformers/removing/lib"❫
⚞⚟



◀public: static▶ std::string ☀Character_Name(Bdf_Settings const& settings, Character_Segment const& segment)❰
    std::string str;
    if (settings.derive_name_automatically){
        str += Derived_Name(settings,segment.glyph_index);
    }
    else{
        if (settings.derive_name_if_blank && segment.name.empty()){
            str += Derived_Name(settings,segment.glyph_index);
        }
        else{
            str += segment.name;
        }
    }
    return str;
❱


◀private: static▶ std::string ☀Derived_Name(Bdf_Settings const& settings, int graph_index)❰
    std::string str;
    
    if (graph_index < 1000){
        str += settings.derived_name_base;
        str += As_Uppercase(int_to_hex(graph_index));
    }
    else{
        str += "u";
        auto str2 = As_Uppercase(int_to_hex(graph_index));
        Remove_Commas(str2);
        str += str2;
    }
    return str;
❱

◀private: static▶ std::string ☀int_to_hex(int i)❰
  std::stringstream stream;
  stream  << std::setfill ('0') << std::setw(4)
         << std::hex << i;
  return stream.str();
❱