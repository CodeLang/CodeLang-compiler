class
❪iostream❫
❪vector❫
❪string❫
❪cmath❫
❪utility❫
❪"code/utilities/types/vectors/observers/lib"❫
❪"code/utilities/types/strings/observers/padding/lib"❫
❪"code/utilities/types/strings/creators/lib"❫
❪"code/utilities/math/math"❫
⚯
⚞⚟

◀public: static▶ std::string ☀Get(std::vector<std::pair<int,std::string>> const & stats)❰
    
    int bar_width = 20;
    char pad_car = ' ';
    std::string seperator = " | ";


    std::string drawn;
    auto longest_word = Longest_Element_Size_Of_Pair_Second(stats);
    auto biggest_stat = Largest_Element_Size_Of_Pair_First(stats);
    for (auto const& it: stats){
        drawn += pad_str_to_length(it.second,longest_word,pad_car);
        drawn += seperator;
        drawn += Get_Bar(it.first,biggest_stat,bar_width);
        drawn += "\n";
    }
    return drawn;
❱

◀private: static▶ std::string ☀Get_Bar(int val, int max, int bar_width)❰
    float percentage = static_cast<float>(val) / static_cast<float>(max);
    auto number_of_bars = Math::map_value_across_range(percentage,0,1,0,bar_width);
    auto bar = Create_String_Of_N_Strs(number_of_bars,"█");
    return bar;
    //colorize_forground(bar,
❱