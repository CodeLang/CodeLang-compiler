class
❪string❫
❪iostream❫
❪vector❫
❪"code/utilities/chinese/translation_entry"❫
⚯
⚞⚟

◀public: static▶ std::vector<Translation_Entry> ☀Get()❰

    std::vector<Translation_Entry> entries;

// pinyin characters
// ā ē ī ō ū ǖ Ā Ē Ī Ō Ū Ǖ
// á é í ó ú ǘ Á É Í Ó Ú Ǘ
// ǎ ě ǐ ǒ ǔ ǚ Ǎ Ě Ǐ Ǒ Ǔ Ǚ
// à è ì ò ù ǜ À È Ì Ò Ù Ǜ
// a e i o u ü A E I O U Ü
// 11 new consonant sounds
// 7 new vowel sounds

    {
        Translation_Entry x;
        x.english = L"out";
        x.pinyin = L"chū";
        x.chinese = L"出";
        x.tags.emplace_back("word");
        entries.emplace_back(x);
    }

    {
        Translation_Entry x;
        x.english = L"mouth";
        x.pinyin = L"kǒu";
        x.chinese = L"口";
        x.tags.emplace_back("word");
        entries.emplace_back(x);
    }

    {
        Translation_Entry x;
        x.english = L"exit";
        x.pinyin = L"chūkǒu";
        x.chinese = L"出口";
        x.tags.emplace_back("word");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"entrance";
        x.pinyin = L"rùkǒu";
        x.chinese = L"入口";
        x.tags.emplace_back("word");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"thank you";
        x.pinyin = L"xièxiè";
        x.chinese = L"谢谢";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("compliment");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"you're welcome";
        x.pinyin = L"bù kèqì / bié kèqì / bú yòng xiè";
        x.chinese = L"不客气 / 别客气 / 不用谢";
        x.tags.emplace_back("word");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"hello";
        x.pinyin = L"nǐ hǎo";
        x.chinese = L"你好";
        x.tags.emplace_back("word");
        x.tags.emplace_back("greeting");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"hello (on the phone)";
        x.pinyin = L"wéi";
        x.chinese = L"喂";
        x.tags.emplace_back("word");
        x.tags.emplace_back("greeting");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"good morning";
        x.pinyin = L"zǎo";
        x.chinese = L"早";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("greeting");
        x.tags.emplace_back("temporal");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"good afternoon";
        x.pinyin = L"wǔ ān";
        x.chinese = L"午安";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("greeting");
        x.tags.emplace_back("temporal");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"goodnight";
        x.pinyin = L"wǎn'ān";
        x.chinese = L"晚安";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("greeting");
        x.tags.emplace_back("temporal");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"tomorrow";
        x.pinyin = L"míngtiān";
        x.chinese = L"明天";
        x.tags.emplace_back("word");
        x.tags.emplace_back("temporal");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"delicious";
        x.pinyin = L"hào chī";
        x.chinese = L"好吃";
        x.tags.emplace_back("word");
        x.tags.emplace_back("food");
        x.tags.emplace_back("compliment");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"very delicious";
        x.pinyin = L"hěn hào chī";
        x.chinese = L"很好吃";
        x.tags.emplace_back("phrase");
        x.tags.emplace_back("food");
        x.tags.emplace_back("compliment");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"beer";
        x.pinyin = L"píjiǔ";
        x.chinese = L"啤酒";
        x.tags.emplace_back("word");
        x.tags.emplace_back("food");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"I / me / my";
        x.pinyin = L"wǒ";
        x.chinese = L"我";
        x.tags.emplace_back("word");
        x.tags.emplace_back("person");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"you";
        x.pinyin = L"Nǐ";
        x.chinese = L"你";
        x.tags.emplace_back("word");
        x.tags.emplace_back("person");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"we / us / ourselves";
        x.pinyin = L"wǒmen";
        x.chinese = L"我们";
        x.tags.emplace_back("word");
        x.tags.emplace_back("person");
        entries.emplace_back(x);
    }
    
    {
        Translation_Entry x;
        x.english = L"United States / USA / US";
        x.pinyin = L"měiguó";
        x.chinese = L"美国";
        x.tags.emplace_back("word");
        x.tags.emplace_back("place");
        entries.emplace_back(x);
    }
    
    return entries;
❱