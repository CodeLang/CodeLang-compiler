class
❪string❫
❪iostream❫
❪vector❫
❪cmath❫
❪"code/utilities/data_structures/color/rgb_color"❫
❪"code/utilities/types/vectors/transformers/lib"❫
⚯
⚞⚟


//known colors with shades
◀public: static▶ std::vector<Rgb_Color> ☀HTML_Color_Code_10_Shades_Red()❰
    return Create_10_Shades(Make_Color(255, 0, 0));
❱




//custom selections
◀public: static▶ std::vector<Rgb_Color> ☀Dark_Palette_1()❰

    std::vector<Rgb_Color> colors;
    Add(colors,Make_Color(3,94,123));
    Add(colors,Make_Color(49,57,60));
    Add(colors,Make_Color(68,69,69));
    Add(colors,Make_Color(18,69,89));
    Add(colors,Make_Color(89,62,34));
    return colors;
❱
◀public: static▶ std::vector<Rgb_Color> ☀All_Same_Dark_Blue()❰

    std::vector<Rgb_Color> colors;
    Add(colors,Make_Color(67, 120, 204));
    return colors;
❱

◀public: static▶ std::vector<Rgb_Color> ☀All_Same_Black()❰

    std::vector<Rgb_Color> colors;
    Add(colors,Make_Color(0, 0, 0));
    return colors;
❱
◀public: static▶ std::vector<Rgb_Color> ☀Dark_Blue_And_Purple()❰

    std::vector<Rgb_Color> colors;
    Add(colors,Make_Color(0, 66, 133));
    Add(colors,Make_Color(68, 0, 128));
    return colors;
❱



//utility
◀public: static▶ std::vector<Rgb_Color> ☀Create_10_Shades(Rgb_Color c)❰
    std::vector<Rgb_Color> colors;
    for (size_t i = 0; i < 10; ++i){
        float shade_amount = static_cast<float>(i+1) / static_cast<float>(10);
        shade_amount = 1.0 - shade_amount;
        Add(colors,c);
    }
    return colors;
❱

◀private: static▶ Rgb_Color ☀Make_Color(int r, int g, int b)❰
    Rgb_Color x;
    x.r = r;
    x.g = g;
    x.b = b;
    return x;
❱