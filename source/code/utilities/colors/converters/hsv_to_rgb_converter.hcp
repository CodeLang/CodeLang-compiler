class
❪string❫
❪iostream❫
❪cmath❫
❪"code/utilities/data_structures/color/hsv_color"❫
❪"code/utilities/data_structures/color/rgb_color"❫
⚯
⚞⚟

// r,g,b values are from 0 to 1
// h = [0,360], s = [0,1], v = [0,1]
//      if s == 0, then h = -1 (undefined)
◀public: static▶ Rgb_Color ☀Convert(Hsv_Color hsv)❰

    Rgb_Color rgb;
    int i;
    float f, p, q, t;
    if( hsv.s == 0 ) {
        // achromatic (grey)
        rgb.r = rgb.g = rgb.b = hsv.v;
        return rgb;
    }
    hsv.h /= 60;            // sector 0 to 5
    i = floor( hsv.h );
    f = hsv.h - i;          // factorial part of h
    p = hsv.v * ( 1 - hsv.s );
    q = hsv.v * ( 1 - hsv.s * f );
    t = hsv.v * ( 1 - hsv.s * ( 1 - f ) );
    switch( i ) {
        case 0:
            rgb.r = hsv.v;
            rgb.g = t;
            rgb.b = p;
            break;
        case 1:
            rgb.r = q;
            rgb.g = hsv.v;
            rgb.b = p;
            break;
        case 2:
            rgb.r = p;
            rgb.g = hsv.v;
            rgb.b = t;
            break;
        case 3:
            rgb.r = p;
            rgb.g = q;
            rgb.b = hsv.v;
            break;
        case 4:
            rgb.r = t;
            rgb.g = p;
            rgb.b = hsv.v;
            break;
        default:        // case 5:
            rgb.r = hsv.v;
            rgb.g = p;
            rgb.b = q;
            break;
    }
    return rgb;
❱
