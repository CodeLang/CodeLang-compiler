class
❪string❫
❪iostream❫
❪cmath❫
❪algorithm❫
❪"code/utilities/data_structures/color/hsv_color"❫
❪"code/utilities/data_structures/color/rgb_color"❫
⚯
⚞⚟

◀public: static▶ Hsv_Color ☀Convert(Rgb_Color rgb)❰

    Hsv_Color result;

    float min, max, delta;
    min = std::min({rgb.r, rgb.g, rgb.b});
    max = std::max({rgb.r, rgb.g, rgb.b});
    result.v = max;               // v
    delta = max - min;
    if( max != 0 )
        result.s = delta / max;       // s
    else {
        // r = g = b = 0        // s = 0, v is undefined
        result.s = 0;
        result.h = -1;
        return;
    }
    if( rgb.r == max )
        result.h = ( rgb.g - rgb.b ) / delta;     // between yellow & magenta
    else if( rgb.g == max )
        result.h = 2 + ( b - rgb.r ) / delta; // between cyan & yellow
    else
        result.h = 4 + ( rgb.r - rgb.g ) / delta; // between magenta & cyan
    result.h *= 60;               // degrees
    if( result.h < 0 )
        result.h += 360;
        
    
    return result;
❱