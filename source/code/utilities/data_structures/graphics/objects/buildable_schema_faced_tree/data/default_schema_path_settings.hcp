class
⚯
⚞⚟

◀public: static▶ Schema_Path_Settings ☀Get()❰
    
    Schema_Path_Settings x;
    
    //which labels can add which children
    x.schema = Buildable_Schema_Faced_Tree_Default_Schema::Get();
    x.schema_version = static_cast<int>(Schema_Patch_Settings_Getter::Get().size());
    
    //how labels should look
    x.styles = Style_Lookup_Map_Getter::Get_Default_Theme();
    
    //primary / foreign key relationships
    x.references = Reference_Lookup_Map_Getter::Get_Default_References();
    
    //pre-configured select-able values for the label
    x.choices = Choices_Map_Getter::Get();
    
    //peek at collapsed subtree values (makes it easier to know what subtrees are)
    x.peeks = Peek_Map_Getter::Get();
    
    //sometimes we want to render something special next to the subtree
    //(usually an alternative rendering of the subtree data)
    x.special_draws = Special_Draw_Map_Getter::Get();
    
    //pre-computed label depths used for particular renderings
    // auto depth_map = Default_Reference_Depth_Map_Getter::Get();
    // for (auto const& it: depth_map.map){
    //     if (it.second == 0){
    //     std::cout << it.first << " " << it.second << std::endl;
    //     }
    // }
    // exit(0);
    
    return x;
❱