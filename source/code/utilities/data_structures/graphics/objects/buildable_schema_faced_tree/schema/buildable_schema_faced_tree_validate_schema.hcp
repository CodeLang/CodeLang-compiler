class
⚯
⚞⚟


◀public: static▶ std::vector<::tree<Buttoned_Faced_Label>::pre_order_iterator> ☀Find_Schema_Violations(Positioned_Buildable_Schema_Faced_Tree const& tree)❰



    std::vector<::tree<Buttoned_Faced_Label>::pre_order_iterator> schema_violations;

    for (auto it = tree.state.tree.state.structure.nodes.begin(); it != tree.state.tree.state.structure.nodes.end(); ++it){
        auto full_name = Button_Face_Tree_Full_Path_Name::Get(tree.state.tree.state.structure,it);
        if (!Exists_In_Unordered_Map(tree.state.settings.schema.map,full_name)){
            schema_violations.emplace_back(it);
        }
    }


    
    return schema_violations;
❱

◀public: static▶ std::vector<std::string> ☀Find_Schema_Violations_By_Name(Positioned_Buildable_Schema_Faced_Tree const& tree)❰



    std::vector<std::string> schema_violations;

    for (auto it = tree.state.tree.state.structure.nodes.begin(); it != tree.state.tree.state.structure.nodes.end(); ++it){
        auto full_name = Button_Face_Tree_Full_Path_Name::Get(tree.state.tree.state.structure,it);
        if (!Exists_In_Unordered_Map(tree.state.settings.schema.map,full_name)){
            schema_violations.emplace_back(full_name);
        }
    }


    
    return schema_violations;
❱