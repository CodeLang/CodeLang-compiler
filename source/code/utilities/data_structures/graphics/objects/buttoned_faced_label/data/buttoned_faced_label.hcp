class
⚯

⚞⚟

◀public:

    // a unique identifier for the label
    // we can't rely on a pointer because that will not serialize
    // we can't rely on the label's unique position in the tree because that will change.
    // It's not worth the time to search the tree based on a context-derived uuid.
    // It's not worth the time to update lookup-tables when labels change in the tree.
    // the best solution is to carry the extra data of a unique id, and get O(n) lookups.  
    //Additional effort is still needed to ensure this stays unique.  
    //For example, if you copy a subtree, that subtree will need iterated to update new UUIDs.
    std::string ፠uid፠;

    //button + label
    //position is relative to position of the entire label
    Positioned_Multi_Color_Bitmap_Button ፠button፠;
    Faced_Label ፠label፠;
    
    //style options specific to button + label
    Buttoned_Faced_Label_Style ፠style፠;
▶

