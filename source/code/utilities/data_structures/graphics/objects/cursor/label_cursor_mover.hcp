class
❪string❫
❪unordered_map❫
❪utility❫
❪cstdlib❫
❪"code/utilities/fonts/bdf/settings/character_segment"❫
❪"code/utilities/data_structures/graphics/objects/label/data/label_settings"❫
❪"code/utilities/data_structures/graphics/objects/cursor/data/label_cursor_selection"❫
❪"code/utilities/fonts/bdf/character_maps/character_maps"❫
⚯
❪"code/utilities/data_structures/graphics/text/str_to_bdf_segments"❫
⚞⚟

◀public: static▶ void ☀Move_Cursor_Forward(Character_Maps const& font_chars, Position pos, Label_Settings const& label, Label_Cursor_Selection & s)❰

    if (label.message.empty()){
        Move_Cursor_To_The_Beginning(font_chars,pos,label,s);
        return;
    }
    
    s.label_index += 1;
❱
◀public: static▶ void ☀Move_Cursor_Forward_N_Spaces(Character_Maps const& font_chars, Position pos, Label_Settings const& label, Label_Cursor_Selection & s, int spaces)❰

    if (label.message.empty()){
        Move_Cursor_To_The_Beginning(font_chars,pos,label,s);
        return;
    }
    
    s.label_index += spaces;
❱
◀public: static▶ void ☀Move_Cursor_Backward(Character_Maps const& font_chars, Position pos, Label_Settings const& label, Label_Cursor_Selection & s)❰
    
    if (label.message.empty()){
        Move_Cursor_To_The_Beginning(font_chars,pos,label,s);
        return;
    }
    
    s.label_index -= 1;
❱
◀public: static▶ void ☀Move_Cursor_To_Start_Of_Selection(Character_Maps const& font_chars, Position pos, Label_Settings const& label, Label_Cursor_Selection & s)❰
    
    //already at the beginning
    if (s.additional_chars_selected >= 0){
        return;
    }
    
    for (size_t i = 0; i < std::abs(s.additional_chars_selected); ++i){
        s.label_index -= 1;
    }
❱
◀public: static▶ void ☀Move_Cursor_To_End_Of_Selection(Character_Maps const& font_chars, Position pos, Label_Settings const& label, Label_Cursor_Selection & s)❰
    
    //already at the end
    if (s.additional_chars_selected <= 0){
        return;
    }
    
    for (size_t i = 0; i < s.additional_chars_selected; ++i){
        s.label_index += 1;
    }
❱
◀public: static▶ void ☀Move_Cursor_To_The_End(Character_Maps const& font_chars, Position pos, Label_Settings const& label, Label_Cursor_Selection & s)❰
    
    
    
    if (label.message.empty()){
        Move_Cursor_To_The_Beginning(font_chars,pos,label,s);
        return;
    }
    
    s.label_index = static_cast<int>(label.message.size())-1;
❱

◀public: static▶ void ☀Move_Cursor_To_The_Beginning(Character_Maps const& font_chars, Position pos, Label_Settings const& label, Label_Cursor_Selection & s)❰
        s.label_index = -1;
❱