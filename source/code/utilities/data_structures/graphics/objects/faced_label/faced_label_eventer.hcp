class
⚯
⚞⚟

//EVENT IT
◀public: static▶ void ☀Event_It(Character_Maps const& font_chars, Faced_Label & label, Position const& pos, Pc_Input_State const& pc_input)❰
    Do_Events(font_chars,label.state,pos,pc_input);
❱

◀private: static▶ void ☀Do_Events(Character_Maps const& font_chars, Faced_Label_State & label, Position const& pos, Pc_Input_State const& pc_input)❰

    if (!label.style.print_all){
      return Regular_Events(font_chars,label,pos,pc_input);
    }
    return All_Face_Events(font_chars,label,pos,pc_input);
❱


◀private: static▶ void ☀Regular_Events(Character_Maps const& font_chars, Faced_Label_State & label, Position const& pos, Pc_Input_State const& pc_input)❰

    Label_Apply_Events::Event_It(font_chars,pos,label.faces[label.index].label,pc_input);
❱

◀private: static▶ void ☀All_Face_Events(Character_Maps const& font_chars, Faced_Label_State & label, Position const& pos, Pc_Input_State const& pc_input)❰
  
  auto current_pos = pos;
  for (size_t i = 0; i < label.faces.size(); ++i){
     Label_Apply_Events::Event_It(font_chars,current_pos,label.faces[i].label,pc_input);
    current_pos.x += Label_Dimension_Getter::Get(label.faces[i].label).x -1;
  }
❱