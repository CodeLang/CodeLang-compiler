class
❪string❫
❪unordered_map❫
❪utility❫
❪cstdlib❫
❪"code/utilities/data_structures/graphics/objects/label/data/label_settings"❫
❪"code/utilities/data_structures/graphics/objects/faced_label/data/positioned_faced_label"❫
❪"code/utilities/data_structures/graphics/objects/faced_label/data/faced_label"❫
❪"code/utilities/data_structures/graphics/objects/label/label_drawer"❫
❪"code/utilities/data_structures/graphics/objects/frame_elements"❫
❪"code/utilities/peripheral/mouse/state/mouse_state"❫
❪"code/utilities/fonts/bdf/character_maps/character_maps"❫
⚯
❪"code/utilities/data_structures/graphics/objects/label/label_is_mouse_over"❫
❪"code/utilities/data_structures/graphics/objects/label/label_dimension_getter"❫
⚞⚟


◀public: static▶ bool ☀Check(Character_Maps const& font_chars, Faced_Label & label, Position const& pos, Mouse_State const& mouse_state)❰
    return Do_Check(font_chars,label.state,pos,mouse_state);
❱

◀private: static▶ bool ☀Do_Check(Character_Maps const& font_chars, Faced_Label_State & label, Position const& pos, Mouse_State const& mouse_state)❰

    if (!label.style.print_all){
      return Regular_Check(font_chars,label,pos,mouse_state);
    }
    return All_Face_Check(font_chars,label,pos,mouse_state);
❱


◀private: static▶ bool ☀Regular_Check(Character_Maps const& font_chars, Faced_Label_State & label, Position const& pos, Mouse_State const& mouse_state)❰

    return Label_Is_Mouse_Over::Check(font_chars,
                              pos,
                              label.faces[label.index].label,
                              mouse_state);
❱

◀private: static▶ bool ☀All_Face_Check(Character_Maps const& font_chars, Faced_Label_State & label, Position const& pos, Mouse_State const& mouse_state)❰
  
  Frame_Elements elements;
  auto current_pos = pos;
  for (size_t i = 0; i < label.faces.size(); ++i){
    auto check = Label_Is_Mouse_Over::Check(font_chars,
                              pos,
                              label.faces[i].label,
                              mouse_state);
     if (check){ return true;}
     current_pos.x += Label_Dimension_Getter::Get(label.faces[i].label).x -1;
  }
  return false;
❱