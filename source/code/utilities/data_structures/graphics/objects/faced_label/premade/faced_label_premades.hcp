class
❪string❫
❪unordered_map❫
❪"code/utilities/data_structures/graphics/bitmap/full_color_bitmap/full_color_bitmap"❫
❪"code/utilities/fonts/bdf/settings/character_segment"❫
❪"code/tools/ide/settings/ide_settings"❫
❪"code/utilities/data_structures/graphics/objects/label/label_settings"❫
❪"code/utilities/data_structures/graphics/objects/mouse/events/mouse_events_checker"❫
❪"code/utilities/graphics/imgui/render/elements/rectangle_drawer"❫
❪"code/utilities/graphics/imgui/render/elements/full_color_bitmap_drawer"❫
❪"code/utilities/data_structures/graphics/text/text_to_bitmap"❫
❪"code/utilities/graphics/imgui/ui_renders"❫
❪"code/tools/transcompilers/unilang/tokens/get_tokens"❫
❪"code/utilities/data_structures/graphics/bitmap/pixel/pixel_slider"❫
❪"code/utilities/colors/rectangle_shades"❫
❪"code/utilities/data_structures/graphics/objects/faced_label/faced_label"❫
❪"code/utilities/data_structures/graphics/objects/label/style/default_label_styles"❫
⚯
❪"code/utilities/colors/color_defaults"❫
❪"code/utilities/data_structures/graphics/objects/cursor/premade/blue_cursor"❫
❪"code/utilities/data_structures/graphics/objects/cursor/premade/red_cursor"❫
⚞⚟

◀public: static▶ Faced_Label ☀Single_Plain_White_Box()❰
    Faced_Label x;
    
    //add the face
    Label_Face face;
    face.name = "<name>";
    face.label.message = "<message>";
    face.label.styles = Default_Label_Styles::Plain_White_Box();
    x.faces.emplace_back(face);
    
    return x;
❱