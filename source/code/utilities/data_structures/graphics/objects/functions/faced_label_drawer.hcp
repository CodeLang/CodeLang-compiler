class
❪string❫
❪unordered_map❫
❪utility❫
❪cstdlib❫
❪"code/utilities/fonts/bdf/settings/character_segment"❫
❪"code/utilities/data_structures/graphics/objects/label/label_settings"❫
❪"code/utilities/data_structures/graphics/objects/grid/faced/positioned_faced_label"❫
❪"code/utilities/data_structures/graphics/objects/grid/faced/faced_label"❫
❪"code/utilities/data_structures/graphics/objects/functions/label_drawer"❫
❪"code/utilities/data_structures/graphics/objects/frame_elements"❫
❪"code/utilities/peripheral/mouse/state/mouse_state"❫
❪"code/utilities/fonts/bdf/character_maps/character_maps"❫
⚯
⚞⚟

//FULL DRAW
◀public: static▶ Frame_Elements ☀Full_Draw(Character_Maps const& font_chars, Positioned_Faced_Label & label, Pc_Input_State const& pc_input)❰
    return Label_Drawer::Full_Draw(font_chars,
                              label.pos,
                              label.faces[label.index].label,
                              pc_input);
❱



//EVENT IT
◀public: static▶ void ☀Event_It(Character_Maps const& font_chars, Faced_Label & label, Position const& pos, Pc_Input_State const& pc_input)❰
    Label_Drawer::Event_It(font_chars,
                              pos,
                              label.faces[label.index].label,
                              pc_input);
❱


//DRAW IT
◀public: static▶ Frame_Elements ☀Draw(Character_Maps const& font_chars, Positioned_Faced_Label & label, Mouse_State const& mouse_state)❰

    //leverage single face label drawer
    return Label_Drawer::Draw(font_chars,
                              label.pos,
                              label.faces[label.index].label,
                              mouse_state);
❱

◀public: static▶ Frame_Elements ☀Draw(Character_Maps const& font_chars, Faced_Label & label, Position const& pos, Mouse_State const& mouse_state)❰

    //leverage single face label drawer
    return Label_Drawer::Draw(font_chars,
                              pos,
                              label.faces[label.index].label,
                              mouse_state);
❱


//size it
◀public: static▶ Two_D_Dimensions ☀Get_Dimensions(Faced_Label const& label)❰
    return Label_Drawer::Get_Dimensions(label.faces[label.index].label);
❱