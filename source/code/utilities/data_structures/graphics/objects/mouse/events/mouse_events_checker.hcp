class
⚯
⚞⚟


//HIGH LEVEL EVENTS GETTER
◀public: static▶ Mouse_Events ☀search_for_mouse_events_in_rectangle(Position pos, Rectangle_Settings const &settings, Mouse_State const& mouse_state)
❰
    //find if any mouse events have happened on the rectangle
    Mouse_Events events;
    
    if (position_inside_rectangle(mouse_state.pos,pos,settings)){
        events.in_position = true;
        events.state = mouse_state;
    }
    
    return events;
❱
◀public: static▶ Mouse_Events ☀search_for_mouse_events_in_rectangle(Position pos, Rectangle_Settings const &settings, Mouse_State const& mouse_state, bool const& in_position_possible)
❰
    //find if any mouse events have happened on the rectangle
    Mouse_Events events;
    
    if (!in_position_possible){
        return events;
    }
    
    if (position_inside_rectangle(mouse_state.pos,pos,settings)){
        events.in_position = true;
        events.state = mouse_state;
    }
    
    return events;
❱
◀public: static▶ Mouse_Events ☀search_for_mouse_events_in_rectangle(Position const& top_left, Position const& bottom_right, Mouse_State const& mouse_state)
❰
    //find if any mouse events have happened on the rectangle
    Mouse_Events events;
    
    if (position_inside_rectangle(mouse_state.pos,top_left,bottom_right)){
        events.in_position = true;
        events.state = mouse_state;
    }
    
    return events;
❱


//INDIVIDUAL MOUSE CHECKS
◀private: static▶ bool ☀mouse_left_clicked_area(Mouse_State const& mouse_state, Position pos, Rectangle_Settings const &settings)
❰
    if (mouse_state.left.clicked)
    {
        return position_inside_rectangle(mouse_state.pos,pos,settings);
    }
    return false;
❱
◀private: static▶ bool ☀mouse_left_clicked_area(Mouse_State const& mouse_state, Position const& top_left, Position const& bottom_right)
❰
    if (mouse_state.left.clicked)
    {
        return position_inside_rectangle(mouse_state.pos,top_left,bottom_right);
    }
    return false;
❱
◀private: static▶ bool ☀mouse_is_hovering_area(Mouse_State const& mouse_state, Position pos, Rectangle_Settings const &settings)
❰
    return position_inside_rectangle(mouse_state.pos,pos,settings);
❱
◀private: static▶ bool ☀mouse_is_hovering_area(Mouse_State const& mouse_state, Position const& top_left, Position const& bottom_right)
❰
    return position_inside_rectangle(mouse_state.pos,top_left,bottom_right);
❱


//MOUSE AGNOSTIC (shapes / positions only)
◀public: static▶ bool ☀position_inside_rectangle(Position const& pos, Position const& rect_pos, Rectangle_Settings const& settings)
❰
    if (pos.x > rect_pos.x && pos.x < rect_pos.x + settings.dimensions.width)
    {
        if (pos.y >= rect_pos.y && pos.y <= rect_pos.y + settings.dimensions.height)
        {
            return true;
        }
    }
    return false;
❱

◀public: static▶ bool ☀position_inside_rectangle(Position const& in_pos, Position const& top_left, Position const& bottom_right)
❰
    if (in_pos.x > top_left.x && in_pos.x < top_left.x + bottom_right.x)
    {
        if (in_pos.y >= top_left.y && in_pos.y <= top_left.y + bottom_right.y)
        {
            return true;
        }
    }
    return false;
❱