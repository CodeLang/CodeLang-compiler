class
❪string❫
❪"code/utilities/formats/html/basic_html_template_settings"❫
⚯
❪iostream❫
❪"code/utilities/types/vectors/creators/lib"❫
❪"code/utilities/types/vectors/observers/lib"❫
❪"code/utilities/filesystem/files/creating/lib"❫
❪"code/utilities/types/strings/transformers/appending/lib"❫
⚞⚟

◀public: static▶ std::string ☀Get(Basic_Html_Template_Settings const& settings)❰
     
    std::string x;
    Append_With_Newline(x,"<!doctype html>");
    Append_With_Newline(x,"<html>");
    Append_With_Newline(x,"<head>");
    Append_With_Newline(x,"<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">");
    Append_With_Newline(x,"<title>");
    Append_With_Newline(x,settings.title);
    Append_With_Newline(x,"</title>");
    for (auto const& it: settings.import_scripts){
        Append(x,"<script src=\"");
        Append(x,it);
        Append_With_Newline(x,"\"></script>");
    }
    Append_With_Newline(x,"<style>");
    Append_With_Newline(x,settings.css);
    Append_With_Newline(x,"</style>");
    Append_With_Newline(x,"</head>");
    Append_With_Newline(x,"<body>");
    Append_With_Newline(x,settings.body);
    Append_With_Newline(x,"</body>");
    Append_With_Newline(x,"</html>");
    
    return x;
❱