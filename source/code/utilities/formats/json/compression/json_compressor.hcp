class
❪string❫
❪vector❫
❪"nlohmann/json.hpp"❫
❪"code/utilities/formats/json/compression/json_compression_format"❫
⚯
❪"code/utilities/formats/json/compression/bson_converter"❫
❪"code/utilities/formats/json/compression/cbor_converter"❫
❪"code/utilities/formats/json/compression/msgpack_converter"❫
❪"code/utilities/formats/json/compression/ubjson_converter"❫
⚞⚟

◀public: static▶ std::vector<std::uint8_t> ☀Compress_To_Format(nlohmann::json const& x, Json_Compression_Format const& format)❰
    switch (format){
        case Json_Compression_Format::BSON: return Bson_Converter::Convert_To_Bson(x);
        case Json_Compression_Format::CBOR:   return Cbor_Converter::Convert_To_Cbor(x);
        case Json_Compression_Format::MSGPACK: return Msgpack_Converter::Convert_To_Msgpack(x);
        case Json_Compression_Format::UBJSON: return Ubjson_Converter::Convert_To_Ubjson(x);
    }
    return {};
❱
◀public: static▶ nlohmann::json ☀Decompress_To_Json(std::vector<std::uint8_t> const& x, Json_Compression_Format const& format)❰
    switch (format){
        case Json_Compression_Format::BSON: return Bson_Converter::Convert_To_Json(x);
        case Json_Compression_Format::CBOR:   return Cbor_Converter::Convert_To_Json(x);
        case Json_Compression_Format::MSGPACK: return Msgpack_Converter::Convert_To_Json(x);
        case Json_Compression_Format::UBJSON: return Ubjson_Converter::Convert_To_Json(x);
    }
    return {};
❱