class
❪string❫
❪vector❫
❪"nlohmann/json.hpp"❫
⚯
⚞⚟

◀public: static▶ void ☀Add_Test_Patch(nlohmann::json & patches, std::string const& path, nlohmann::json const& value)❰
    
    //build operation
    nlohmann::json x;
    x["op"] = "test";
    x["path"] = path;
    x["value"] = value;
    
    //append it
    patches.emplace_back(x);
❱

◀public: static▶ void ☀Add_Remove_Patch(nlohmann::json & patches, std::string const& path)❰
    
    //build operation
    nlohmann::json x;
    x["op"] = "remove";
    x["path"] = path;
    
    //append it
    patches.emplace_back(x);
❱

◀public: static▶ void ☀Add_Add_Patch(nlohmann::json & patches, std::string const& path, nlohmann::json const& value)❰
    
    //build operation
    nlohmann::json x;
    x["op"] = "add";
    x["path"] = path;
    x["value"] = value;
    
    //append it
    patches.emplace_back(x);
❱

◀public: static▶ void ☀Add_Replace_Patch(nlohmann::json & patches, std::string const& path, nlohmann::json const& value)❰
    
    //build operation
    nlohmann::json x;
    x["op"] = "replace";
    x["path"] = path;
    x["value"] = value;
    
    //append it
    patches.emplace_back(x);
❱

◀public: static▶ void ☀Add_Move_Patch(nlohmann::json & patches, std::string const& from_path, std::string const& to_path)❰
    
    //build operation
    nlohmann::json x;
    x["op"] = "move";
    x["from"] = from_path;
    x["path"] = to_path;
    
    //append it
    patches.emplace_back(x);
❱

◀public: static▶ void ☀Add_Copy_Patch(nlohmann::json & patches, std::string const& from_path, std::string const& to_path)❰
    
    //build operation
    nlohmann::json x;
    x["op"] = "copy";
    x["from"] = from_path;
    x["path"] = to_path;
    
    //append it
    patches.emplace_back(x);
❱



