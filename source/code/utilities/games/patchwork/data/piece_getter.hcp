class
❪string❫
❪iostream❫
❪"code/utilities/games/patchwork/data/piece"❫
❪"code/utilities/types/strings/transformers/appending/lib"❫
⚯
⚞⚟

◀public: static▶ std::vector<Piece> ☀Get()❰
    std::vector<Piece> x;
    x.emplace_back(P1());
    x.emplace_back(P2());
    x.emplace_back(P3());
    x.emplace_back(P4());
    x.emplace_back(P5());
    x.emplace_back(P6());
    x.emplace_back(P7());
    x.emplace_back(P8());
    x.emplace_back(P9());
    x.emplace_back(P10());
    x.emplace_back(P11());
    x.emplace_back(P12());
    x.emplace_back(P14());
    x.emplace_back(P15());
    x.emplace_back(P16());
    x.emplace_back(P17());
    x.emplace_back(P18());
    x.emplace_back(P19());
    x.emplace_back(P20());
    x.emplace_back(P21());
    x.emplace_back(P22());
    x.emplace_back(P23());
    x.emplace_back(P24());
    x.emplace_back(P25());
    x.emplace_back(P26());
    x.emplace_back(P27());
    x.emplace_back(P28());
    x.emplace_back(P29());
    x.emplace_back(P30());
    x.emplace_back(P31());
    x.emplace_back(P32());
    x.emplace_back(P33());
    return x;
❱  

◀public: static▶ std::vector<Piece> ☀P1()❰
    Piece x;
    x.cost=5;
    x.time=2;
    x.buttons=2;
    Append_With_Newline(x.shape,"_O_");
    Append_With_Newline(x.shape,"_O_");
    Append_With_Newline(x.shape,"OOO");
    retur x;
❱

◀public: static▶ std::vector<Piece> ☀P2()❰
    Piece x;
    x.cost=1;
    x.time=2;
    x.buttons=0;
    Append_With_Newline(x.shape,"O_O");
    Append_With_Newline(x.shape,"OOO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P3()❰
    Piece x;
    x.cost=3;
    x.time=2;
    x.buttons=1;
    Append_With_Newline(x.shape,"_O");
    Append_With_Newline(x.shape,"OO");
    Append_With_Newline(x.shape,"O_");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P4()❰
    Piece x;
    x.cost=7;
    x.time=2;
    x.buttons=2;
    Append_With_Newline(x.shape,"_O_");
    Append_With_Newline(x.shape,"_O_");
    Append_With_Newline(x.shape,"_O_");
    Append_With_Newline(x.shape,"_O_");
    Append_With_Newline(x.shape,"OOO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P5()❰
    Piece x;
    x.cost=10;
    x.time=4;
    x.buttons=3;
    Append_With_Newline(x.shape,"O__");
    Append_With_Newline(x.shape,"OO_");
    Append_With_Newline(x.shape,"_OO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P6()❰
    Piece x;
    x.cost=8;
    x.time=6;
    x.buttons=3;
    Append_With_Newline(x.shape,"OO_");
    Append_With_Newline(x.shape,"OO_");
    Append_With_Newline(x.shape,"_OO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P7()❰
    Piece x;
    x.cost=10;
    x.time=3;
    x.buttons=2;
    Append_With_Newline(x.shape,"O_");
    Append_With_Newline(x.shape,"O_");
    Append_With_Newline(x.shape,"O_");
    Append_With_Newline(x.shape,"O_");
    Append_With_Newline(x.shape,"OO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P8()❰
    Piece x;
    x.cost=10;
    x.time=5;
    x.buttons=3;
    Append_With_Newline(x.shape,"O_");
    Append_With_Newline(x.shape,"O_");
    Append_With_Newline(x.shape,"OO");
    Append_With_Newline(x.shape,"OO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P9()❰
    Piece x;
    x.cost=3;
    x.time=2;
    x.buttons=1;
    Append_With_Newline(x.shape,"O_");
    Append_With_Newline(x.shape,"OO");
    Append_With_Newline(x.shape,"_O");
    Append_With_Newline(x.shape,"_O");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P10()❰
    Piece x;
    x.cost=3;
    x.time=3;
    x.buttons=1;
    Append_With_Newline(x.shape,"OOOO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P11()❰
    Piece x;
    x.cost=2;
    x.time=2;
    x.buttons=0;
    Append_With_Newline(x.shape,"O_");
    Append_With_Newline(x.shape,"OO");
    Append_With_Newline(x.shape,"OO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P12()❰
    Piece x;
    x.cost=2;
    x.time=1;
    x.buttons=0;
    Append_With_Newline(x.shape,"_O__");
    Append_With_Newline(x.shape,"OOOO");
    Append_With_Newline(x.shape,"__O_");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P13()❰
    Piece x;
    x.cost=1;
    x.time=5;
    x.buttons=1;
    Append_With_Newline(x.shape,"O__O");
    Append_With_Newline(x.shape,"OOOO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P14()❰
    Piece x;
    x.cost=7;
    x.time=6;
    x.buttons=3;
    Append_With_Newline(x.shape,"_OO");
    Append_With_Newline(x.shape,"OO_");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P15()❰
    Piece x;
    x.cost=3;
    x.time=1;
    x.buttons=0;
    Append_With_Newline(x.shape,"_O");
    Append_With_Newline(x.shape,"OO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P16()❰
    Piece x;
    x.cost=2;
    x.time=2;
    x.buttons=0;
    Append_With_Newline(x.shape,"OOO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P17()❰
    Piece x;
    x.cost=5;
    x.time=4;
    x.buttons=2;
    Append_With_Newline(x.shape,"_O_");
    Append_With_Newline(x.shape,"OOO");
    Append_With_Newline(x.shape,"_O_");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P18()❰
    Piece x;
    x.cost=4;
    x.time=2;
    x.buttons=1;
    Append_With_Newline(x.shape,"O");
    Append_With_Newline(x.shape,"OOO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P19()❰
    Piece x;
    x.cost=5;
    x.time=3;
    x.buttons=1;
    Append_With_Newline(x.shape,"_OO_");
    Append_With_Newline(x.shape,"OOOO");
    Append_With_Newline(x.shape,"_OO_");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P20()❰
    Piece x;
    x.cost=6;
    x.time=5;
    x.buttons=2;
    Append_With_Newline(x.shape,"OO");
    Append_With_Newline(x.shape,"OO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P21()❰
    Piece x;
    x.cost=7;
    x.time=4;
    x.buttons=2;
    Append_With_Newline(x.shape,"_OO_");
    Append_With_Newline(x.shape,"OOOO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P22()❰
    Piece x;
    x.cost=4;
    x.time=2;
    x.buttons=0;
    Append_With_Newline(x.shape,"_O");
    Append_With_Newline(x.shape,"OO");
    Append_With_Newline(x.shape,"OO");
    Append_With_Newline(x.shape,"O_");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P23()❰
    Piece x;
    x.cost=3;
    x.time=4;
    x.buttons=1;
    Append_With_Newline(x.shape,"__O_");
    Append_With_Newline(x.shape,"OOOO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P24()❰
    Piece x;
    x.cost=2;
    x.time=3;
    x.buttons=0;
    Append_With_Newline(x.shape,"O_O");
    Append_With_Newline(x.shape,"OOO");
    Append_With_Newline(x.shape,"O_O");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P25()❰
    Piece x;
    x.cost=1;
    x.time=2;
    x.buttons=0;
    Append_With_Newline(x.shape,"___O");
    Append_With_Newline(x.shape,"OOOO");
    Append_With_Newline(x.shape,"O___");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P26()❰
    Piece x;
    x.cost=3;
    x.time=6;
    x.buttons=2;
    Append_With_Newline(x.shape,"_O_");
    Append_With_Newline(x.shape,"OOO");
    Append_With_Newline(x.shape,"O_O");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P27()❰
    Piece x;
    x.cost=1;
    x.time=4;
    x.buttons=1;
    Append_With_Newline(x.shape,"__O__");
    Append_With_Newline(x.shape,"OOOOO");
    Append_With_Newline(x.shape,"__O__");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P28()❰
    Piece x;
    x.cost=2;
    x.time=1;
    x.buttons=0;
    Append_With_Newline(x.shape,"OO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P29()❰
    Piece x;
    x.cost=1;
    x.time=3;
    x.buttons=0;
    Append_With_Newline(x.shape,"_O");
    Append_With_Newline(x.shape,"OO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P30()❰
    Piece x;
    x.cost=7;
    x.time=1;
    x.buttons=1;
    Append_With_Newline(x.shape,"OOOOO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P31()❰
    Piece x;
    x.cost=0;
    x.time=3;
    x.buttons=1;
    Append_With_Newline(x.shape,"_O__");
    Append_With_Newline(x.shape,"OOOO");
    Append_With_Newline(x.shape,"_O__");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P32()❰
    Piece x;
    x.cost=2;
    x.time=2;
    x.buttons=0;
    Append_With_Newline(x.shape,"_O_");
    Append_With_Newline(x.shape,"OOO");
    retur x;
❱
◀public: static▶ std::vector<Piece> ☀P33()❰
    Piece x;
    x.cost=4;
    x.time=6;
    x.buttons=2;
    Append_With_Newline(x.shape,"O__");
    Append_With_Newline(x.shape,"OOO");
    retur x;
❱


