class
❪iostream❫
❪string❫
❪utility❫
❪set❫
❪"code/utilities/shell/lib"❫
❪"code/utilities/filesystem/paths/lib"❫
❪"code/utilities/git-related/lib"❫
❪"code/utilities/git-related/repo_establisher/repo_location"❫
⚯
⚞⚟


//THIS IS NOT THREAD SAFE (because of path changing) (YOU SHOULD AVOID)
◀public: static▶ void ☀Establish_And_Move_Into_Repo(Repo_Location const& settings) ❰

    if (settings.use_clone){
        auto path_name = Do_Clone(settings);
        Set_Path(path_name);
    }
    
    //start in the appropriate directory
    Possibly_Set_Path(settings.use_run_path,settings.run_path);
❱

◀public: static▶ std::string ☀Establish_And_Get_Path(Repo_Location const& settings) ❰

    if (settings.use_clone){
        auto path_name = Do_Clone(settings);
        return path_name;
    }
    
    return settings.run_path;
❱

◀public: static▶ std::string ☀Establish_N_Repos(Repo_Location const& settings, int const& count) ❰

   //todo
❱


◀private: static▶ std::string ☀Do_Clone(Repo_Location const& settings)❰
    if (settings.switch_branches){
        auto path_name = Download_Repo_To_Random_Name_In_Temp_Folder(settings.clone_url,settings.branch_name);
        return path_name;
    }
    auto path_name2 = Download_Repo_To_Random_Name_In_Temp_Folder(settings.clone_url);
    return path_name2;
❱
