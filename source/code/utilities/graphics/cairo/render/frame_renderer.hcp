class
❪"code/utilities/graphics/imgui/render/frame_elements"❫
❪"SDL.h"❫
⚯
❪"code/utilities/graphics/imgui/ui/draw/rectangle/rectangle_drawer"❫
❪"code/utilities/graphics/imgui/ui/draw/line/line_drawer"❫
❪"code/utilities/graphics/imgui/ui/draw/bitmap/multi_color_bitmap/multi_color_bitmap_drawer"❫
❪"code/utilities/graphics/imgui/ui/draw/bitmap/multi_color_bitmap/positioned_multi_color_bitmap"❫
❪"code/utilities/graphics/imgui/ui/draw/bitmap/full_color_bitmap/positioned_full_color_bitmap"❫
❪"code/utilities/types/variant/lib"❫
⚞⚟

◀public: static▶ void ☀Render(Frame_Elements const& elements)❰

        Render_Frame_Elements(elements);
❱

◀private: static▶ void ☀Render_Frame_Elements(Frame_Elements const& elements)❰
    
    //build drawing context
    cairo_surface_t *surface = cairo_image_surface_create(CAIRO_FORMAT_RGB24,100,100);
    cairo_t *cr = cairo_create(surface);
    
    //draw background
    cairo_save(cr);
    cairo_set_source_rgb(cr, 1, 1, 1);
    cairo_paint(cr);
    cairo_restore(cr);
    
    for (auto const& it: elements.types){
        std::visit(overloaded {
            [&](Positioned_Rectangle_Settings const& x) {
                Draw(cr,x);
            },
            [&](Positioned_Multi_Color_Bitmap const& x) {
                Draw(cr,x);
            },
            [&](Positioned_Full_Color_Bitmap const& x) {
                Draw(cr,x);
            },
        }, it);
    }
    
    //export image
    cairo_surface_write_to_png(surface, "/home/laptop/Desktop/cairo_pixel_example.png");
    
    //cleanup
    cairo_destroy(cr), cr = NULL;
    cairo_surface_destroy(surface), surface = NULL;
❱

◀private: static▶ void ☀Draw(cairo_t *cr, Positioned_Rectangle_Settings const& shape)❰
❱

◀private: static▶ void ☀Draw(cairo_t *cr, Positioned_Multi_Color_Bitmap const& shape)❰

    for (auto const& it: shape.pixels){
        
        cairo_rectangle (cr, shape.pos.x+it.pos.x, shape.pos.y+it.pos.y, 1, 1);
        cairo_set_source_rgb (cr, it.color_fill.r, it.color_fill.g, it.color_fill.b);
        cairo_fill (cr);
    }
❱
◀private: static▶ void ☀Draw(cairo_t *cr, Positioned_Full_Color_Bitmap const& shape)❰

    for (auto const& it: shape.pixels){
        
        cairo_rectangle (cr, shape.pos.x+it.x, shape.pos.y+it.y, 1, 1);
        cairo_set_source_rgb (cr, shape.color_fill.r, shape.color_fill.g, shape.color_fill.b);
        cairo_fill (cr);
    }
❱