class
⚯
⚞⚟


//regular draw
◀public: static▶ void ☀Draw(ImDrawList *draw_list, Positioned_Circle_Settings const &settings)
❰
  return Draw(draw_list,settings.pos,settings.shape);
❱
◀public: static▶ void ☀Draw(ImDrawList *draw_list, Position pos, Circle_Settings const &settings)
❰
    Possibly_Draw_Filling(draw_list,pos,settings);
    Possibly_Draw_Border(draw_list,pos,settings);
❱


◀private: static▶ void ☀Possibly_Draw_Filling(ImDrawList *draw_list, Position pos, Circle_Settings const &settings)
❰
    if (settings.hooks.draw_fill){
      draw_list->AddCircleFilled(ImVec2(pos.x, pos.y),
                               settings.radius,
                               Imgui_Type_Utility::to_imgui_color(settings.colors.fill),
                               settings.number_of_segments);
    }
    
    if (settings.hooks.draw_shade){
        //TODO
    }
    
❱
◀private: static▶ void ☀Possibly_Draw_Border(ImDrawList *draw_list, Position pos, Circle_Settings const &settings)
❰
    if (settings.hooks.draw_border){
      draw_list->AddCircle(ImVec2(pos.x, pos.y),
                         settings.radius,
                         Imgui_Type_Utility::to_imgui_color(settings.colors.border),
                         settings.number_of_segments,
                         settings.thickness);
    }
❱