class
❪string❫
❪"code/utilities/data_structures/graphics/bitmap/full_color_bitmap/full_color_bitmap"❫
❪"code/utilities/data_structures/graphics/bitmap/full_color_bitmap/positioned_full_color_bitmap"❫
❪"code/utilities/data_structures/graphics/bitmap/pixel/pixel_settings"❫
❪"code/utilities/graphics/imgui/render/elements/pixel_drawer"❫
❪"code/utilities/graphics/imgui/ui/draw/mouse_events/mouse_events"❫
❪"code/utilities/graphics/imgui/ui/draw/mouse_events/mouse_events_checker"❫
❪"code/utilities/graphics/imgui/ui/draw/imgui_type_utility"❫
❪"code/utilities/data_structures/position/position"❫
❪"code/utilities/graphics/imgui/mechanics"❫
⚯
⚞⚟

◀public: static▶ void ☀Draw(ImDrawList *draw_list, Position pos, Full_Color_Bitmap const &settings)
❰

    for (auto const& it: settings.pixels){
        draw_list->AddRectFilled(ImVec2(pos.x+it.x, pos.y+it.y),
                                 ImVec2(pos.x+it.x+1, pos.y+it.y+1),
                                 Imgui_Type_Utility::to_imgui_color(settings.color_fill));
    }

❱

◀public: static▶ void ☀Draw(ImDrawList *draw_list, Positioned_Full_Color_Bitmap const &settings)
❰

    for (auto const& it: settings.bitmap.pixels){
        draw_list->AddRectFilled(ImVec2(settings.pos.x+it.x, settings.pos.y+it.y),
                                 ImVec2(settings.pos.x+it.x+1, settings.pos.y+it.y+1),
                                 Imgui_Type_Utility::to_imgui_color(settings.bitmap.color_fill));
    }

❱