class
❪"code/tools/ide/settings/ide_settings"❫
❪"code/tools/ide/frame/logic/frame_elements"❫
❪"code/utilities/peripheral/mouse/state/mouse_state"❫
❪"code/utilities/peripheral/pc/pc_input_state"❫
⚯
❪"code/tools/ide/frame/mouse_selection_drawer"❫
❪"code/utilities/peripheral/mouse/state/mouse_position_getter"❫
❪"code/utilities/graphics/imgui/ui/draw/mouse_events/mouse_events_checker"❫
❪"code/utilities/graphics/imgui/ui/window/window_position_finder"❫
❪"code/tools/ide/frame/label_cursor_action_doer"❫
❪"code/utilities/types/vectors/operators/lib"❫
❪"code/tools/ide/frame/mouse_frame_getter"❫
⚞⚟


◀public: static▶ void ☀Event_It(Character_Maps const& font_chars, Positioned_Label & label, Pc_Input_State const& pc_input)❰

    for (auto & it: label.state.cursors){
        if (label.state.user_state.is_active){
            Label_Cursor_Action_Doer::Handle_Actions(font_chars,label,it,pc_input);
        }
    }
❱

◀public: static▶ Frame_Elements ☀Draw_Cursor(Positioned_Label & label)❰
    
    Frame_Elements elements;
    for (auto & it: label.state.cursors){
        if (label.state.user_state.is_active){
            Draw_Label_Cursor(elements, label, it);
        }
    }
    return elements;
❱

◀private: static▶ void ☀Draw_Label_Cursor(Frame_Elements & elements, Positioned_Label & label, Label_Cursor_Selection & selection)❰
    
    //draw label cursor
    selection.label_cursor.tick.shape.pos = Calculate_Position(label,selection);
    selection.label_cursor.highlight.shape.pos = Calculate_Position(label,selection);
    elements.types.emplace_back(selection.label_cursor.tick.shape);
    
    //draw selected box over selected text
    selection.label_cursor.highlight.shape.shape.dimensions.width = selection.additional_chars_selected * 6;
    selection.label_cursor.highlight.shape.shape.dimensions.height = 13;
    elements.types.emplace_back(selection.label_cursor.highlight.shape);
❱

◀private: static▶ Position ☀Calculate_Position(Positioned_Label & label, Label_Cursor_Selection & selection)❰
    Position p;
    p = label.pos;
    p.y -= 9;
    p.x += (selection.label_index+1) * 6;
    return p;
❱