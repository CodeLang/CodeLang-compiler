class
❪string❫
❪unordered_map❫
❪"code/utilities/graphics/imgui/ui/draw/bitmap/full_color_bitmap/full_color_bitmap"❫
❪"code/utilities/fonts/bdf/settings/character_segment"❫
❪"code/tools/ide/settings/ide_settings"❫
❪"code/utilities/graphics/imgui/ui/draw/label/grid/faced/regular/label_settings"❫
❪"code/utilities/graphics/imgui/ui/draw/mouse_events/mouse_events_checker"❫
❪"code/utilities/graphics/imgui/ui/draw/rectangle/rectangle_drawer"❫
❪"code/utilities/graphics/imgui/ui/draw/bitmap/full_color_bitmap/full_color_bitmap_drawer"❫
❪"code/utilities/graphics/imgui/ui/draw/text/text_to_bitmap"❫
❪"code/utilities/graphics/imgui/ui/ui_renders"❫
❪"code/tools/transcompilers/unilang/tokens/get_tokens"❫
❪"code/utilities/graphics/imgui/ui/draw/bitmap/pixel/pixel_slider"❫
❪"code/utilities/colors/rectangle_shades"❫
⚯
⚞⚟


◀public: static▶ Label_Styles ☀Label_Style_1()❰
    Label_Styles x;
    
    int default_box_thickness = 1;
    int default_fixed_width = 100;
    
    //not selected
    x.regular_nonactive.box.edge.thickness = default_box_thickness;
    x.regular_nonactive.box.edge.rounding  = 0.0;
    x.regular_nonactive.box.colors.border = Imgui_Type_Utility::Black();
    x.regular_nonactive.box.colors.fill = Imgui_Type_Utility::White();
    x.regular_nonactive.text = Imgui_Type_Utility::Black();
    x.regular_nonactive.width.grow_width = false;
    x.regular_nonactive.width.fixed_width = default_fixed_width;
    x.regular_nonactive.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.regular_nonactive.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.regular_nonactive.box.hooks.draw_fill = true;
    x.regular_nonactive.box.hooks.draw_shade = true;

    x.hovered_nonactive.box.edge.thickness = default_box_thickness;
    x.hovered_nonactive.box.edge.rounding  = 0.0;
    x.hovered_nonactive.box.colors.border = Imgui_Type_Utility::Black();
    x.hovered_nonactive.box.colors.fill = Imgui_Type_Utility::Black();
    x.hovered_nonactive.text = Imgui_Type_Utility::White();
    x.hovered_nonactive.width.grow_width = false;
    x.hovered_nonactive.width.fixed_width = default_fixed_width;
    x.hovered_nonactive.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.hovered_nonactive.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.hovered_nonactive.box.hooks.draw_fill = true;
    x.hovered_nonactive.box.hooks.draw_shade = true;
    
    //selected
    x.hovered_active.box.edge.thickness = default_box_thickness;
    x.hovered_active.box.edge.rounding  = 0.0;
    x.hovered_active.box.colors.border = Imgui_Type_Utility::Red();
    x.hovered_active.box.colors.fill = Imgui_Type_Utility::Black();
    x.hovered_active.text = Imgui_Type_Utility::White();
    x.hovered_active.width.grow_width = true;
    x.hovered_active.width.fixed_width = default_fixed_width;
    x.hovered_active.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.hovered_active.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.hovered_active.box.hooks.draw_fill = true;
    x.hovered_active.box.hooks.draw_shade = true;
    
    x.regular_active.box.edge.thickness = default_box_thickness;
    x.regular_active.box.edge.rounding  = 0.0;
    x.regular_active.box.colors.border = Imgui_Type_Utility::Red();
    x.regular_active.box.colors.fill = Imgui_Type_Utility::White();
    x.regular_active.text = Imgui_Type_Utility::Black();
    x.regular_active.width.grow_width = true;
    x.regular_active.width.fixed_width = default_fixed_width;
    x.regular_active.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.regular_active.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.regular_active.box.hooks.draw_fill = true;
    x.regular_active.box.hooks.draw_shade = true;
    
    return x;
❱
◀public: static▶ Label_Styles ☀Label_Style_2()❰
    Label_Styles x;
    
    int default_box_thickness = 1;
    int default_fixed_width = 100;
    
    //not selected
    x.regular_nonactive.box.edge.thickness = default_box_thickness;
    x.regular_nonactive.box.edge.rounding  = 0.0;
    x.regular_nonactive.box.colors.border = Imgui_Type_Utility::Black();
    x.regular_nonactive.box.colors.fill = Imgui_Type_Utility::White();
    x.regular_nonactive.text = Imgui_Type_Utility::Black();
    x.regular_nonactive.width.grow_width = false;
    x.regular_nonactive.width.fixed_width = default_fixed_width;
    x.regular_nonactive.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.regular_nonactive.box.shades = Rectangle_Shades::Red_Blue_Fade();
    x.regular_nonactive.box.hooks.draw_fill = true;
    x.regular_nonactive.box.hooks.draw_shade = true;

    x.hovered_nonactive.box.edge.thickness = default_box_thickness;
    x.hovered_nonactive.box.edge.rounding  = 0.0;
    x.hovered_nonactive.box.colors.border = Imgui_Type_Utility::Black();
    x.hovered_nonactive.box.colors.fill = Imgui_Type_Utility::Black();
    x.hovered_nonactive.text = Imgui_Type_Utility::White();
    x.hovered_nonactive.width.grow_width = false;
    x.hovered_nonactive.width.fixed_width = default_fixed_width;
    x.hovered_nonactive.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.hovered_nonactive.box.shades = Rectangle_Shades::Red_Blue_Fade();
    x.hovered_nonactive.box.hooks.draw_fill = true;
    x.hovered_nonactive.box.hooks.draw_shade = true;
    
    //selected
    x.hovered_active.box.edge.thickness = default_box_thickness;
    x.hovered_active.box.edge.rounding  = 0.0;
    x.hovered_active.box.colors.border = Imgui_Type_Utility::Red();
    x.hovered_active.box.colors.fill = Imgui_Type_Utility::Black();
    x.hovered_active.text = Imgui_Type_Utility::White();
    x.hovered_active.width.grow_width = true;
    x.hovered_active.width.fixed_width = default_fixed_width;
    x.hovered_active.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.hovered_active.box.shades = Rectangle_Shades::Red_Blue_Fade();
    x.hovered_active.box.hooks.draw_fill = true;
    x.hovered_active.box.hooks.draw_shade = true;
    
    x.regular_active.box.edge.thickness = default_box_thickness;
    x.regular_active.box.edge.rounding  = 0.0;
    x.regular_active.box.colors.border = Imgui_Type_Utility::Red();
    x.regular_active.box.colors.fill = Imgui_Type_Utility::White();
    x.regular_active.text = Imgui_Type_Utility::Black();
    x.regular_active.width.grow_width = true;
    x.regular_active.width.fixed_width = default_fixed_width;
    x.regular_active.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.regular_active.box.shades = Rectangle_Shades::Red_Blue_Fade();
    x.regular_active.box.hooks.draw_fill = true;
    x.regular_active.box.hooks.draw_shade = true;

    return x;
❱

◀public: static▶ Label_Styles ☀Always_Grow_Example()❰
    Label_Styles x;
    
    int default_box_thickness = 1;
    int default_fixed_width = 100;
    
    //not selected
    x.regular_nonactive.box.edge.thickness = default_box_thickness;
    x.regular_nonactive.box.edge.rounding  = 0.0;
    x.regular_nonactive.box.colors.border = Imgui_Type_Utility::Black();
    x.regular_nonactive.box.colors.fill = Imgui_Type_Utility::White();
    x.regular_nonactive.text = Imgui_Type_Utility::Black();
    x.regular_nonactive.width.grow_width = true;
    x.regular_nonactive.width.fixed_width = default_fixed_width;
    x.regular_nonactive.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.regular_nonactive.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.regular_nonactive.box.hooks.draw_fill = true;
    x.regular_nonactive.box.hooks.draw_shade = true;

    x.hovered_nonactive.box.edge.thickness = default_box_thickness;
    x.hovered_nonactive.box.edge.rounding  = 0.0;
    x.hovered_nonactive.box.colors.border = Imgui_Type_Utility::Black();
    x.hovered_nonactive.box.colors.fill = Imgui_Type_Utility::Black();
    x.hovered_nonactive.text = Imgui_Type_Utility::White();
    x.hovered_nonactive.width.grow_width = true;
    x.hovered_nonactive.width.fixed_width = default_fixed_width;
    x.hovered_nonactive.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.hovered_nonactive.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.hovered_nonactive.box.hooks.draw_fill = true;
    x.hovered_nonactive.box.hooks.draw_shade = true;
    
    //selected
    x.hovered_active.box.edge.thickness = default_box_thickness;
    x.hovered_active.box.edge.rounding  = 0.0;
    x.hovered_active.box.colors.border = Imgui_Type_Utility::Red();
    x.hovered_active.box.colors.fill = Imgui_Type_Utility::Black();
    x.hovered_active.text = Imgui_Type_Utility::White();
    x.hovered_active.width.grow_width = true;
    x.hovered_active.width.fixed_width = default_fixed_width;
    x.hovered_active.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.hovered_active.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.hovered_active.box.hooks.draw_fill = true;
    x.hovered_active.box.hooks.draw_shade = true;
    
    x.regular_active.box.edge.thickness = default_box_thickness;
    x.regular_active.box.edge.rounding  = 0.0;
    x.regular_active.box.colors.border = Imgui_Type_Utility::Red();
    x.regular_active.box.colors.fill = Imgui_Type_Utility::White();
    x.regular_active.text = Imgui_Type_Utility::Black();
    x.regular_active.width.grow_width = true;
    x.regular_active.width.fixed_width = default_fixed_width;
    x.regular_active.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.regular_active.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.regular_active.box.hooks.draw_fill = true;
    x.regular_active.box.hooks.draw_shade = true;
    
    return x;
❱

◀public: static▶ Label_Styles ☀Label_Style_Slide_Label()❰
    Label_Styles x;
    
    int default_box_thickness = 1;
    int default_fixed_width = 20;
    
    //not selected
    x.regular_nonactive.box.edge.thickness = default_box_thickness;
    x.regular_nonactive.box.edge.rounding  = 0.0;
    x.regular_nonactive.box.colors.border = Imgui_Type_Utility::Black();
    x.regular_nonactive.box.colors.fill = Imgui_Type_Utility::White();
    x.regular_nonactive.text = Imgui_Type_Utility::Black();
    x.regular_nonactive.width.grow_width = true;
    x.regular_nonactive.width.fixed_width = default_fixed_width;
    x.regular_nonactive.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.regular_nonactive.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.regular_nonactive.box.hooks.draw_fill = true;
    x.regular_nonactive.box.hooks.draw_shade = true;

    x.hovered_nonactive.box.edge.thickness = default_box_thickness;
    x.hovered_nonactive.box.edge.rounding  = 0.0;
    x.hovered_nonactive.box.colors.border = Imgui_Type_Utility::Black();
    x.hovered_nonactive.box.colors.fill = Imgui_Type_Utility::Black();
    x.hovered_nonactive.text = Imgui_Type_Utility::White();
    x.hovered_nonactive.width.grow_width = true;
    x.hovered_nonactive.width.fixed_width = default_fixed_width;
    x.hovered_nonactive.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.hovered_nonactive.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.hovered_nonactive.box.hooks.draw_fill = true;
    x.hovered_nonactive.box.hooks.draw_shade = true;
    
    //selected
    x.hovered_active.box.edge.thickness = default_box_thickness;
    x.hovered_active.box.edge.rounding  = 0.0;
    x.hovered_active.box.colors.border = Imgui_Type_Utility::Red();
    x.hovered_active.box.colors.fill = Imgui_Type_Utility::Black();
    x.hovered_active.text = Imgui_Type_Utility::White();
    x.hovered_active.width.grow_width = true;
    x.hovered_active.width.fixed_width = default_fixed_width;
    x.hovered_active.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.hovered_active.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.hovered_active.box.hooks.draw_fill = true;
    x.hovered_active.box.hooks.draw_shade = true;
    
    x.regular_active.box.edge.thickness = default_box_thickness;
    x.regular_active.box.edge.rounding  = 0.0;
    x.regular_active.box.colors.border = Imgui_Type_Utility::Red();
    x.regular_active.box.colors.fill = Imgui_Type_Utility::White();
    x.regular_active.text = Imgui_Type_Utility::Black();
    x.regular_active.width.grow_width = true;
    x.regular_active.width.fixed_width = default_fixed_width;
    x.regular_active.width.pixel_slide = Create_Normal_Pixel_Slider();
    x.regular_active.box.shades = Rectangle_Shades::Orange_White_Fade();
    x.regular_active.box.hooks.draw_fill = true;
    x.regular_active.box.hooks.draw_shade = true;
    
    return x;
❱

◀public: static▶ Pixel_Slider ☀Create_Normal_Pixel_Slider()❰
    Pixel_Slider slider;
    slider.cycle_offset = 0;
    slider.cycle_offset_pixel_jump = 1;
    slider.slide_clock.rate = .04;
    return slider;
❱