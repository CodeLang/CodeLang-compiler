class

❪string❫
❪"code/utilities/linguistics/computer/frontends/parts/extern_c/define_check/define_check_settings"❫
⚯
❪"code/utilities/types/strings/creators/lib"❫
⚞⚟



◀public: static▶ std::string ☀Get_True(Define_Check_Settings settings, std::string macro_to_check)❰
    std::string str;
    
    if (settings.method == Define_Check_Method::ABBREIVATED_NON_FUNCTION){
        str = "#ifdef " + macro_to_check;
    }
    
    else if (settings.method == Define_Check_Method::FUNCTION){
        
        //add the necessary space buffering
        macro_to_check = Create_String_Of_N_Spaces(settings.number_of_left_spaces_on_def_param) + macro_to_check;
        macro_to_check += Create_String_Of_N_Spaces(settings.number_of_right_spaces_on_def_param);
        
        str = "#if defined(" + macro_to_check + ")";
    }
    
    return str;
❱

◀public: static▶ std::string ☀Get_False(Define_Check_Settings settings, std::string macro_to_check)❰
    std::string str;
    
    if (settings.method == Define_Check_Method::ABBREIVATED_NON_FUNCTION){
        str = "#ifndef " + macro_to_check;
    }
    
    else if (settings.method == Define_Check_Method::FUNCTION){
        
        //add the necessary space buffering
        macro_to_check = Create_String_Of_N_Spaces(settings.number_of_left_spaces_on_def_param) + macro_to_check;
        macro_to_check += Create_String_Of_N_Spaces(settings.number_of_right_spaces_on_def_param);
        
        str = "#if !defined(" + macro_to_check + ")";
    }
    
    return str;
❱
