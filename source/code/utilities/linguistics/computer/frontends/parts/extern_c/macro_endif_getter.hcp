class


❪"code/utilities/linguistics/computer/frontends/parts/extern_c/define_check/define_check_end_comment_settings"❫
❪"code/utilities/linguistics/computer/frontends/parts/sections/macro/preprocessor_directives"❫
⚯
⚞⚟

◀public: static▶ std::string ☀Get(std::string ending_what, Define_Check_End_Comment_Settings const& settings, Preprocessor_Directives const& directives)❰
    std::string str = directives.ENDIF_STR;
    Possibly_Append_EndIf_Comment(str,ending_what,settings);
    return str;
❱

◀private: static▶ void ☀Possibly_Append_EndIf_Comment(std::string & str, std::string const& ending_what, Define_Check_End_Comment_Settings const& settings)❰

    //TODO: could probably use comment creator
    if (settings.show){
        str += " ";
        
        if (settings.style == Comment_Style::BLOCK){
            str += "/* " + ending_what + " */";
        }
        else if (settings.style == Comment_Style::LINE){
            str += "//" + ending_what;
        }
    }
❱
