class

❪vector❫
❪"code/tools/transcompilers/old_unilang/structure/model/sections/meta/meta_section"❫
❪"code/utilities/linguistics/computer/frontends/parts/meta/settings/meta_options"❫
⚯
❪"code/utilities/types/strings/transformers/appending/lib"❫
❪"code/utilities/types/general/lib"❫
❪"code/utilities/types/converters/lib"❫
❪"code/utilities/types/strings/transformers/casing/lib"❫
⚞⚟

◀public: static▶ std::string ☀Get(std::vector<Token_Value> const& group_names, Meta_Group_Name_Tag_Options const& options)❰
    std::string str;
    
    if (!group_names.empty()){
        Append_With_Newline(str,"");
        
        auto tag = options.tag_marker + options.tag_name + " ";
        Append(str,tag);
        Call_Function_On_All_Elements_Except_Last_Element_Then_Call_Function_On_Last_Element(group_names,
            [&](Token_Value s){Append(str,Make_Capital_And_Underscored_In_User_Type_Format(as_string(s.value)) + " ");},
            [&](Token_Value s){Append_With_Newline(str,Make_Capital_And_Underscored_In_User_Type_Format(as_string(s.value)));});
        Append_With_Newline(str,options.group_start);
    }
    return str;
❱