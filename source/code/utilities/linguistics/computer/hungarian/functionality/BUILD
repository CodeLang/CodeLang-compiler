package(default_visibility = ["//visibility:public"])

load("//bazel/rules/hcp:hcp.bzl", "hcp")
load("//bazel/rules/cpp:object.bzl", "cpp_object")

# hcp(
#     name = "type_to_hungarian_notation_converter",
#     deps = [
#         "//code/tools/transcompilers/old_unilang/type_converters/type_to_hungarian/prefix_creators:hungarian_left_prefix_decider",
#         "//code/tools/transcompilers/old_unilang/type_converters/type_to_hungarian/prefix_creators:hungarian_type_prefix_decider",
#         "//code/utilities/linguistics/computer/hungarian/settings:identifier_notation_settings",
#     ],
# )

# hcp(
#     name = "data_member_to_hungarian_notation_converter",
#     deps = [
#         "//code/tools/transcompilers/old_unilang/structure/model/sections/data_member:data_member_item",
#         "//code/tools/transcompilers/old_unilang/structure/model/sections/method/arguments/argument:function_argument",
#         "//code/tools/transcompilers/old_unilang/structure/model/sections/method/arguments/argument:function_result",
#         "//code/tools/transcompilers/old_unilang/structure/print/derivers:type_name_deriver",
#         "//code/tools/transcompilers/old_unilang/type_converters/type_to_hungarian:type_to_hungarian_notation_converter",
#         "//code/tools/transcompilers/old_unilang/type_converters/type_to_hungarian/qualifier_stripper:type_qualifier_stripper",
#         "//code/utilities/linguistics/computer/hungarian/settings:identifier_notation_settings",
#         "//code/utilities/types/converters:lib",
#     ],
# )
