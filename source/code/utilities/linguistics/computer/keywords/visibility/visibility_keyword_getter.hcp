class

❪"code/utilities/linguistics/computer/source_language"❫
❪"code/utilities/linguistics/computer/keywords/visibility/language_visibility_getter"❫
❪"code/utilities/linguistics/computer/keywords/visibility/visibility_strs"❫
❪"code/utilities/code/query/data_member_visibility"❫
⚯
❪"code/utilities/types/map/lib"❫
❪"code/utilities/types/strings/transformers/casing/lib"❫
⚞⚟

◀public: static▶ std::string ☀Get(Class_Access const& access, Source_Language const& source_language)❰

    auto language_keywords = Language_Visibility_Getter::Get();
    
    //get the value out of the table if it exists
    if (Exists_In_Unordered_Map(language_keywords,source_language)){
        auto vis_specifiers = language_keywords.at(source_language);
        return Pick(vis_specifiers,access);
    }
    return "unknown";
    
❱

◀private: static▶ std::string ☀Pick(Visibility_Strs const& strs, Class_Access const& access)❰
    if (access == Class_Access::PUBLIC){
        return strs.public_str;
    }
    else if (access == Class_Access::PROTECTED){
        return strs.protected_str;
    }
    return strs.private_str;
    
❱