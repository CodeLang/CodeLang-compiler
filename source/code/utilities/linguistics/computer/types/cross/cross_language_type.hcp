class


❪"code/utilities/linguistics/computer/types/cross/language_type/language_type"❫
❪"code/utilities/types/tri_bool"❫
❪"code/tools/transcompilers/old_unilang/options/self_describe_type/inferred_type_properties"❫
⚯

⚞⚟

◀
public:

    // Programming Languages
    Language_Type c;
    Language_Type cpp;
    Language_Type d;
    Language_Type rust;
    Language_Type holyC;
    Language_Type java;
    Language_Type csharp;
    Language_Type pascal;
    Language_Type ml;
    Language_Type go;
    Language_Type elm;
    Language_Type cobol;
    Language_Type ada;
    Language_Type fsharp;
    Language_Type fortran;
    Language_Type haskell;
    Language_Type kotlin;
    Language_Type nim;
    Language_Type scheme;
    Language_Type racket;
    Language_Type scala;
    Language_Type swift;
    Language_Type python;
    Language_Type brain_fuck;
    Language_Type processing;
    
    // Interface Definition Languages
    Language_Type protocol_buffers;
    Language_Type thrift;
    Language_Type cap_n_proto;
    Language_Type hidl;

    // Other Languages that have some kind of types?
	//...

	
	// Language Agnostic Properties:
    //a description about how the type should be used in UniLang
    //why a user would chose to use the type.
    std::string description;

    //whether its some kind of container / grouping / collection of data
    //can influence how we name our identifiers and things as well
    //properties of types that we can derive from the type name
	Inferred_Type_Properties inferred_properties;
    
▶
