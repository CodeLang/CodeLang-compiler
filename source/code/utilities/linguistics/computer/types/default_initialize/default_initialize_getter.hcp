class

❪string❫
❪"code/tools/transcompilers/unilang/structure/model/sections/data_member/data_member_item"❫
❪"code/utilities/linguistics/computer/source_language"❫
⚯
❪"code/tools/transcompilers/unilang/literal_suffix_getter/adjuster/literal_adjuster"❫
❪"code/tools/transcompilers/unilang/structure/print/derivers/type_name_deriver"❫
❪"code/utilities/types/strings/observers/converting/lib"❫
❪"code/utilities/types/converters/lib"❫
⚞⚟


◀public: static▶ std::string ☀Possibly_Get_Default_Value(Data_Member_Item const& it, Source_Language const& source_language)❰

    std::string default_seperator = " = ";
    std::string result;
    if (!it.default_value.value.empty()){
        result += default_seperator;
        auto language_type_name = Type_Name_Deriver::Derive_Name(it,source_language);
        std::string literal = Literal_Adjuster::Get_Adjusted(language_type_name,as_string(it.default_value.value));
        result += literal;
    }
    return result;
❱