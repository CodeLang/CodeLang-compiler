class
❪vector❫
❪string❫
❪"code/utilities/deps/external/bazel_spawn_proto/lib"❫
❪"code/utilities/deps/external/bazel_analysis_proto/lib"❫
❪"code/utilities/program/call/process_spawn/timed/timed_process_results"❫
❪"code/utilities/deps/external/bazel_build_event_stream_proto/lib"❫
❪"code/utilities/deps/external/bazel_build_proto/lib"❫
❪"code/utilities/deps/external/bazel_workspace_log_proto/lib"❫
⚯
⚞⚟

◀
public:
    
    
    //the command used to get the cquery results and the results of running the command
    std::string ፠command፠;
    Timed_Process_Results ፠spawn_results፠;
    
    //bes output file information
    double ፠bes_deserialization_time_ms፠;
    long ፠bes_file_size፠;
    std::vector<build_event_stream::BuildEvent> build_events;
    
    //workspace log information
    double ፠workspace_deserialization_time_ms፠;
    long ፠workspace_file_size፠;
    std::vector<workspace_log::WorkspaceEvent> workspace_events;
    
    //resolved repos information (you'll need to parse skylark)
    double ፠resolved_repos_deserialization_time_ms፠;
    long ፠resolved_repos_file_size፠;
    std::string resolved_repos_bzl;
    
    //profile information (we could have compressed it, but didn't)
    //this data can also be written to a file and used with bazel analyze-profile
    double ፠profile_deserialization_time_ms፠;
    long ፠profile_file_size፠;
    std::string profile;
▶

