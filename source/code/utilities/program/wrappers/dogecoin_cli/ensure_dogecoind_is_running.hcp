class
⚯
⚞⚟

◀public: static▶ void ☀Go()❰

    std::string tool_name = "dogecoind";
    Make_Sure_Deamon_Is_Running(tool_name);
    Make_Sure_Deamon_Is_Accepting_Requests(tool_name);
    
    
    
❱

◀private: static▶ void ☀Make_Sure_Deamon_Is_Running(std::string const& tool_name)❰

    //if the process isn't running, start it.
    if (!Process_Is_Running(tool_name)){
        std::cout << tool_name << " is not running.  Starting now." << std::endl;
        Spawn_DogecoinD();
        std::cout << "spawned" << std::endl;
    }
    
    while (!Process_Is_Running(tool_name)){
        std::cout << "waiting for " << tool_name << " to start" << std::endl;
        Sleep_For_N_Seconds(1);
    }
    std::cout << tool_name << " is running!" << std::endl;

❱
◀private: static▶ void ☀Make_Sure_Deamon_Is_Accepting_Requests(std::string const& tool_name)❰

    //even though the process is running, it might not be ready.
    //it has to "Loading block index..." which can take some time
    //especially if the blockchain is far behind.  Let's wait until that's ready
    //a successful ping should ensure we are ready
    while (!Ping_To_DogecoinD_Succeeds()){
        std::cout << tool_name << " is not responding to requests.  It's probably 'Loading the block index'." << std::endl;
        Sleep_For_N_Seconds(5);
    }
    
    std::cout << tool_name << " is running and accepting requests!" << std::endl;
❱

◀private: static▶ void ☀Spawn_DogecoinD()❰

    std::string command;
    command += Dogecoin_Tools::Dogecoind_Path();
    //command += " &";
    no_hup_execute_quietly_in_background(command);
    
❱

◀private: static▶ bool ☀Ping_To_DogecoinD_Succeeds()❰

    std::string command;
    command += Dogecoin_Tools::Dogecoin_Cli_Path();
    command += " ";
    command += "ping";
    
    return Successful_Run_Of_Command(command);
    
❱