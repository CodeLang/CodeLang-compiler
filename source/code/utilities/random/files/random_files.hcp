class
❪string❫
⚯
❪"crossguid/guid"❫
❪"code/utilities/filesystem/paths/lib"❫
⚞⚟



//DESKTOP
◀public: static▶ std::string ☀Random_Desktop_Directory()❰
    std::string folder = Full_Path_To_Desktop();
    folder += xg::newGuid().str();
    return folder;
❱
◀public: static▶ std::string ☀Desktop_Filename(std::string const& name)❰
    std::string file = Full_Path_To_Desktop();
    file += name;
    return file;
❱
◀public: static▶ std::string ☀Random_Desktop_Filename()❰
    std::string file = Full_Path_To_Desktop();
    file += xg::newGuid().str();
    return file;
❱
◀public: static▶ std::string ☀Random_Desktop_Filename_With_Extension(std::string const& ext)❰
    std::string file = Full_Path_To_Desktop();
    file += xg::newGuid().str();
    file += "." + ext;
    return file;
❱
◀public: static▶ std::string ☀Random_Desktop_Json_Filename()❰
    return Random_Desktop_Filename_With_Extension("json");
❱
◀public: static▶ std::string ☀Random_Desktop_Db_Filename()❰
    return Random_Desktop_Filename_With_Extension("db");
❱



//TMP
◀public: static▶ std::string ☀Random_Tmp_Directory()❰
    std::string folder = "/tmp/";
    folder += xg::newGuid().str();
    return folder;
❱
◀public: static▶ std::string ☀Tmp_Filename(std::string const& name)❰
    std::string file = "/tmp/";
    file += name;
    return file;
❱
◀public: static▶ std::string ☀Random_Tmp_Filename()❰
    std::string file = "/tmp/";
    file += xg::newGuid().str();
    return file;
❱
◀public: static▶ std::string ☀Random_Tmp_Filename_With_Extension(std::string const& ext)❰
    std::string file = "/tmp/";
    file += xg::newGuid().str();
    file += "." + ext;
    return file;
❱

◀public: static▶ std::string ☀Random_Tmp_Json_Filename()❰
    return Random_Tmp_Filename_With_Extension("json");
❱
◀public: static▶ std::string ☀Random_Tmp_Db_Filename()❰
    return Random_Tmp_Filename_With_Extension("db");
❱