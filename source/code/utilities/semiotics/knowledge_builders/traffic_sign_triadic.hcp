class
❪iostream❫
❪vector❫
❪string❫
❪cmath❫
❪utility❫
❪"code/utilities/semiotics/triadic_knowledge"❫
⚯
⚞⚟

◀public: static▶ Triadic_Knowledge ☀Get()❰
    Triadic_Knowledge x;
    
    //layer 1
    x.signs.emplace_back(Green_On());
    x.signs.emplace_back(Green_Off_Meaning_1());
    x.signs.emplace_back(Green_Off_Meaning_2());
    x.signs.emplace_back(Yellow_On());
    x.signs.emplace_back(Yellow_Off_Meaning_1());
    x.signs.emplace_back(Yellow_Off_Meaning_2());
    x.signs.emplace_back(Red_On());
    x.signs.emplace_back(Red_Off_Meaning_1());
    x.signs.emplace_back(Red_Off_Meaning_2());
    
    //layer 2
    x.signs.emplace_back(Only_Go());
    x.signs.emplace_back(Only_Slow());
    x.signs.emplace_back(Only_Stop());
    
    return x;
❱

◀public: static▶ Triadic_Sign ☀Green_On()❰
    Triadic_Sign x;
    x.representation = "green light on";
    x.object = "go";
    x.interpretant = "only go";
    x.type = Sign_Type::SYMBOL;
    return x;
❱
◀public: static▶ Triadic_Sign ☀Green_Off_Meaning_1()❰
    Triadic_Sign x;
    x.representation = "green light off";
    x.object = "no go";
    x.interpretant = "only slow";
    x.type = Sign_Type::SYMBOL;
    return x;
❱
◀public: static▶ Triadic_Sign ☀Green_Off_Meaning_2()❰
    Triadic_Sign x;
    x.representation = "green light off";
    x.object = "no go";
    x.interpretant = "only stop";
    x.type = Sign_Type::SYMBOL;
    return x;
❱
◀public: static▶ Triadic_Sign ☀Yellow_On()❰
    Triadic_Sign x;
    x.representation = "yellow light on";
    x.object = "slow";
    x.interpretant = "only slow";
    x.type = Sign_Type::SYMBOL;
    return x;
❱
◀public: static▶ Triadic_Sign ☀Yellow_Off_Meaning_1()❰
    Triadic_Sign x;
    x.representation = "yellow light off";
    x.object = "no slow";
    x.interpretant = "only go";
    x.type = Sign_Type::SYMBOL;
    return x;
❱
◀public: static▶ Triadic_Sign ☀Yellow_Off_Meaning_2()❰
    Triadic_Sign x;
    x.representation = "yellow light off";
    x.object = "no slow";
    x.interpretant = "only stop";
    x.type = Sign_Type::SYMBOL;
    return x;
❱
◀public: static▶ Triadic_Sign ☀Red_On()❰
    Triadic_Sign x;
    x.representation = "red light on";
    x.object = "stop";
    x.interpretant = "only stop";
    x.type = Sign_Type::SYMBOL;
    return x;
❱
◀public: static▶ Triadic_Sign ☀Red_Off_Meaning_1()❰
    Triadic_Sign x;
    x.representation = "red light off";
    x.object = "no stop";
    x.interpretant = "only slow";
    x.type = Sign_Type::SYMBOL;
    return x;
❱
◀public: static▶ Triadic_Sign ☀Red_Off_Meaning_2()❰
    Triadic_Sign x;
    x.representation = "red light off";
    x.object = "no stop";
    x.interpretant = "only go";
    x.type = Sign_Type::SYMBOL;
    return x;
❱
◀public: static▶ Triadic_Sign ☀Only_Go()❰
    Triadic_Sign x;
    x.representation = "only go";
    x.object = "should go";
    x.interpretant = "car goes";
    x.type = Sign_Type::SYMBOL;
    return x;
❱
◀public: static▶ Triadic_Sign ☀Only_Slow()❰
    Triadic_Sign x;
    x.representation = "only slow";
    x.object = "should slow";
    x.interpretant = "car slows";
    x.type = Sign_Type::SYMBOL;
    return x;
❱
◀public: static▶ Triadic_Sign ☀Only_Stop()❰
    Triadic_Sign x;
    x.representation = "only stop";
    x.object = "should stop";
    x.interpretant = "car stops";
    x.type = Sign_Type::SYMBOL;
    return x;
❱


