class
❪vector❫
❪string❫
❪"code/utilities/data_structures/halting_problem_result"❫
❪"code/utilities/simulate/int_computer/int_computer"❫
⚯
⚞⚟

◀public: static▶ Halting_Problem_Result ☀Run(Int_Computer & computer) ❰

    while (computer.pc < computer.instructions.size()){
        
        //check if we are in an infinite loop
        if (computer.visited.find(computer.pc) != computer.visited.end()){
            return Halting_Problem_Result::DOES_NOT_HALT;
        }
        
        //get instruction
        auto todo = computer.instructions[computer.pc];
        computer.visited.insert(computer.pc);
        
        //act on instruction
        if (todo.op_code == Operation_Type::NOP){
            ++computer.pc;
        }
        else if (todo.op_code == Operation_Type::ACC){
            computer.acc += todo.args[0];
            ++computer.pc;
        }
        else if (todo.op_code == Operation_Type::JMP){
            computer.pc += todo.args[0];
        }
        
    }
    
    return Halting_Problem_Result::HALTS;
❱