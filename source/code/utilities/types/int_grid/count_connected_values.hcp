class
⚯
⚞⚟

◀public: static▶ size_t ☀Count(int_grid grid, Position start_index) ❰

  int initial_value = grid[start_index.x][start_index.y];

  // start the analyzes from the index given
  std::queue<std::string> analyze;
  analyze.push(Type_To_Json_String::As_Minified_JSON_String(start_index));
  
  auto seen = Observe_Each_Item_In_Queue_Avoiding_Duplicates(analyze,[&](std::queue<std::string> & q, std::string str){
    
    //get element to analyze
    auto pos = From_JSON_String<Position>(str);
    
    //decide which neighbors to analyze next
    auto neighbors = Get_Valid_Neighbors::Get(grid,pos);
    
    for (auto it: neighbors){
      if (grid[it.x][it.y] == initial_value){
        q.push(Type_To_Json_String::As_Minified_JSON_String(it));
      }
    }
    
  });
  
  return seen.size();
❱