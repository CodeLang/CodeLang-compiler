class
⚯
⚞⚟

◀public: static▶ std::vector<Position> ☀Get(int_grid const& grid, Position index) ❰

  auto up = index;
  auto down = index;
  auto left = index;
  auto right = index;
  
  up.y-=1;
  down.y+=1;
  left.x-=1;
  right.x+=1;
  
  std::vector<Position> poses;
  if (Is_Valid_Grid_Space(grid,up)){
    poses.emplace_back(up);
  }
  if (Is_Valid_Grid_Space(grid,down)){
    poses.emplace_back(down);
  }
  if (Is_Valid_Grid_Space(grid,left)){
    poses.emplace_back(left);
  }
  if (Is_Valid_Grid_Space(grid,right)){
    poses.emplace_back(right);
  }
  
  return poses;

❱


//TODO: move to utility
◀private: static▶ bool ☀Is_Valid_Grid_Space(int_grid const& grid, Position index) ❰

  auto width = grid[0].size();
  auto height = grid.size();
  
  if (index.x >= width){
    return false;
  }
  
  if (index.y >= height){
    return false;
  }
  
  return true;
❱