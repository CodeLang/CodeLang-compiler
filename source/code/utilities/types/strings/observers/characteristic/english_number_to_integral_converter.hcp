class
❪string❫
⚯
❪map❫
❪"code/utilities/types/strings/transformers/casing/lib"❫
❪"code/utilities/types/vectors/observers/lib"❫
⚞⚟


◀public: static▶ std::string ☀Convert(std::string const& str)❰

    //TODO this needs implemented with rules

    auto word = As_Lowercase(str);
    std::map<std::string,std::string> mapping;
    mapping.insert({"zero","0"});
    mapping.insert({"one","1"});
    mapping.insert({"two","2"});
    mapping.insert({"three","3"});
    mapping.insert({"four","4"});
    mapping.insert({"five","5"});
    mapping.insert({"six","6"});
    mapping.insert({"seven","7"});
    mapping.insert({"eight","8"});
    mapping.insert({"nine","9"});
    mapping.insert({"ten","10"});
    mapping.insert({"eleven","11"});
    mapping.insert({"twelve","12"});
    mapping.insert({"thirteen","13"});
    
    auto found = mapping.find(word);
    if (found != mapping.end()){
        return found->second;
    }
    return str;
❱