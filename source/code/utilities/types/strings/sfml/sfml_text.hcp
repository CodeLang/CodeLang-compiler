class
❪string❫
❪iostream❫
❪vector❫
❪SFML/Graphics.hpp❫
⚯
❪algorithm❫
⚞⚟

◀public: static▶ void ☀Sort_By_Length(std::vector<sf::Text> & words) ❰

    auto temp = words;
    std::sort(temp.begin(),temp.end(),[](sf::Text a, sf::Text b){
        std::string str1 = a.getString();
        std::string str2 = b.getString();
        return str1.size() < str2.size();
    });
    
    for (size_t i = 0; i < temp.size(); ++i){
        auto pos = words[i].getPosition();
        words[i] = temp[i];
        words[i].setPosition(pos);
    }
❱

◀public: static▶ void ☀Alphabetize(std::vector<sf::Text> & words) ❰

    auto temp = words;
    std::sort(temp.begin(),temp.end(),[](sf::Text a, sf::Text b){
        std::string str1 = a.getString();
        std::string str2 = b.getString();
        return str1 < str2;
    });
    
    for (size_t i = 0; i < temp.size(); ++i){
        auto pos = words[i].getPosition();
        words[i] = temp[i];
        words[i].setPosition(pos);
    }
    
❱