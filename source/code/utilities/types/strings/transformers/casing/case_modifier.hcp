class
❪string❫
❪"code/utilities/types/strings/transformers/casing/case_format_style"❫
⚯
❪"code/utilities/types/strings/transformers/casing/lib"❫

⚞⚟

//TODO: implement all cases
◀public: static▶ std::string ☀As_Modified_Casing(Case_Format_Style const& style, std::string const& str) ❰

    switch (style){
        case Case_Format_Style::UPPER_CASE:                       return As_Uppercase(str);
        case Case_Format_Style::LOWER_CASE:                       return As_Lowercase(str);
        case Case_Format_Style::BUMPY_CASE:                       return "";
        case Case_Format_Style::MIXED_CASE:                       return "";
        case Case_Format_Style::HUMP_BACK_NOTATION:               return "";
        case Case_Format_Style::BI_CAPITALIZED:                   return "";
        case Case_Format_Style::INTER_CAPS:                       return "";
        case Case_Format_Style::STUDLY_CAPS:                      return "";
        case Case_Format_Style::CAPS_PUSHED:                      return As_Capital_And_Pushed_Together(str);
        case Case_Format_Style::CAMEL_CASE:                       return As_Camel_Case(str);
        case Case_Format_Style::CAMEL_CASE_PRESERVE_SUFFIX_UNITS: return As_Capital_And_Pushed_Together_Preserve_Underscores_With_Lowercase_After(str);
        case Case_Format_Style::LOWER_CAMEL_CASE:                 return As_Lower_Camel_Case(str);
        case Case_Format_Style::PASCAL_CASE:                      return As_Camel_Case(str);
        case Case_Format_Style::UPPER_CAMEL_CASE:                 return As_Camel_Case(str);
        case Case_Format_Style::PROPER_CASE:                      return "";
        case Case_Format_Style::WIKI_CASE:                        return "";
        case Case_Format_Style::EMBEDDED_UNDERSCORE:              return "";
        case Case_Format_Style::UPPER_CASE_WITH_UNDERSCORES:      return As_All_Capital_Letters_With_Spaces_As_Underscores(str);
        case Case_Format_Style::LOWER_CASE_WITH_UNDERSCORES:      return As_All_Lowercase_Letters_With_Spaces_As_Underscores(str);
        case Case_Format_Style::SNAKE_CASE:                       return As_All_Lowercase_Letters_With_Spaces_As_Underscores(str);
        case Case_Format_Style::UPPER_CASE_WITH_HYPENS:           return "";
        case Case_Format_Style::LOWER_CASE_WITH_HYPENS:           return "";
        case Case_Format_Style::KEBAB_CASE:                       return "";
        case Case_Format_Style::SPINAL_CASE:                      return "";
        case Case_Format_Style::LISP_CASE:                        return "";
        case Case_Format_Style::TRAIN_CASE:                       return "";
        case Case_Format_Style::CATERPILLAR_CASE:                 return "";
        case Case_Format_Style::TITLE_CASE:                       return "";
        case Case_Format_Style::SENTENCE_CASE:                    return "";
        case Case_Format_Style::GERMAN_CASE:                      return "";
        case Case_Format_Style::CANONICAL_STUDLY_CAPS:            return "";
        case Case_Format_Style::DOT_CASE:                         return "";
        case Case_Format_Style::SWAP_CASE:                        return "";
        case Case_Format_Style::SEPERATE_WITH_FORWARD_SLASH:      return "";
        case Case_Format_Style::SEPERATE_WITH_BACKWARD_SLASH:     return "";
        case Case_Format_Style::AP_STYLE_CAPITALIZATION:          return "";
        case Case_Format_Style::PRESERVE:                         return str;
	//need a random case (different kinds of random though)
        default:;
    }
    
    return str;
❱