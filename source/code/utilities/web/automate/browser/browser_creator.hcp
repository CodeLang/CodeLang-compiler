class
❪boost/python.hpp❫
⚯
⚞⚟




◀public: static▶ boost::python::object ☀Create() ❰

using namespace boost::python;

    bool headless = false;

    //initialize python environment
    Py_Initialize();
    object main_module((
      handle<>(borrowed(PyImport_AddModule("__main__")))));
      object ns = main_module.attr("__dict__");
      
    //include python imports
    boost::python::exec("from selenium import webdriver", ns);
    boost::python::exec("from selenium.webdriver.chrome.options import Options", ns);
    boost::python::exec("from selenium.webdriver.common.keys import Keys", ns);
    boost::python::exec("from selenium.webdriver.support.ui import Select", ns);

    //customize browser
    boost::python::exec("chrome_options = Options()", ns);
    boost::python::exec("chrome_options.add_argument('user-data-dir=/home/flighty/.config/chromium/test_profile')", ns);
    boost::python::exec("chrome_options.add_argument('--ignore-certificate-errors')", ns);
    boost::python::exec("chrome_options.add_argument('--disable-notifications')", ns);
    boost::python::exec("chrome_options.add_argument('--disable-extensions')", ns);
    boost::python::exec("chrome_options.add_argument('--start-maximized')", ns);
    
    //add a user agent so we don't get caught
    boost::python::exec("chrome_options.add_argument('user-agent=Mozilla/5.0 (Macintosh; "
                        "Intel Mac OS X 10_11_6) AppleWebKit/601.7.7 (KHTML, like Gecko) "
                        "Version/9.1.2 Safari/601.7.7')", ns);
    //browser.execute_script("return navigator.userAgent")
    
    if (headless){
        boost::python::exec("chrome_options.add_argument('--headless')", ns);
    }
    
    boost::python::exec("browser = webdriver.Chrome(chrome_options=chrome_options)", ns);
    
    //Once set, the implicit wait is set for the life of the WebDriver object.
    boost::python::exec("browser.implicitly_wait(10)", ns);
    
    return ns;
❱